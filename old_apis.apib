FORMAT: 1A
HOST: http://example.com/

# WP ERP

WP ERP has a simple API which allow consumers to access resources of CRM, HRM & Accounting module.

# Authentication

We recommend you to use OAuth2 for the authentication purpose.
For OAuth2 Server use [WP OAuth Server](https://wordpress.org/plugins/oauth2-provider/) plugin on your ERP site and as an OAuth2 Client use whatever you're comfortable with.
You can also check [thephpleague/oauth2-client](https://github.com/thephpleague/oauth2-client).

## OAuth2 [/oauth/token]

### Get Access Token [POST]

+ Request (application/json)

        {
            "client_id":"reii1MytZVJUn3n1Rdq5z4nLN5BdOM",
            "client_secret":"Df1Wy2I6vH2fCpiZradRfNVCyJI9Xx",
            "code":"8hv0tdkumtnu6uefdpkkeji8hhgp8tjpjzqqyquo",
            "grant_type":"authorization_code",
            "redirect_uri":"http://localhost/oauth/index.php"
        }

+ Response 200 (application/json)

    + Body

            {
              "access_token": "d11ii3t4ucg3hgzzwnole7epmoygoquge9gvzeb9",
              "expires_in": 86400,
              "token_type": "Bearer",
              "scope": "basic",
              "refresh_token": "byz4rvhqegv2qns1azai47yxzhazbv8ytsv8wdyo"
            }


## Access Resources [/wp-json/erp/v1]

### Using Access Token [GET]

+ Request
    + Headers

            Authorization: Bearer <ACCESS_TOKEN>

+ Response 200 (application/json)


# Group Contacts

## Manage Contact Collection [/wp-json/erp/v1/crm/contacts{?type}{?per_page}{?page}{?search}{?include}]

### List All Contacts [GET]

+ Parameters

    + type (string, optional) - The type of contact. eg. contact, company
        + Default: `contact`
    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.
    + include: owner (string, optional) - The additional object to be included.


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 2033
            X-WP-TotalPages: 102
            Link: <http://example.com/wp-json/erp/v1/crm/contacts?page=2>; rel="next"

    + Body

            [
                {
                    "id":2016,
                    "first_name":"Madisen",
                    "last_name":"Nienow",
                    "email":"tHarvey@gmail.com",
                    "company":"",
                    "phone":"517.709.8784",
                    "mobile":"",
                    "other":"",
                    "website":"http://www.Runolfsson.com/",
                    "fax":"",
                    "notes":"",
                    "street_1":"6143 Jan Valleys Suite 827",
                    "street_2":"",
                    "city":"Yadiraland",
                    "state":"FL",
                    "postal_code":"97214",
                    "country":"US",
                    "currency":"ILS",
                    "types": [
                        "contact"
                    ],
                    "user_id":0,
                    "owner": {
                        "ID": 1,
                        "user_nicename": "john",
                        "user_email": "john@doe.com",
                        "user_url": "http://www.doe.com",
                        "display_name": "John Wick",
                        "avatar": "https://gravatar.com",
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/users/1",
                            "collection":"http://example.com/wp-json/erp/v1/users"
                        }
                    },
                    "life_stage": "customer",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/crm/contacts/2016",
                        "collection":"http://example.com/wp-json/erp/v1/crm/contacts"
                    }
                }
            ]


### Create a New Contact [POST]

+ Request (application/json)

        {
            "type":"contact",
            "first_name":"Madisen",
            "last_name":"Nienow",
            "email":"tHarvey@gmail.com",
            "company":"",
            "phone":"517.709.8784",
            "mobile":"",
            "other":"",
            "website":"http://www.Runolfsson.com/",
            "fax":"",
            "notes":"",
            "street_1":"6143 Jan Valleys Suite 827",
            "street_2":"",
            "city":"Yadiraland",
            "state":"FL",
            "postal_code":"97214",
            "country":"US",
            "currency":"ILS",
            "owner": 1,
            "life_stage": "customer"
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/2016

    + Body

            {
                "id":2016,
                "first_name":"Madisen",
                "last_name":"Nienow",
                "email":"tHarvey@gmail.com",
                "company":"",
                "phone":"517.709.8784",
                "mobile":"",
                "other":"",
                "website":"http://www.Runolfsson.com/",
                "fax":"",
                "notes":"",
                "street_1":"6143 Jan Valleys Suite 827",
                "street_2":"",
                "city":"Yadiraland",
                "state":"FL",
                "postal_code":"97214",
                "country":"US",
                "currency":"ILS",
                "types": [
                    "contact"
                ],
                "life_stage": "customer",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/crm/contacts/2016",
                    "collection":"http://example.com/wp-json/erp/v1/crm/contacts"
                }
            }


+ Request (application/json)

        {
            "type":"company",
            "email":"info@wedevs.com",
            "company":"weDevs",
            "phone":"517.709.8784",
            "mobile":"",
            "other":"",
            "website":"https://www.wedevs.com/",
            "fax":"",
            "notes":"",
            "street_1":"6143 Jan Valleys Suite 827",
            "street_2":"",
            "city":"Yadiraland",
            "state":"FL",
            "postal_code":"97214",
            "country":"US",
            "currency":"ILS",
            "life_stage": "customer"
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/200

    + Body

            {
                "id":200,
                "first_name":"",
                "last_name":"",
                "email":"info@wedevs.com",
                "company":"weDevs",
                "phone":"517.709.8784",
                "mobile":"",
                "other":"",
                "website":"https://www.wedevs.com/",
                "fax":"",
                "notes":"",
                "street_1":"6143 Jan Valleys Suite 827",
                "street_2":"",
                "city":"Yadiraland",
                "state":"FL",
                "postal_code":"97214",
                "country":"US",
                "currency":"ILS",
                "types": [
                    "company"
                ],
                "life_stage": "customer",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/crm/contacts/200",
                    "collection":"http://example.com/wp-json/erp/v1/crm/contacts"
                }
            }

## Contact Bulk Operation [/wp-json/erp/v1/crm/contacts/bulk]

### Create New Contacts [POST]

+ Request (application/json)

        [
            {
                "type": "contact",
                "first_name": "Madisen",
                "last_name": "Nienow",
                "email": "tHarvey@gmail.com",
                "company": "",
                "phone": "517.709.8784",
                "mobile": "",
                "other": "",
                "website": "http://www.Runolfsson.com/",
                "fax": "",
                "notes": "",
                "street_1": "6143 Jan Valleys Suite 827",
                "street_2": "",
                "city": "Yadiraland",
                "state": "FL",
                "postal_code": "97214",
                "country": "US",
                "currency": "ILS",
                "life_stage": "customer"
            },
            {
                "type": "contact",
                "first_name": "Russell",
                "last_name": "H. Degree",
                "email": "RussellHDegree@rhyta.com",
                "company": "",
                "phone": "305-349-2831",
                "mobile": "",
                "other": "",
                "website": "http://coopcog.com",
                "fax": "",
                "notes": "",
                "street_1": "980 Tyler Avenue",
                "street_2": "",
                "city": "Miami",
                "state": "FL",
                "postal_code": "33128",
                "country": "US",
                "currency": "ILS",
                "life_stage": "customer"
            }
        ]

+ Response 201 (application/json)


## Manage Single Contact [/wp-json/erp/v1/crm/contacts/{id}{?include}]

### Retrieve a Contact [GET]

+ Parameters

    + include: owner (string, optional) - The additional object to be included.

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/2016

    + Body

            {
                "id":2016,
                "first_name":"Madisen",
                "last_name":"Nienow",
                "email":"tHarvey@gmail.com",
                "company":"",
                "phone":"517.709.8784",
                "mobile":"",
                "other":"",
                "website":"http://www.Runolfsson.com/",
                "fax":"",
                "notes":"",
                "street_1":"6143 Jan Valleys Suite 827",
                "street_2":"",
                "city":"Yadiraland",
                "state":"FL",
                "postal_code":"97214",
                "country":"US",
                "currency":"ILS",
                "types": [
                    "contact"
                ],
                "user_id":0,
                "owner": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "life_stage": "customer",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/crm/contacts/2016",
                    "collection":"http://example.com/wp-json/erp/v1/crm/contacts"
                }
            }


### Update a Contact [PUT]

+ Request (application/json)

        {
            "first_name":"Madisen",
            "last_name":"Nienow",
            "company":"",
            "phone":"517.709.8784",
            "mobile":"",
            "other":"",
            "website":"http://www.Runolfsson.com/",
            "fax":"",
            "notes":"",
            "street_1":"6143 Jan Valleys Suite 827",
            "street_2":"",
            "city":"Yadiraland",
            "state":"FL",
            "postal_code":"97214",
            "country":"US",
            "currency":"ILS",
            "owner": 1,
            "life_stage": "customer",
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/2016

    + Body

            {
                "id":2016,
                "first_name":"Madisen",
                "last_name":"Nienow",
                "email":"tHarvey@gmail.com",
                "company":"",
                "phone":"517.709.8784",
                "mobile":"",
                "other":"",
                "website":"http://www.Runolfsson.com/",
                "fax":"",
                "notes":"",
                "street_1":"6143 Jan Valleys Suite 827",
                "street_2":"",
                "city":"Yadiraland",
                "state":"FL",
                "postal_code":"97214",
                "country":"US",
                "currency":"ILS",
                "types": [
                    "contact"
                ],
                "user_id":0,
                "life_stage": "customer",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/crm/contacts/2016",
                    "collection":"http://example.com/wp-json/erp/v1/crm/contacts"
                }
            }


### Delete a Contact [DELETE]

+ Response 204



# Group Contact Groups

## Manage Group Collection [/wp-json/erp/v1/crm/contacts/groups{?per_page}{?page}{?search}]

### List All Groups [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 36
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/crm/contacts/groups?page=2>; rel="next"

    + Body

            [
                {
                    "id":2,
                    "name":"Bergstrom Ltd",
                    "description":"Dolore quia ducimus velit et.",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/crm/contacts/groups/2",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                },
                {
                    "id":1,
                    "name":"Schimmel-Lynch",
                    "description":"Odio ipsum non consequatur ut et.",
                    "_links":{
                        "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                }
            ]


### Create a New Group [POST]

+ Request (application/json)

        {
            "name":"Schimmel-Lynch",
            "description":"Odio ipsum non consequatur ut et."
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/groups/1

    + Body

            {
                "id":1,
                "name":"Schimmel-Lynch",
                "description":"Odio ipsum non consequatur ut et.",
                "_links":{
                    "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                    "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                }
            }

## Manage Single Group [/wp-json/erp/v1/crm/contacts/groups/{id}]

### Retrieve a Group [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/groups/1

    + Body

            {
                "id":1,
                "name":"Schimmel-Lynch",
                "description":"Odio ipsum non consequatur ut et.",
                "_links":{
                    "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                    "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                }
            }


### Update a Group [PUT]

+ Request (application/json)

        {
            "name":"Schimmel-Lynch",
            "description":"Odio ipsum non consequatur ut et."
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/contacts/groups/1

    + Body

            {
                "id":1,
                "name":"Schimmel-Lynch",
                "description":"Odio ipsum non consequatur ut et.",
                "_links":{
                    "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                    "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                }
            }


### Delete a Group [DELETE]

+ Response 204


# Group Subscribe Contact to Group

## Manage Subscribed Contacts [/wp-json/erp/v1/crm/contacts/groups/{id}/subscribes{?per_page}{?page}]

### List All Subscribed Contacts [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 36
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/crm/contacts/groups/5/subscribes?page=2>; rel="next"

    + Body

            [
                {
                    "id": 10,
                    "first_name": "Khalil",
                    "last_name": "Yundt",
                    "email": "eChristiansen@yahoo.com",
                    "company": "Little, Welch and Little",
                    "phone": "401-479-8230x414",
                    "mobile": "",
                    "other": "",
                    "website": "http://www.DuBuque.com/",
                    "fax": "",
                    "notes": "",
                    "street_1": "294 Schultz Squares Suite 391",
                    "street_2": "",
                    "city": "Murphymouth",
                    "state": "KRN",
                    "postal_code": "47118-2307",
                    "country": "IR",
                    "currency": "GBP",
                    "types": [
                        "contact"
                    ],
                    "user_id": 0,
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/crm/contacts/10",
                        "collection": "http://example.com/wp-json/erp/v1/crm/contacts"
                    }
                }
            ]


### Subscribe Contacts to Group [POST]

+ Request (application/json)

        {
            "contact_ids": "508, 509"
        }

+ Response 201 (application/json)


## Manage Single Subscribed Contact [/wp-json/erp/v1/crm/contacts/groups/{group_id}/subscribes/{contact_id}]

### Unsubscribe a Contact [DELETE]

+ Response 204


# Group Activities

## Manage Activity Collection [/wp-json/erp/v1/crm/activities{?type}{?per_page}{?page}]

### List All Activities [GET]

+ Parameters

    + type: log|note|email|schedule|task (string, optional) - The type of activities.
        + Default: `log`
    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 36
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/crm/activities?page=2>; rel="next"

    + Body

            [
                {
                    "id": 47,
                    "type": "log",
                    "contact_id": 2048,
                    "created_by": {
                        "ID": 1,
                        "user_nicename": "john",
                        "user_email": "john@doe.com",
                        "user_url": "http://www.doe.com",
                        "display_name": "John Wick",
                        "avatar": "https://gravatar.com",
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/users/1",
                            "collection":"http://example.com/wp-json/erp/v1/users"
                        }
                    },
                    "date_time": "2016-10-02 13:00:00",
                    "log_type": "email",
                    "content": "<div><!--block-->Email Log</div>",
                    "title": "Subject Line",
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/crm/activities/47",
                        "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                    }
                }
            ]


### Create a New Activity [POST]

+ Request (application/json)

        {
            "type": "log",
            "contact_id": 2048,
            "date_time": "2016-10-02 13:00:00",
            "log_type": "email",
            "content": "<div><!--block-->Email Log</div>",
            "title": "Subject Line",
        }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/47

    + Body

            {
                "id": 47,
                "type": "log",
                "contact_id": 2048,
                "created_by": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "date_time": "2016-10-02 13:00:00",
                "log_type": "email",
                "content": "<div><!--block-->Email Log</div>",
                "title": "Subject Line",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/47",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }


+ Request (application/json)

        {
            "type": "note",
            "contact_id": 2048,
            "content": "This a note for you.",
        }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/59

    + Body

            {
                "id": 59,
                "type": "note",
                "contact_id": 2048,
                "created_by": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "content": "This is a note for you.",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/59",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }


+ Request (application/json)

        {
            "id": 61,
            "type": "email",
            "contact_id": 2048,
            "subject": "Email Subject",
            "body": "Email Body",
        }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/61

    + Body

            {
                "id": 61,
                "type": "email",
                "contact_id": 2048,
                "created_by": {
                    "ID": "1",
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "",
                    "display_name": "John Wick",
                    "avatar": "http://gravatar.com"
                },
                "subject": "Email Subject",
                "body": "Email Body",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/61",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }


+ Request (application/json)

        {
            "type": "schedule",
            "contact_id": 2048,
            "title": "Schedule Title",
            "content": "Schedule Content",
            "start_date_time": "2016-10-05 00:00:00",
            "end_date_time": "2016-10-06 00:00:00",
            "all_day": "true",
            "schedule_type": "meeting",
            "allow_notification": "true",
            "notification_via": "email",
            "botification_time": "10",
            "botification_time_interval": "minute",
            "employee_ids": "2, 187",
        }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/65

    + Body

            {
                "id": 65,
                "type": "log",
                "contact_id": 2048,
                "created_by": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "date_time": "2016-10-05 00:00:00",
                "log_type": "meeting",
                "content": "Schedule Content",
                "employee_ids": [
                    "2",
                    "187"
                ],
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/65",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }

+ Request (application/json)

        {
            "type": "task",
            "contact_id": 2048,
            "title": "Task Title",
            "content": "Task Content",
            "employee_ids": "2, 187",
            "date_time": "2016-10-05 00:00:00",
        }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/69

    + Body

            {
                "id": 69,
                "type": "task",
                "contact_id": 2048,
                "created_by": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "title": "Task Title",
                "employee_ids": [
                    "2",
                    "187"
                ],
                "date_time": "2016-10-05 00:00:00",
                "content": "Task Content",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/69",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }


## Manage Single Activity [/wp-json/erp/v1/crm/activities/{id}]

### Retrieve a Activity [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/1

    + Body

            {
                "id": 47,
                "type": "log",
                "contact_id": 2048,
                "created_by": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "date_time": "2016-10-02 13:00:00",
                "log_type": "email",
                "content": "<div><!--block-->Email Log</div>",
                "title": "Subject Line",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/47",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }


### Update a Activity [PUT]

+ Request (application/json)

        {
            "id": 47,
            "type": "log",
            "contact_id": 2048,
            "start_date": "2016-10-02 13:00:00",
            "log_type": "email",
            "content": "<div><!--block-->Email Log</div>",
            "title": "Subject Line",
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/crm/activities/1

    + Body

            {
                "id": 47,
                "type": "log",
                "contact_id": 2048,
                "created_by": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "date_time": "2016-10-02 13:00:00",
                "log_type": "email",
                "content": "<div><!--block-->Email Log</div>",
                "title": "Subject Line",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/crm/activities/47",
                    "collection": "http://example.com/wp-json/erp/v1/crm/activities"
                }
            }


### Delete a Activity [DELETE]

+ Response 204


# Group Schedules

## Schedules [/wp-json/erp/v1/crm/schedules{?per_page}{?page}]

### Retrieve All Schedules [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 36
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/crm/contacts/groups?page=2>; rel="next"

    + Body

            [
                {
                    "id":2,
                    "name":"Bergstrom Ltd",
                    "description":"Dolore quia ducimus velit et.",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/crm/contacts/groups/2",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                },
                {
                    "id":1,
                    "name":"Schimmel-Lynch",
                    "description":"Odio ipsum non consequatur ut et.",
                    "_links":{
                        "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                }
            ]


## Today's Schedules [/wp-json/erp/v1/crm/todays-schedules{?per_page}{?page}]

### Retrieve Today's Schedules [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 36
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/crm/contacts/groups?page=2>; rel="next"

    + Body

            [
                {
                    "id":2,
                    "name":"Bergstrom Ltd",
                    "description":"Dolore quia ducimus velit et.",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/crm/contacts/groups/2",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                },
                {
                    "id":1,
                    "name":"Schimmel-Lynch",
                    "description":"Odio ipsum non consequatur ut et.",
                    "_links":{
                        "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                }
            ]


## Upcoming Schedules [/wp-json/erp/v1/crm/upcoming-schedules{?per_page}{?page}]

### Retrieve Upcoming Schedules [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 36
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/crm/contacts/groups?page=2>; rel="next"

    + Body

            [
                {
                    "id":2,
                    "name":"Bergstrom Ltd",
                    "description":"Dolore quia ducimus velit et.",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/crm/contacts/groups/2",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                },
                {
                    "id":1,
                    "name":"Schimmel-Lynch",
                    "description":"Odio ipsum non consequatur ut et.",
                    "_links":{
                        "self":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups/1",
                        "collection":"http://example.com/wp-development/wp-json/erp/v1/crm/contacts/groups"
                    }
                }
            ]



# Group Departments

## Manage Department Collection [/wp-json/erp/v1/hrm/departments{?per_page}{?page}{?include}]

### List All Departments [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + include: head,parent (string, optional) - The additional object to be included.


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/departments?page=2>; rel="next"

    + Body

            [
                {
                    "id": 2,
                    "title": "Engineering",
                    "description": "",
                    "parent": null,
                    "head": null,
                    "total_employees": 38,
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/departments/2",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                    }
                },
                {
                    "id": 3,
                    "title": "Design",
                    "description": "",
                    "parent": {
                        "id": 2,
                        "name": "Engineering",
                        "_links": {
                            "self": "http://example.com/wp-json/erp/v1/hrm/departments/2",
                            "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                        }
                    },
                    "head": {
                        "ID": 1,
                        "user_nicename": "john",
                        "user_email": "john@doe.com",
                        "user_url": "http://www.doe.com",
                        "display_name": "John Wick",
                        "avatar": "https://gravatar.com",
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/users/1",
                            "collection":"http://example.com/wp-json/erp/v1/users"
                        }
                    },
                    "total_employees": 22,
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/departments/3",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                    }
                }
            ]


### Create a New Department [POST]

+ Request (application/json)

        {
            "title": "Happiness Engineering",
            "parent": 5,
            "head": 2
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/departments/10

    + Body

            {
                "id": 10,
                "title": "Happiness Engineering",
                "parent": null,
                "head": null,
                "total_employees": 0,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/departments/10",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                }
            }


## Manage Single Department [/wp-json/erp/v1/hrm/departments/{id}{?include}]

### Retrieve a Department [GET]

+ Parameters

    + include: head,parent (string, optional) - The additional object to be included.

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/departments/3

    + Body

            {
                "id": 3,
                "title": "Design",
                "description": "",
                "parent": {
                    "id": 2,
                    "title": "Engineering",
                    "description": "",
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/departments/2",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                    }
                },
                "head": {
                    "ID": 1,
                    "user_nicename": "john",
                    "user_email": "john@doe.com",
                    "user_url": "http://www.doe.com",
                    "display_name": "John Wick",
                    "avatar": "https://gravatar.com",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/users/1",
                        "collection":"http://example.com/wp-json/erp/v1/users"
                    }
                },
                "total_employees": 22,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/departments/3",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                }
            }


### Update a Department [PUT]

+ Request (application/json)

        {
            "title": "Happiness Engineering",
            "parent": 6,
            "head": 1,
            "description": "description",
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/departments/10

    + Body

            {
                "id": 10,
                "title": "Happiness Engineering",
                "description": "description",
                "parent": null,
                "head": null,
                "total_employees": 0,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/departments/10",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/departments"
                }
            }


### Delete a Department [DELETE]

+ Response 204


# Group Designations

## Manage Designation Collection [/wp-json/erp/v1/hrm/designations{?per_page}{?page}]

### List All Designations [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/designations?page=2>; rel="next"

    + Body

            [
                {
                    "id":1,
                    "title":"Admin",
                    "description":"Admin of HR Department",
                    "total_employees":19,
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/designations/1",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/designations"
                    }
                },
                {
                    "id":3,
                    "title":"Android Developer",
                    "description":"",
                    "total_employees":7,
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/designations/3",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/designations"
                    }
                }
            ]


### Create a New Designation [POST]

+ Request (application/json)

        {
            "name": "Happiness Engineer",
            "description": "This guy will bring happiness for your business"
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/designations/14

    + Body

            {
                "id": 14,
                "title": "Happiness Engineer",
                "description": "This guy will bring happiness for your business",
                "total_employees": 0,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/designations/14",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/designations"
                }
            }

## Manage Single Designation [/wp-json/erp/v1/hrm/designations/{id}]

### Retrieve a Designation [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/designations/14

    + Body

            {
                "id": 14,
                "title": "Happiness Engineer",
                "description": "This guy will bring happiness for your business",
                "total_employees": 0,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/designations/14",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/designations"
                }
            }


### Update a Designation [PUT]

+ Request (application/json)

            {
                "title": "Happiness Engineer",
                "description": "Another Description"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/designations/14

    + Body

            {
                "id": 14,
                "title": "Happiness Engineer",
                "description": "Another Description",
                "total_employees": 0,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/designations/14",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/designations"
                }
            }


### Delete a Designation [DELETE]

+ Response 204


# Group Employees

## Manage Employee Collection [/wp-json/erp/v1/hrm/employees{?per_page}{?page}{?include}]

### List All Employees [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + include: department,designation,reporting_to (string, optional) - The additional object to be included.


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/employees?page=2>; rel="next"

    + Body

            [
                {
                    "id":44,
                    "first_name":"Sheila",
                    "middle_name":"",
                    "last_name":"Rolfson",
                    "email":"Retha08@gmail.com",
                    "location":"0",
                    "hiring_source":"referral",
                    "hiring_date":"2016-06-23",
                    "date_of_birth":"1987-02-02",
                    "pay_rate":30000,
                    "pay_type":"monthly",
                    "type":"contract",
                    "status":"active",
                    "other_email":"",
                    "phone":"02795318272",
                    "work_phone":"",
                    "mobile":"",
                    "address":"574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
                    "gender":"female",
                    "marital_status":"widowed",
                    "nationality":"US",
                    "driving_license":"",
                    "hobbies":"",
                    "user_url":"http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
                    "description":"Fun loving guy.",
                    "street_1":"",
                    "street_2":"",
                    "city":"",
                    "country":"",
                    "state":"",
                    "postal_code":"",
                    "department":{
                        "id":5,
                        "title":"Sales",
                        "total_employees":28,
                        "description": "",
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/hrm/departments/5",
                            "collection":"http://example.com/wp-json/erp/v1/hrm/departments"
                        }
                    },
                    "designation":{
                        "id":11,
                        "title":"Sales Manager",
                        "description":"",
                        "total_employees":16,
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/hrm/designations/11",
                            "collection":"http://example.com/wp-json/erp/v1/hrm/designations"
                        }
                    },
                    "reporting_to": {
                        "id":212,
                        "first_name":"Sohel",
                        "middle_name":"",
                        "last_name":"Amin",
                        "email":"sohel@sohelamin.com",
                        "location":"0",
                        "hiring_source":"direct",
                        "hiring_date":"2016-09-01",
                        "date_of_birth":"2016-09-04",
                        "pay_rate":0,
                        "pay_type":"",
                        "type":"permanent",
                        "status":"active",
                        "other_email":"",
                        "phone":"",
                        "work_phone":"",
                        "mobile":"666666666",
                        "address":"",
                        "gender":"male",
                        "marital_status":"single",
                        "nationality":"BD",
                        "driving_license":"",
                        "hobbies":"",
                        "user_url":"",
                        "description":"",
                        "street_1":"",
                        "street_2":"",
                        "city":"",
                        "country":"BD",
                        "state":"DIN",
                        "postal_code":"",
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/hrm/employees/212",
                            "collection":"http://example.com/wp-json/erp/v1/hrm/employees"
                        }
                    }
                }
            ]


### Create a New Employee [POST]

+ Request (application/json)

        {
            "first_name":"Sheila",
            "middle_name":"",
            "last_name":"Rolfson",
            "email":"Retha08@gmail.com",
            "location":"0",
            "hiring_source":"referral",
            "hiring_date":"2016-06-23",
            "date_of_birth":"1987-02-02",
            "pay_rate":30000,
            "pay_type":"monthly",
            "type":"contract",
            "status":"active",
            "other_email":"",
            "phone":"02795318272",
            "work_phone":"",
            "mobile":"",
            "address":"574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
            "gender":"female",
            "marital_status":"widowed",
            "nationality":"US",
            "driving_license":"",
            "hobbies":"",
            "user_url":"http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
            "description":"Fun loving guy.",
            "street_1":"",
            "street_2":"",
            "city":"",
            "country":"",
            "state":"",
            "postal_code":"",
            "department":5,
            "designation":11
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44

    + Body

            {
                "id":44,
                "first_name":"Sheila",
                "middle_name":"",
                "last_name":"Rolfson",
                "email":"Retha08@gmail.com",
                "location":"0",
                "hiring_source":"referral",
                "hiring_date":"2016-06-23",
                "date_of_birth":"1987-02-02",
                "pay_rate":30000,
                "pay_type":"monthly",
                "type":"contract",
                "status":"active",
                "other_email":"",
                "phone":"02795318272",
                "work_phone":"",
                "mobile":"",
                "address":"574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
                "gender":"female",
                "marital_status":"widowed",
                "nationality":"US",
                "driving_license":"",
                "hobbies":"",
                "user_url":"http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
                "description":"Fun loving guy.",
                "street_1":"",
                "street_2":"",
                "city":"",
                "country":"",
                "state":"",
                "postal_code":""
            }


## Employee Bulk Operation [/wp-json/erp/v1/hrm/employees/bulk]

### Create New Employees [POST]

+ Request (application/json)

        [
            {
                "first_name": "Sheila",
                "middle_name": "",
                "last_name": "Rolfson",
                "email": "Retha08@gmail.com",
                "location": "0",
                "hiring_source": "referral",
                "hiring_date": "2016-06-23",
                "date_of_birth": "1987-02-02",
                "pay_rate": 30000,
                "pay_type": "monthly",
                "type": "contract",
                "status": "active",
                "other_email": "",
                "phone": "02795318272",
                "work_phone": "",
                "mobile": "",
                "address": "574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
                "gender": "female",
                "marital_status": "widowed",
                "nationality": "US",
                "driving_license": "",
                "hobbies": "",
                "user_url": "http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
                "description": "Fun loving guy.",
                "street_1": "",
                "street_2": "",
                "city": "",
                "country": "",
                "state": "",
                "postal_code": "",
                "department": 5,
                "designation": 11
            },
            {
                "first_name": "Clifford",
                "middle_name": "",
                "last_name": "R. Thompson",
                "email": "CliffordRThompson@teleworm.us",
                "location": "0",
                "hiring_source": "referral",
                "hiring_date": "2016-06-23",
                "date_of_birth": "1933-12-31",
                "pay_rate": 40000,
                "pay_type": "monthly",
                "type": "contract",
                "status": "active",
                "other_email": "",
                "phone": "303-706-3379",
                "work_phone": "",
                "mobile": "",
                "address": "3237 Clearview Drive, Englewood, CO 80112",
                "gender": "male",
                "marital_status": "married",
                "nationality": "US",
                "driving_license": "",
                "hobbies": "",
                "user_url": "jackiecartoons.com",
                "description": "",
                "street_1": "",
                "street_2": "",
                "city": "",
                "country": "",
                "state": "",
                "postal_code": "",
                "department": 5,
                "designation": 11
            }
        ]

+ Response 201 (application/json)


## Manage Single Employee [/wp-json/erp/v1/hrm/employees/{id}{?include}]

### Retrieve an Employee [GET]

+ Parameters

    + include: department,designation,reporting_to (string, optional) - The additional object to be included.

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44

    + Body

            {
                "id":44,
                "first_name":"Sheila",
                "middle_name":"",
                "last_name":"Rolfson",
                "email":"Retha08@gmail.com",
                "location":"0",
                "hiring_source":"referral",
                "hiring_date":"2016-06-23",
                "date_of_birth":"1987-02-02",
                "pay_rate":30000,
                "pay_type":"monthly",
                "type":"contract",
                "status":"active",
                "other_email":"",
                "phone":"02795318272",
                "work_phone":"",
                "mobile":"",
                "address":"574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
                "gender":"female",
                "marital_status":"widowed",
                "nationality":"US",
                "driving_license":"",
                "hobbies":"",
                "user_url":"http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
                "description":"Fun loving guy.",
                "street_1":"",
                "street_2":"",
                "city":"",
                "country":"",
                "state":"",
                "postal_code":"",
                "department":{
                    "id":5,
                    "title":"Sales",
                    "total_employees":28,
                    "description": "",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/departments/5",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/departments"
                    }
                },
                "designation":{
                    "id":11,
                    "title":"Sales Manager",
                    "description":"",
                    "total_employees":16,
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/designations/11",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/designations"
                    }
                },
                "reporting_to": {
                    "id":212,
                    "first_name":"Sohel",
                    "middle_name":"",
                    "last_name":"Amin",
                    "email":"sohel@sohelamin.com",
                    "location":"0",
                    "hiring_source":"direct",
                    "hiring_date":"2016-09-01",
                    "date_of_birth":"2016-09-04",
                    "pay_rate":0,
                    "pay_type":"",
                    "type":"permanent",
                    "status":"active",
                    "other_email":"",
                    "phone":"",
                    "work_phone":"",
                    "mobile":"666666666",
                    "address":"",
                    "gender":"male",
                    "marital_status":"single",
                    "nationality":"BD",
                    "driving_license":"",
                    "hobbies":"",
                    "user_url":"",
                    "description":"",
                    "street_1":"",
                    "street_2":"",
                    "city":"",
                    "country":"BD",
                    "state":"DIN",
                    "postal_code":"",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/employees/212",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/employees"
                    }
                }
            }


### Update an Employee [PUT]

+ Request (application/json)

            {
                "first_name":"Sheila",
                "middle_name":"",
                "last_name":"Rolfson",
                "email":"Retha08@gmail.com",
                "location":"0",
                "hiring_source":"referral",
                "hiring_date":"2016-06-23",
                "date_of_birth":"1987-02-02",
                "pay_rate":30000,
                "pay_type":"monthly",
                "type":"contract",
                "status":"active",
                "other_email":"",
                "phone":"02795318272",
                "work_phone":"",
                "mobile":"",
                "address":"574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
                "gender":"female",
                "marital_status":"widowed",
                "nationality":"US",
                "driving_license":"",
                "hobbies":"",
                "user_url":"http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
                "description":"Fun loving guy.",
                "street_1":"",
                "street_2":"",
                "city":"",
                "country":"",
                "state":"",
                "postal_code":"",
                "department":5,
                "designation":11
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44

    + Body

            {
                "id":44,
                "first_name":"Sheila",
                "middle_name":"",
                "last_name":"Rolfson",
                "email":"Retha08@gmail.com",
                "location":"0",
                "hiring_source":"referral",
                "hiring_date":"2016-06-23",
                "date_of_birth":"1987-02-02",
                "pay_rate":30000,
                "pay_type":"monthly",
                "type":"contract",
                "status":"active",
                "other_email":"",
                "phone":"02795318272",
                "work_phone":"",
                "mobile":"",
                "address":"574 Lemke Track Suite 646\nDavismouth, DE 42145-1296",
                "gender":"female",
                "marital_status":"widowed",
                "nationality":"US",
                "driving_license":"",
                "hobbies":"",
                "user_url":"http://www.DAmore.com/quasi-repudiandae-dicta-iste-est.html",
                "description":"Fun loving guy.",
                "street_1":"",
                "street_2":"",
                "city":"",
                "country":"",
                "state":"",
                "postal_code":""
            }


### Delete an Employee [DELETE]

+ Response 204



# Group Employee's Experiences

## Manage Experience Collection [/wp-json/erp/v1/hrm/employees/{id}/experiences]

### List All Experiences [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 2,
                    "company_name": "weDevs",
                    "job_title": "Software Engineer",
                    "description": "PHP/JavaScript Developer",
                    "from": "2015-11-01",
                    "to": "2016-10-17"
                }
            ]


### Create a New Experience [POST]

+ Request (application/json)

        {
            "company_name": "weDevs",
            "job_title": "Software Engineer",
            "description": "PHP/JavaScript Developer",
            "from": "2015-11-01",
            "to": "2016-10-17"
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/experiences/2

    + Body

            {
                "id": 2,
                "company_name": "weDevs",
                "job_title": "Software Engineer",
                "description": "PHP/JavaScript Developer",
                "from": "2015-11-01",
                "to": "2016-10-17"
            }


## Manage Single Experience [/wp-json/erp/v1/hrm/employees/{id}/experiences/{exp_id}]

### Retrieve an Experience [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/experiences/2

    + Body

            {
                "id": 2,
                "company_name": "weDevs",
                "job_title": "Software Engineer",
                "description": "PHP/JavaScript Developer",
                "from": "2015-11-01",
                "to": "2016-10-17"
            }


### Update an Experience [PUT]

+ Request (application/json)

            {
                "company_name": "weDevs",
                "job_title": "Software Engineer",
                "description": "PHP/JavaScript Developer",
                "from": "2015-11-01",
                "to": "2016-10-17"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/experiences/2

    + Body

            {
                "id": 2,
                "company_name": "weDevs",
                "job_title": "Software Engineer",
                "description": "PHP/JavaScript Developer",
                "from": "2015-11-01",
                "to": "2016-10-17"
            }


### Delete an Experience [DELETE]

+ Response 204



# Group Employee's Educations

## Manage Education Collection [/wp-json/erp/v1/hrm/employees/{id}/educations]

### List All Educations [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "school": "Harvard University",
                    "degree": "Bachelor in Science",
                    "field": "Computer Science",
                    "finished": "2014",
                    "notes": "Achieved the degree successfully",
                    "interest": "Programming, Computing"
                }
            ]


### Create a New Education [POST]

+ Request (application/json)

        {
            "school": "Harvard University",
            "degree": "Bachelor in Science",
            "field": "Computer Science",
            "finished": "2014",
            "notes": "Achieved the degree successfully",
            "interest": "Programming, Computing"
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/educations/1

    + Body

            {
                "id": 1,
                "school": "Harvard University",
                "degree": "Bachelor in Science",
                "field": "Computer Science",
                "finished": "2014",
                "notes": "Achieved the degree successfully",
                "interest": "Programming, Computing"
            }


## Manage Single Education [/wp-json/erp/v1/hrm/employees/{id}/educations/{exp_id}]

### Retrieve an Education [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/educations/1

    + Body

            {
                "id": 1,
                "school": "Harvard University",
                "degree": "Bachelor in Science",
                "field": "Computer Science",
                "finished": "2014",
                "notes": "Achieved the degree successfully",
                "interest": "Programming, Computing"
            }


### Update an Education [PUT]

+ Request (application/json)

            {
                "school": "Harvard University",
                "degree": "Bachelor in Science",
                "field": "Computer Science",
                "finished": "2014",
                "notes": "Achieved the degree successfully",
                "interest": "Programming, Computing"
            }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/educations/1

    + Body

            {
                "id": 1,
                "school": "Harvard University",
                "degree": "Bachelor in Science",
                "field": "Computer Science",
                "finished": "2014",
                "notes": "Achieved the degree successfully",
                "interest": "Programming, Computing"
            }


### Delete an Education [DELETE]

+ Response 204



# Group Employee's Dependents

## Manage Dependent Collection [/wp-json/erp/v1/hrm/employees/{id}/dependents]

### List All Dependents [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "name": "Dexter S. Baker",
                    "relation": "Father",
                    "date_of_birth": "1973-04-28"
                }
            ]


### Create a New Dependent [POST]

+ Request (application/json)

        {
            "name": "Dexter S. Baker",
            "relation": "Father",
            "date_of_birth": "1973-04-28"
        }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/dependents/1

    + Body

            {
                "id": 1,
                "name": "Dexter S. Baker",
                "relation": "Father",
                "date_of_birth": "1973-04-28"
            }


## Manage Single Dependent [/wp-json/erp/v1/hrm/employees/{id}/dependents/{exp_id}]

### Retrieve a Dependent [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/dependents/1

    + Body

            {
                "id": 1,
                "name": "Dexter S. Baker",
                "relation": "Father",
                "date_of_birth": "1973-04-28"
            }


### Update a Dependent [PUT]

+ Request (application/json)

            {
                "name": "Dexter S. Baker",
                "relation": "Father",
                "date_of_birth": "1973-04-28"
            }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/employees/44/dependents/1

    + Body

            {
                "id": 1,
                "name": "Dexter S. Baker",
                "relation": "Father",
                "date_of_birth": "1973-04-28"
            }


### Delete a Dependent [DELETE]

+ Response 204


# Group Announcements

## Manage Announcement Collection [/wp-json/erp/v1/hrm/announcements{?per_page}{?page}]

### List All Announcements [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/announcements?page=2>; rel="next"

    + Body

            [
                {
                    "id":3,
                    "title":"Announcement by API",
                    "body":"This is an announcement notice",
                    "status":"publish",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/announcements/3",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/announcements"
                    }
                },
                {
                    "id":1,
                    "title":"Test Announcement",
                    "body":"Hello everyone",
                    "status":"publish",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/announcements/1",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/announcements"
                    }
                }
            ]


### Create a New Announcement [POST]

+ Request (application/json)

            {
                "title":"Announcement by API",
                "body":"This is an announcement notice",
                "status":"publish",
                "recipient_type": "selected_employee",
                "employees": "212, 223"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/announcements/3

    + Body

            {
                "id":3,
                "title":"Announcement by API",
                "body":"This is an announcement notice",
                "status":"publish",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/hrm/announcements/3",
                    "collection":"http://example.com/wp-json/erp/v1/hrm/announcements"
                }
            }

## Manage Single Announcement [/wp-json/erp/v1/hrm/announcements/{id}]

### Retrieve an Announcement [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/announcements/3

    + Body

            {
                "id":3,
                "title":"Announcement by API",
                "body":"This is an announcement notice",
                "status":"publish",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/hrm/announcements/3",
                    "collection":"http://example.com/wp-json/erp/v1/hrm/announcements"
                }
            }


### Update an Announcement [PUT]

+ Request (application/json)

            {
                "title":"Announcement by API",
                "body":"This is an announcement notice",
                "status":"publish"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/announcements/3

    + Body

            {
                "id":3,
                "title":"Announcement by API",
                "body":"This is an announcement notice",
                "status":"publish",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/hrm/announcements/3",
                    "collection":"http://example.com/wp-json/erp/v1/hrm/announcements"
                }
            }


### Delete an Announcement [DELETE]

+ Response 204



# Group Leave Policies

## Manage Leave Policy Collection [/wp-json/erp/v1/hrm/leaves/policies{?per_page}{?page}{?include}]

### List All Policies [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + include: department,designation (string, optional) - The additional object to be included.


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/leaves/policies?page=2>; rel="next"

    + Body

            [
                {
                    "id":1,
                    "name":"Casual Leave",
                    "days":10,
                    "color":"#fafafa",
                    "gender":null,
                    "marital":null,
                    "activate":"immediately",
                    "execute_day":0,
                    "effective_date":"2016-10-25 04:14:29",
                    "location":null,
                    "description":"Policy for Casual Leave",
                    "department":{
                        "id":1,
                        "title":"Administration",
                        "total_employees":33,
                        "description": "",
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/hrm/departments/4",
                            "collection":"http://example.com/wp-json/erp/v1/hrm/departments"
                        }
                    },
                    "designation":{
                        "id":2,
                        "title":"HR Manager",
                        "description":"",
                        "total_employees":21,
                        "_links":{
                            "self":"http://example.com/wp-json/erp/v1/hrm/designations/2",
                            "collection":"http://example.com/wp-json/erp/v1/hrm/designations"
                        }
                    },
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/leaves/policies/1",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/leaves/policies"
                    }
                }
            ]


### Create a New Policy [POST]

+ Request (application/json)

            {
                "name":"Casual Leave",
                "days":10,
                "color":"#fafafa",
                "description":"Policy for Casual Leave",
                "department":1,
                "designation":2,
                "effective_date":"2016-10-25",
                "activate":"after_days",
                "execute_day":15,
                "gender":"male",
                "marital":"single",
                "location":"1",
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/policies/1

    + Body

            {
                "id":1,
                "name":"Casual Leave",
                "days":10,
                "color":"#fafafa",
                "gender":"male",
                "marital":"single",
                "activate":"after_days",
                "execute_day":15,
                "effective_date":"2016-10-25 04:14:29",
                "location":null,
                "description":"Policy for Casual Leave",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/hrm/leaves/policies/1",
                    "collection":"http://example.com/wp-json/erp/v1/hrm/leaves/policies"
                }
            }

## Manage Single Policy [/wp-json/erp/v1/hrm/leaves/policies/{id}{?include}]

### Retrieve a Policy [GET]

+ Parameters

    + include: department,designation (string, optional) - The additional object to be included.

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/policies/1

    + Body

            {
                "id":1,
                "name":"Casual Leave",
                "days":10,
                "color":"#fafafa",
                "gender":null,
                "marital":null,
                "activate":"after_days",
                "execute_day":15,
                "effective_date":"2016-10-25 04:14:29",
                "location":null,
                "description":"Policy for Casual Leave",
                "department":{
                    "id":1,
                    "title":"Administration",
                    "total_employees":33,
                    "description": "",
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/departments/4",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/departments"
                    }
                },
                "designation":{
                    "id":2,
                    "title":"HR Manager",
                    "description":"",
                    "total_employees":21,
                    "_links":{
                        "self":"http://example.com/wp-json/erp/v1/hrm/designations/2",
                        "collection":"http://example.com/wp-json/erp/v1/hrm/designations"
                    }
                },
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/hrm/leaves/policies/1",
                    "collection":"http://example.com/wp-json/erp/v1/hrm/leaves/policies"
                }
            }


### Update a Policy [PUT]

+ Request (application/json)

            {
                "name":"Casual Leave",
                "days":10,
                "color":"#fafafa",
                "description":"Policy for Casual Leave",
                "department":1,
                "designation":2,
                "effective_date":"2016-10-25",
                "activate":"after_days",
                "execute_day":15,
                "gender":"male",
                "marital":"single",
                "location":"1",
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/policies/1

    + Body

            {
                "name":"Casual Leave",
                "days":10,
                "color":"#fafafa",
                "gender":null,
                "marital":null,
                "activate":"after_days",
                "execute_day":15,
                "effective_date":"2016-10-25 04:14:29",
                "location":null,
                "description":"Policy for Casual Leave",
                "_links":{
                    "self":"http://example.com/wp-json/erp/v1/hrm/leaves/policies/1",
                    "collection":"http://example.com/wp-json/erp/v1/hrm/leaves/policies"
                }
            }


### Delete a Policy [DELETE]

+ Response 204



# Group Leave Entitlements

## Manage Leave Entitlement Collection [/wp-json/erp/v1/hrm/leaves/entitlements{?per_page}{?page}{?include}]

### List All Entitlements [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + include: policy (string, optional) - The additional object to be included.


+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/leaves/entitlements?page=2>; rel="next"

    + Body

            [
                {
                    "id": 2,
                    "employee_id": 2,
                    "employee_name": "Kaleigh Deckow",
                    "days": 10,
                    "start_date": "2016-01-01",
                    "end_date": "2016-12-31",
                    "policy": {
                        "id": 1,
                        "name": "Casual Leave",
                        "days": 10,
                        "color": "#fafafa",
                        "gender": null,
                        "marital": null,
                        "activate": "immediately",
                        "execute_day": 0,
                        "effective_date": "2016-10-25",
                        "location": null,
                        "description": "",
                        "_links": {
                            "self": "http://example.com/wp-json/erp/v1/hrm/leaves/policies/1",
                            "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/policies"
                        }
                    },
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/leaves/entitlements/2",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/entitlements"
                    }
                }
            ]


### Create a New Entitlement [POST]

+ Request (application/json)

            {
                "employee_id": 2,
                "policy": 1,
                "days": 10,
                "start_date": "2016-01-01",
                "end_date": "2016-12-31"
            }


+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/entitlements/2

    + Body

            {
                "id": 2,
                "employee_id": 2,
                "employee_name": "Kaleigh Deckow",
                "days": 10,
                "start_date": "2016-01-01",
                "end_date": "2016-12-31",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/entitlements/2",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/entitlements"
                }
            }

## Manage Single Entitlement [/wp-json/erp/v1/hrm/leaves/entitlements/{id}{?include}]

### Retrieve a Entitlement [GET]

+ Parameters

    + include: policy (string, optional) - The additional object to be included.

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/entitlements/2

    + Body

            {
                "id": 2,
                "employee_id": 2,
                "employee_name": "Kaleigh Deckow",
                "days": 10,
                "start_date": "2016-01-01",
                "end_date": "2016-12-31",
                "policy": {
                    "id": 1,
                    "name": "Casual Leave",
                    "days": 10,
                    "color": "#fafafa",
                    "gender": null,
                    "marital": null,
                    "activate": "immediately",
                    "execute_day": 0,
                    "effective_date": "2016-10-25",
                    "location": null,
                    "description": "",
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/leaves/policies/1",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/policies"
                    }
                },
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/entitlements/2",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/entitlements"
                }
            }


### Delete a Entitlement [DELETE]

+ Response 204



# Group Leave Holidays

## Manage Leave Holiday Collection [/wp-json/erp/v1/hrm/leaves/holidays{?per_page}{?page}]

### List All Holidays [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/leaves/holidays?page=2>; rel="next"

    + Body

            [
                {
                    "id": 11,
                    "name": "Night of Destiny",
                    "start_date": "2016-07-03",
                    "end_date": "2016-07-03",
                    "description": "Night of Destiny",
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays/11",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays"
                    }
                },
                {
                    "id": 12,
                    "name": "National Mourning Day",
                    "start_date": "2016-08-15",
                    "end_date": "2016-08-15",
                    "description": "National Mourning Day",
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays/12",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays"
                    }
                }
            ]


### Create a New Holiday [POST]

+ Request (application/json)

            {
                "name": "National Mourning Day",
                "start_date": "2016-08-15",
                "end_date": "2016-08-15",
                "description": "National Mourning Day"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/holidays/12

    + Body

            {
                "id": 12,
                "name": "National Mourning Day",
                "start_date": "2016-08-15",
                "end_date": "2016-08-15",
                "description": "National Mourning Day",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays/12",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays"
                }
            }

## Manage Single Holiday [/wp-json/erp/v1/hrm/leaves/holidays/{id}]

### Retrieve a Holiday [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/holidays/12

    + Body

            {
                "id": 12,
                "name": "National Mourning Day",
                "start_date": "2016-08-15",
                "end_date": "2016-08-15",
                "description": "National Mourning Day",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays/12",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays"
                }
            }


### Update a Holiday [PUT]

+ Request (application/json)

            {
                "name": "National Mourning Day",
                "start_date": "2016-08-15",
                "end_date": "2016-08-15",
                "description": "National Mourning Day"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/holidays/12

    + Body

            {
                "id": 12,
                "name": "National Mourning Day",
                "start_date": "2016-08-15",
                "end_date": "2016-08-15",
                "description": "National Mourning Day",
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays/12",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/holidays"
                }
            }


### Delete a Holiday [DELETE]

+ Response 204



# Group Leave Requests

## Manage Leave Request Collection [/wp-json/erp/v1/hrm/leaves/requests{?per_page}{?page}{?include}]

### List All Requests [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/leaves/requests?page=2>; rel="next"

    + Body

            [
                {
                    "id": 1,
                    "name": "John Wick",
                    "employee_id": 212,
                    "start_date": "2016-09-09",
                    "end_date": "2016-09-14",
                    "reason": "Sickness",
                    "comments": null,
                    "_links": {
                        "self": "http://example.com/wp-json/erp/v1/hrm/leaves/requests/1",
                        "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/requests"
                    }
                }
            ]


### Create a New Request [POST]

+ Request (application/json)

            {
                "employee_id": 212,
                "policy": 1,
                "start_date": "2016-09-09",
                "end_date": "2016-09-14",
                "reason": "Sickness"
            }

+ Response 201 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/requests/1

    + Body

            {
                "id": 1,
                "employee_id": 212,
                "employee_name": "John Wick",
                "start_date": "2016-09-09",
                "end_date": "2016-09-14",
                "reason": "Sickness",
                "comments": null,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/requests/1",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/requests"
                }
            }

## Manage Single Request [/wp-json/erp/v1/hrm/leaves/requests/{id}]

### Retrieve a Request [GET]

+ Response 200 (application/json)

    + Headers

            Location: /wp-json/erp/v1/hrm/leaves/requests/1

    + Body

            {
                "id": 1,
                "employee_id": 212,
                "employee_name": "John Wick",
                "start_date": "2016-09-09",
                "end_date": "2016-09-14",
                "reason": "Sickness",
                "comments": null,
                "_links": {
                    "self": "http://example.com/wp-json/erp/v1/hrm/leaves/requests/1",
                    "collection": "http://example.com/wp-json/erp/v1/hrm/leaves/requests"
                }
            }



# Group HRM Reports

## Age Profile Report [/wp-json/erp/v1/hrm/reports/age-profiles{?dimension}]

### List All Age Profiles [GET]

+ Parameters

    + dimension: general (string, optional) - The dimension of the report.

+ Response 200 (application/json)

    + Body

            {
                "_under_18": 0,
                "_18_to_25": 61,
                "_26_to_35": 69,
                "_36_to_45": 69,
                "_46_to_55": 0,
                "_56_to_65": 0,
                "_65plus": 0
            }

## Gender Profile Report [/wp-json/erp/v1/hrm/reports/gender-profiles{?dimension}]

### List All Gender Profiles [GET]

+ Parameters

    + dimension: general (string, optional) - The dimension of the report.

+ Response 200 (application/json)

    + Body

            [
                {
                    "gender": "Male",
                    "count": 73,
                    "percentage": "36.14%"
                },
                {
                    "gender": "Female",
                    "count": 66,
                    "percentage": "32.67%"
                },
                {
                    "gender": "Unspecified",
                    "count": 63,
                    "percentage": "31.19%"
                },
                {
                    "gender": "Total",
                    "count": 202,
                    "percentage": "100%"
                }
            ]

## Head Count Report [/wp-json/erp/v1/hrm/reports/head-counts]

### List All Head Counts [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "month": "2016-10",
                    "count": 205
                },
                {
                    "month": "2016-09",
                    "count": 201
                },
                {
                    "month": "2016-08",
                    "count": 200
                },
                {
                    "month": "2016-07",
                    "count": 198
                }
            ]

## Salary History Report [/wp-json/erp/v1/hrm/reports/salary-histories{?per_page}{?page}]

### List All Salary Histories [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/reports/salary-histories?page=2>; rel="next"

    + Body

            [
                [
                    {
                        "employee_id": 2,
                        "employee_name": "Kaleigh Deckow",
                        "date": "October 30, 2016",
                        "pay_rate": 10000,
                        "pay_type": "monthly"
                    },
                    {
                        "employee_id": 2,
                        "employee_name": "Kaleigh Deckow",
                        "date": "August 31, 2016",
                        "pay_rate": 70000,
                        "pay_type": "monthly"
                    }
                ],
                [
                    {
                        "employee_id": 3,
                        "employee_name": "Cyrus Murazik",
                        "date": "December 2, 2006",
                        "pay_rate": 45000,
                        "pay_type": "monthly"
                    }
                ]
            ]

## Year of Service Report [/wp-json/erp/v1/hrm/reports/year-of-services{?per_page}{?page}]

### List All Year of Services [GET]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`

+ Response 200 (application/json)

    + Headers

            X-WP-Total: 25
            X-WP-TotalPages: 2
            Link: <http://example.com/wp-json/erp/v1/hrm/reports/year-of-service?page=2>; rel="next"

    + Body

            {
                "1": {
                    "11": [
                        {
                            "employee_id": 20,
                            "employee_name": "Maribel Abernathy",
                            "hiring_date": "2007-01-11",
                            "job_age": 9
                        }
                    ],
                    "28": [
                        {
                            "employee_id": 6,
                            "employee_name": "Pete Price",
                            "hiring_date": "2014-01-28",
                            "job_age": 2
                        }
                    ]
                },
                "2": {
                    "1": [
                        {
                            "employee_id": 9,
                            "employee_name": "Marcel Aufderhar",
                            "hiring_date": "2016-02-01",
                            "job_age": 0
                        }
                    ]
                }
            }


# Group Customers


## Customer List [/customers/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Customers [GET]

Fetches all available customers with pagination

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 41,
                    "first_name": "John",
                    "last_name": "Smith",
                    "email": "john@gmail.com",
                    "phone": "1234567890",
                    "mobile": "",
                    "fax": null,
                    "website": "",
                    "notes": "",
                    "other": null,
                    "company": "ABC Inc.",
                    "photo_id": null,
                    "photo": null,
                    "billing": {
                        "first_name": "John",
                        "last_name": "Smith",
                        "street_1": "43 Edgewood Rd.",
                        "street_2": "",
                        "city": "Riverside",
                        "state": "CA",
                        "postal_code": "94544",
                        "country": "US",
                        "email": "john@gmail.com",
                        "phone": "1234567890"
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/customers",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers/41"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers"
                        }
                    }
                }
            ]

### Create A Customer [POST]

    Model (application/json)

    {
        "first_name":"John",
        "last_name":"Smith",
        "email":"john@gmail.com",
        "mobile":"",
        "company":"ABC Inc.",
        "phone":"1234567890",
        "website":"",
        "notes":"",
        "fax":"",
        "street_1":"43 Edgewood Rd.",
        "street_2":"",
        "city":"Riverside",
        "country":{
            "id":"US",
            "name":"United States (US)"
        },
        "state":{
            "id":"CA",
            "name":"California"
        },
        "postal_code":"94544",
        "photo_id":null,
        "photo":"https://example.com/wp-content/plugins/wp-erp/assets/images/mystery-person.png"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/customers",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers"
                    }
                }
            }

## Manage Single Customer [/customers/{id}]

+ Parameters
    + id (string) - id of the customer in the form of an string

### Retrieve A Customer [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/customers",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers"
                    }
                }
            }

### Edit A Customer [PUT]

    Model (application/json)

    {
        "first_name":"John",
        "last_name":"Smith",
        "email":"john@gmail.com",
        "mobile":"",
        "company":"ABC Inc.",
        "phone":"1234567890",
        "website":"",
        "notes":"",
        "fax":"",
        "street_1":"43 Edgewood Rd.",
        "street_2":"",
        "city":"Riverside",
        "country":{
            "id":"US",
            "name":"United States (US)"
        },
        "state":{
            "id":"CA",
            "name":"California"
        },
        "postal_code":"94544",
        "photo_id":null,
        "photo":"https://example.com/wp-content/plugins/wp-erp/assets/images/mystery-person.png"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/customers",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/customers"
                    }
                }
            }

### Delete A Customer [DELETE]

+ Request (application/json)
+ Response 204 (application/json)

## Customers Transactions [/customers/{id}/transactions/{?per_page,page,search}]

+ Parameters

    + id (string) - id of the customer in the form of an string
    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Transactions of a Customer [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            [
                {
                    "voucher_no": null,
                    "particulars": "Opening Balance",
                    "people_id": null,
                    "trn_no": null,
                    "trn_date": null,
                    "created_at": null,
                    "debit": null,
                    "credit": null,
                    "balance": 50,
                    "balance_val": 0
                },
                {
                    "voucher_no": "2",
                    "people_id": "23",
                    "trn_date": "2020-03-30",
                    "debit": "50.00",
                    "credit": "0.00",
                    "particulars": "Sales invoice",
                    "created_at": "2020-03-30",
                    "balance_val": 50,
                    "balance": "$50 Dr"
                },
                {
                    "voucher_no": null,
                    "particulars": "Total",
                    "people_id": null,
                    "trn_no": null,
                    "trn_date": null,
                    "created_at": null,
                    "debit": 50,
                    "credit": 0,
                    "balance": null
                }
            ]

# Group Vendors


## Vendor List [/vendors/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Vendors [GET]

Fetches all available vendors with pagination

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 41,
                    "first_name": "John",
                    "last_name": "Smith",
                    "email": "john@gmail.com",
                    "phone": "1234567890",
                    "mobile": "",
                    "fax": null,
                    "website": "",
                    "notes": "",
                    "other": null,
                    "company": "ABC Inc.",
                    "photo_id": null,
                    "photo": null,
                    "billing": {
                        "first_name": "John",
                        "last_name": "Smith",
                        "street_1": "43 Edgewood Rd.",
                        "street_2": "",
                        "city": "Riverside",
                        "state": "CA",
                        "postal_code": "94544",
                        "country": "US",
                        "email": "john@gmail.com",
                        "phone": "1234567890"
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/vendors",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors/41"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors"
                        }
                    }
                }
            ]

### Create A Vendor [POST]

    Model (application/json)

    {
        "first_name":"John",
        "last_name":"Smith",
        "email":"john@gmail.com",
        "mobile":"",
        "company":"ABC Inc.",
        "phone":"1234567890",
        "website":"",
        "notes":"",
        "fax":"",
        "street_1":"43 Edgewood Rd.",
        "street_2":"",
        "city":"Riverside",
        "country":{
            "id":"US",
            "name":"United States (US)"
        },
        "state":{
            "id":"CA",
            "name":"California"
        },
        "postal_code":"94544",
        "photo_id":null,
        "photo":"https://example.com/wp-content/plugins/wp-erp/assets/images/mystery-person.png"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/vendors",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors"
                    }
                }
            }

## Manage Single Vendor [/vendors/{id}]

+ Parameters
    + id (string) - id of the vendor in the form of an string

### Retrieve A Vendor [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/vendors",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors"
                    }
                }
            }

### Edit A Vendor [PUT]

    Model (application/json)

    {
        "first_name":"John",
        "last_name":"Smith",
        "email":"john@gmail.com",
        "mobile":"",
        "company":"ABC Inc.",
        "phone":"1234567890",
        "website":"",
        "notes":"",
        "fax":"",
        "street_1":"43 Edgewood Rd.",
        "street_2":"",
        "city":"Riverside",
        "country":{
            "id":"US",
            "name":"United States (US)"
        },
        "state":{
            "id":"CA",
            "name":"California"
        },
        "postal_code":"94544",
        "photo_id":null,
        "photo":"https://example.com/wp-content/plugins/wp-erp/assets/images/mystery-person.png"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/vendors",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/vendors"
                    }
                }
            }

### Delete A Vendor [DELETE]

+ Request (application/json)
+ Response 204 (application/json)

## Vendors Transactions [/vendors/{id}/transactions/{?per_page,page,search}]

+ Parameters

    + id (string) - id of the vendor in the form of an string
    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Transactions of a Vendor [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            [
                {
                    "voucher_no": null,
                    "particulars": "Opening Balance",
                    "people_id": null,
                    "trn_no": null,
                    "trn_date": null,
                    "created_at": null,
                    "debit": null,
                    "credit": null,
                    "balance": -40,
                    "balance_val": 0
                },
                {
                    "voucher_no": "3",
                    "people_id": "25",
                    "trn_date": "2020-03-30",
                    "debit": "0.00",
                    "credit": "40.00",
                    "particulars": "",
                    "created_at": "2020-03-30",
                    "balance_val": -40,
                    "balance": "$40 Cr"
                },
                {
                    "voucher_no": null,
                    "particulars": "Total",
                    "people_id": null,
                    "trn_no": null,
                    "trn_date": null,
                    "created_at": null,
                    "debit": 0,
                    "credit": 40,
                    "balance": null
                }
            ]

# Group Employee


## Employee List [/employees/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Employees [GET]

Fetches all available employees with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "employee_id": "1001",
                    "designation": "Print Designer",
                    "department": "Design",
                    "location": "0",
                    "hiring_source": "social",
                    "hiring_date": "06-26-2016",
                    "termination_date": "0000-00-00",
                    "date_of_birth": "07-15-1991",
                    "reporting_to": 0,
                    "pay_rate": "30000",
                    "pay_type": "monthly",
                    "type": "contract",
                    "status": "active",
                    "end_date": [],
                    "photo_id": 0,
                    "first_name": "Lia",
                    "middle_name": "",
                    "last_name": "Wolff",
                    "other_email": "",
                    "phone": "217.378.3982 x06739",
                    "work_phone": "",
                    "blood_group": "-1",
                    "spouse_name": "",
                    "father_name": "",
                    "mother_name": "",
                    "mobile": "",
                    "address": "",
                    "gender": "other",
                    "marital_status": "single",
                    "nationality": "US",
                    "driving_license": "",
                    "hobbies": "",
                    "user_url": "https://example.com/wp-admin/admin.php?page=erp-hr&section=employee&action=view&id=5",
                    "description": "I shall see it again, but it all seemed quite natural to Alice an excellent plan, no doubt, and very soon finished it off. * * * * * * * * * * * * CHAPTER II. The Pool of Tears 'Curiouser and.",
                    "street_1": null,
                    "street_2": null,
                    "city": null,
                    "country": "-1",
                    "state": "",
                    "postal_code": null,
                    "full_name": "Lia Wolff",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/employees",
                    "id": 5,
                    "user_id": 5,
                    "email": "tessie33@yahoo.com",
                    "people_id": "6",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/employees/5"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/employees"
                        }
                    }
                }
            ]

## Manage Single Employee [/employees/{id}]

+ Parameters
    + id (string) - people id of the employee in the form of an string

### Retrieve A Employee [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            {
                "id": "6",
                "user_id": "5",
                "first_name": "Lia",
                "last_name": "Wolff",
                "company": null,
                "email": "tessie33@yahoo.com",
                "phone": "217.378.3982 x06739",
                "mobile": "",
                "other": null,
                "website": null,
                "fax": null,
                "notes": null,
                "street_1": "",
                "street_2": "",
                "city": "",
                "state": "",
                "postal_code": "",
                "country": "-1",
                "currency": null,
                "life_stage": null,
                "contact_owner": null,
                "hash": "48583f44ce1dcc82081bfe4f9d935908eb9362de",
                "created_by": "1",
                "created": "2020-03-30 18:11:22",
                "types": [
                    "employee"
                ],
                "designation": "Print Designer",
                "department": "Design",
                "reporting_to": 0,
                "avatar": "<img alt='' src='http://1.gravatar.com/avatar/4044fc241a06c56ebdcc4bf815643c0c?s=32&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4044fc241a06c56ebdcc4bf815643c0c?s=64&#038;d=mm&#038;r=g 2x' class='avatar avatar-32 photo' height='32' width='32' />",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/employees/6"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/employees"
                    }
                }
            }

## Employee Transactions [/employees/{id}/transactions/{?per_page,page,search}]

+ Parameters

    + id (string) - people id of the employee in the form of an string
    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Transactions of an Employee [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            [
                {
                    "voucher_no": null,
                    "particulars": "Opening Balance",
                    "people_id": null,
                    "trn_no": null,
                    "trn_date": null,
                    "created_at": null,
                    "debit": null,
                    "credit": null,
                    "balance": -1500,
                    "balance_val": 0
                },
                {
                    "voucher_no": "16",
                    "people_id": "6",
                    "trn_date": "2020-03-30",
                    "debit": "0.00",
                    "credit": "0.00",
                    "particulars": "Salary for the month of march",
                    "created_at": "2020-03-30",
                    "balance_val": -1500,
                    "balance": "$1500 Cr"
                },
                {
                    "voucher_no": null,
                    "particulars": "Total",
                    "people_id": null,
                    "trn_no": null,
                    "trn_date": null,
                    "created_at": null,
                    "debit": 0,
                    "credit": 1500,
                    "balance": null
                }
            ]

# Group People


## People List [/people/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Peoples [GET]

Fetches all available people with pagination

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 41,
                    "first_name": "John",
                    "last_name": "Smith",
                    "email": "john@gmail.com",
                    "phone": "1234567890",
                    "mobile": "",
                    "fax": null,
                    "website": "",
                    "notes": "",
                    "other": null,
                    "company": "ABC Inc.",
                    "photo_id": null,
                    "photo": null,
                    "billing": {
                        "first_name": "John",
                        "last_name": "Smith",
                        "street_1": "43 Edgewood Rd.",
                        "street_2": "",
                        "city": "Riverside",
                        "state": "CA",
                        "postal_code": "94544",
                        "country": "US",
                        "email": "john@gmail.com",
                        "phone": "1234567890"
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/people",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/people/41"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/people"
                        }
                    }
                }
            ]

## Manage Single People [/people/{id}]

+ Parameters
    + id (string) - id of the people in the form of an string

### Retrieve A People [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 41,
                "first_name": "John",
                "last_name": "Smith",
                "email": "john@gmail.com",
                "phone": "1234567890",
                "mobile": "",
                "fax": null,
                "website": "",
                "notes": "",
                "other": null,
                "company": "ABC Inc.",
                "photo_id": null,
                "photo": null,
                "billing": {
                    "first_name": "John",
                    "last_name": "Smith",
                    "street_1": "43 Edgewood Rd.",
                    "street_2": "",
                    "city": "Riverside",
                    "state": "CA",
                    "postal_code": "94544",
                    "country": "US",
                    "email": "john@gmail.com",
                    "phone": "1234567890"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/people",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/people/41"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/people"
                    }
                }
            }

# Group People Address


## Get Address of a People [/people/{id}/address]

+ Parameters
    + id (string) - id of the people in the form of an string

### Retrieve Address of A People [GET]

+ Response 200 (application/json)
    + Body

            {
                "street_1: Mauricio Brooks; street_2: 56014 Lebsack Passage; city: Port Dianna; state: Idaho; postal_code: 54817-5202; country: Cuba; "
            }


## Get Opening Balance of a People [/people/{id}/opening-balance]

+ Parameters
    + id (string) - id of the people in the form of an string

### Retrieve Opening Balance of A People [GET]

+ Response 200 (application/json)
    + Body

            {
                0
            }


## Check if email exist already for a people [/people/check-email/{?email}]

+ Parameters
    + email (string) - email of the people to be checked

### Check the email of a people [GET]

+ Response 200 (application/json)
    + Body

            {
                false
            }

# Group Chart of Accounts & Ledgers


## Ledger List [/ledgers/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Ledgers [GET]

Fetches all available ledgers with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "2",
                    "chart_id": "1",
                    "category_id": null,
                    "name": "Inventory",
                    "slug": "inventory",
                    "code": "140",
                    "system": "1",
                    "balance": 0,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/ledgers"
                },
                {
                    "id": "3",
                    "chart_id": "1",
                    "category_id": null,
                    "name": "Office Equipment",
                    "slug": "office_equipment",
                    "code": "150",
                    "system": "1",
                    "balance": 0,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/ledgers"
                }
            ]

## Ledger List [/ledgers/]

### Create A Ledger Account [POST]

    Model (application/json)

    {
        "chart_id": "7",
        "category_id": null,
        "name": "Bank Account",
        "code": "0123232"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": "105",
                "chart_id": "7",
                "category_id": null,
                "name": "Bank Account",
                "slug": "bank_account",
                "code": "123232",
                "trn_count": "0",
                "system": null,
                "balance": null
            }


## Manage Single Ledger [/ledgers/{id}]

+ Parameters
    + id (string) - id of the journal in the form of an string

### Retrieve A Ledger [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "105",
                "chart_id": "7",
                "category_id": null,
                "name": "Bank Account",
                "slug": "bank_account",
                "code": "123232",
                "trn_count": "0",
                "system": null,
                "balance": null
            }


## Chart of Account List [/chart-of-accounts]
A list of Chart of Accounts

### List All Chart of Accounts [GET]

Fetches all available chart-of-accounts

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "label": "Asset"
                },
                {
                    "id": "2",
                    "label": "Liability"
                },
                {
                    "id": "3",
                    "label": "Equity"
                },
                {
                    "id": "4",
                    "label": "Income"
                },
                {
                    "id": "5",
                    "label": "Expense"
                },
                {
                    "id": "6",
                    "label": "Asset & Liability"
                },
                {
                    "id": "7",
                    "label": "Bank"
                }
            ]


## Bank Accounts List [/bank-accounts]
A list of Bank Accounts

### List All Bank Accounts [GET]

Fetches all available bank accounts

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "105",
                    "name": "Bank Account",
                    "code": "123232",
                    "obalance": 0,
                    "balance": 200,
                    "total_debit": 0,
                    "total_credit": 0
                }
            ]


## Cash Accounts List [/cash-accounts]
A list of Cash Accounts

### List All Cash Accounts [GET]

Fetches all available cash accounts

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "7",
                    "name": "Cash",
                    "obalance": 0,
                    "balance": 10159.5,
                    "total_debit": 0,
                    "total_credit": 0
                }
            ]

# Group Accounts and Transfers


## Account List [/accounts/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Accounts [GET]

Fetches all available accounts with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 7,
                    "name": "Cash",
                    "balance": 10359.5
                },
                {
                    "id": 105,
                    "name": "Bank Account",
                    "balance": 0
                }
            ]


## Manage Single Accounts [/accounts/{id}]

+ Parameters
    + id (string) - id of the account in the form of an string

### Retrieve an Account [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "105",
                "chart_id": "7",
                "category_id": null,
                "name": "Bank Account",
                "slug": "bank_account",
                "code": "123232",
                "trn_count": "0",
                "system": null,
                "balance": null
            }

### Delete an Account [DELETE]

+ Request (application/json)
+ Response 204 (application/json)

## Get Cash and Bamk Accounts [/accounts/bank-accounts]

### Get all Cash related Accounts [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "7",
                    "name": "Cash",
                    "code": "90",
                    "obalance": 0,
                    "balance": 10159.5,
                    "total_debit": 0,
                    "total_credit": 0
                },
                {
                    "id": "105",
                    "name": "Bank Account",
                    "code": "123232",
                    "obalance": 0,
                    "balance": 200,
                    "total_debit": 0,
                    "total_credit": 0
                }
            ]


## Get Dashboard Accounts [/accounts/cash-at-bank]

### Get all Accounts shown in dashboard[GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "name": "Cash",
                    "balance": 10159.5
                },
                {
                    "name": "Cash at Bank",
                    "balance": 200,
                    "additional": [
                        {
                            "id": "105",
                            "chart_id": "7",
                            "name": "Bank Account",
                            "balance": 200
                        }
                    ]
                },
                {
                    "name": "Bank Loan",
                    "balance": 0,
                    "additional": []
                }
            ]


## Transfer Money [/accounts/transfer]

### Transfer between two Accounts [POST]

    Model (application/json)

    {
        "date": "2020-03-25",
        "from_account_id": 7,
        "to_account_id": 105,
        "amount": "200",
        "particulars": "cash transfer"
    }

+ Request (application/json)
+ Response 201 (application/json)

## List all Transfers [/accounts/transfers/list]

### Retrieve all Transfer transactions [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "voucher": 11,
                    "ac_from": "Cash",
                    "ac_to": "Bank Account",
                    "trn_date": "2020-03-25",
                    "particulars": "cash transfer",
                    "amount": "200.00",
                    "created_at": "2020-03-25",
                    "created_by": {
                        "ID": 1,
                        "user_nicename": "admin",
                        "user_email": "towhid@wedevs.com",
                        "user_url": "",
                        "display_name": "admin",
                        "avatar": "http://1.gravatar.com/avatar/401f7d187fcddb011270d09f31bab1f6?s=96&d=mm&r=g",
                        "_links": {
                            "self": {
                                "href": "https://example.com/wp-json/erp/v1/accounting/v1/accounts/1"
                            },
                            "collection": {
                                "href": "https://example.com/wp-json/erp/v1/accounting/v1/accounts"
                            }
                        }
                    }
                }
            ]

## Manage Single Transfers [/accounts/transfers/{id}]

+ Parameters
    + id (string) - id of the account in the form of an string

### Retrieve an Account [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "1",
                "voucher": 11,
                "ac_from": "Cash",
                "ac_to": "Bank Account",
                "trn_date": "2020-03-25",
                "particulars": "cash transfer",
                "amount": "200.00",
                "created_at": "2020-03-25",
                "created_by": {
                    "ID": 1,
                    "user_nicename": "admin",
                    "user_email": "towhid@wedevs.com",
                    "user_url": "",
                    "display_name": "admin",
                    "avatar": "http://1.gravatar.com/avatar/401f7d187fcddb011270d09f31bab1f6?s=96&d=mm&r=g",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/accounts/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/accounts"
                        }
                    }
                }
            }

# Group Companies


## Manage Single Company [/companies/{id}]

+ Parameters
    + id (string) - id of the bill in the form of an string

### Retrieve A Company [GET]

+ Response 200 (application/json)
    + Body

            {
                "logo": "https://example.com/wp-content/plugins/wp-erp/assets/images/placeholder.png",
                "name": "Untitled Company",
                "address": {
                    "address_1": "Street Address 1",
                    "address_2": "Address Line 2",
                    "city": "City",
                    "state": "State",
                    "postcode": "",
                    "country": "US"
                }
            }

# Group Currencies


## Currency List [/currencies/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Currencies [GET]

Fetches all available currencies

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "name": "AED",
                    "sign": "د.إ",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "2",
                    "name": "AFN",
                    "sign": "؋",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "3",
                    "name": "ALL",
                    "sign": "L",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "4",
                    "name": "AMD",
                    "sign": "AMD",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/4"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "5",
                    "name": "ANG",
                    "sign": "ƒ",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/5"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "6",
                    "name": "AOA",
                    "sign": "Kz",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/6"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "7",
                    "name": "ARS",
                    "sign": "$",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/7"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "8",
                    "name": "AUD",
                    "sign": "$",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/8"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "9",
                    "name": "AWG",
                    "sign": "ƒ",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/9"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "10",
                    "name": "AZN",
                    "sign": "₼",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/10"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "11",
                    "name": "BAM",
                    "sign": "KM",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/11"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "12",
                    "name": "BBD",
                    "sign": "$",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/12"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "13",
                    "name": "BDT",
                    "sign": "৳",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/13"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "14",
                    "name": "BGN",
                    "sign": "лв",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/14"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "15",
                    "name": "BHD",
                    "sign": ".د.ب",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/15"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "16",
                    "name": "BIF",
                    "sign": "Fr",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/16"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "17",
                    "name": "BMD",
                    "sign": "$",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/17"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "18",
                    "name": "BND",
                    "sign": "$",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/18"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "19",
                    "name": "BOB",
                    "sign": "Bs.",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/19"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                },
                {
                    "id": "20",
                    "name": "BRL",
                    "sign": "R$",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/currencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies/20"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/currencies"
                        }
                    }
                }
            ]

# Group Opening Balances


## Opening Balance List [/opening-balances]

Retrievs A list of available Opening Balances

### List All Opening Balances [GET]

Fetches all available opening-balances

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "financial_year_id": "1",
                    "chart_id": "1",
                    "ledger_id": "2",
                    "type": "ledger",
                    "debit": "0.00",
                    "credit": "0.00",
                    "created_at": "2020-03-20",
                    "created_by": "1",
                    "updated_at": null,
                    "updated_by": null,
                    "name": "2020",
                    "start_date": "2020-01-01",
                    "end_date": "2020-12-31",
                    "description": null,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                }
            ]

### Create A Opening Balance [POST]

    Model (application/json)

    {
        "description": "",
        "ledgers": {
            "4": [
                {
                    "id": "54",
                    "name": "Sales",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "400",
                    "system": "0",
                    "category_id": null,
                    "slug": "sales",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "54"
                },
                {
                    "id": "55",
                    "name": "Interest Income",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "460",
                    "system": "0",
                    "category_id": null,
                    "slug": "interest_income",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "55"
                },
                {
                    "id": "56",
                    "name": "Other Revenue",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "470",
                    "system": "0",
                    "category_id": null,
                    "slug": "other_revenue",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "56"
                },
                {
                    "id": "57",
                    "name": "Purchase Discount",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "475",
                    "system": "1",
                    "category_id": null,
                    "slug": "purchase_discount",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "57"
                },
                {
                    "id": "93",
                    "name": "Service Revenue",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1401",
                    "system": "1",
                    "category_id": null,
                    "slug": "service_revenue",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "93"
                },
                {
                    "id": "94",
                    "name": "Sales Revenue",
                    "balance": "Cr. $100",
                    "namespace": "erp/v1",
                    "code": "1402",
                    "system": "1",
                    "category_id": null,
                    "slug": "sales_revenue",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "94"
                },
                {
                    "id": "95",
                    "name": "Sales Returns and Allowance",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1403",
                    "system": "1",
                    "category_id": null,
                    "slug": "sales_returns_and_allowance",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "95"
                },
                {
                    "id": "96",
                    "name": "Gain on Disposal of Plant Assets",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1404",
                    "system": "1",
                    "category_id": null,
                    "slug": "gain_on_disposal_of_plant_assets",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "96"
                },
                {
                    "id": "97",
                    "name": "Asset Sales",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1405",
                    "system": "1",
                    "category_id": null,
                    "slug": "asset_sales",
                    "chart_id": "4",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "97"
                }
            ],
            "5": [
                {
                    "id": "24",
                    "name": "Costs of Goods Sold",
                    "balance": "Dr. $450",
                    "namespace": "erp/v1",
                    "code": "500",
                    "system": "1",
                    "category_id": null,
                    "slug": "costs_of_goods_sold",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "24"
                },
                {
                    "id": "25",
                    "name": "Advertising",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "600",
                    "system": "0",
                    "category_id": null,
                    "slug": "advertising",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "25"
                },
                {
                    "id": "26",
                    "name": "Bank Service Charges",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "605",
                    "system": "0",
                    "category_id": null,
                    "slug": "bank_service_charges",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "26"
                },
                {
                    "id": "27",
                    "name": "Janitorial Expenses",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "610",
                    "system": "0",
                    "category_id": null,
                    "slug": "janitorial_expenses",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "27"
                },
                {
                    "id": "28",
                    "name": "Consulting & Accounting",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "615",
                    "system": "0",
                    "category_id": null,
                    "slug": "consulting_accounting",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "28"
                },
                {
                    "id": "29",
                    "name": "Entertainment",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "620",
                    "system": "0",
                    "category_id": null,
                    "slug": "entertainment",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "29"
                },
                {
                    "id": "30",
                    "name": "Postage & Delivary",
                    "balance": "Dr. $100",
                    "namespace": "erp/v1",
                    "code": "624",
                    "system": "0",
                    "category_id": null,
                    "slug": "postage_delivary",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "30"
                },
                {
                    "id": "31",
                    "name": "General Expenses",
                    "balance": "Dr. $520",
                    "namespace": "erp/v1",
                    "code": "628",
                    "system": "0",
                    "category_id": null,
                    "slug": "general_expenses",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "31"
                },
                {
                    "id": "32",
                    "name": "Insurance",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "632",
                    "system": "0",
                    "category_id": null,
                    "slug": "insurance",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "32"
                },
                {
                    "id": "33",
                    "name": "Legal Expenses",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "636",
                    "system": "0",
                    "category_id": null,
                    "slug": "legal_expenses",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "33"
                },
                {
                    "id": "34",
                    "name": "Utilities",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "640",
                    "system": "1",
                    "category_id": null,
                    "slug": "utilities",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "34"
                },
                {
                    "id": "35",
                    "name": "Automobile Expenses",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "644",
                    "system": "0",
                    "category_id": null,
                    "slug": "automobile_expenses",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "35"
                },
                {
                    "id": "36",
                    "name": "Office Expenses",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "648",
                    "system": "1",
                    "category_id": null,
                    "slug": "office_expenses",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "36"
                },
                {
                    "id": "37",
                    "name": "Printing & Stationary",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "652",
                    "system": "0",
                    "category_id": null,
                    "slug": "printing_stationary",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "37"
                },
                {
                    "id": "38",
                    "name": "Rent",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "656",
                    "system": "1",
                    "category_id": null,
                    "slug": "rent",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "38"
                },
                {
                    "id": "39",
                    "name": "Repairs & Maintenance",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "660",
                    "system": "0",
                    "category_id": null,
                    "slug": "repairs_maintenance",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "39"
                },
                {
                    "id": "40",
                    "name": "Wages & Salaries",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "664",
                    "system": "0",
                    "category_id": null,
                    "slug": "wages_salaries",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "40"
                },
                {
                    "id": "41",
                    "name": "Payroll Tax Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "668",
                    "system": "0",
                    "category_id": null,
                    "slug": "payroll_tax_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "41"
                },
                {
                    "id": "42",
                    "name": "Dues & Subscriptions",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "672",
                    "system": "0",
                    "category_id": null,
                    "slug": "dues_subscriptions",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "42"
                },
                {
                    "id": "43",
                    "name": "Telephone & Internet",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "676",
                    "system": "0",
                    "category_id": null,
                    "slug": "telephone_internet",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "43"
                },
                {
                    "id": "44",
                    "name": "Travel",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "680",
                    "system": "0",
                    "category_id": null,
                    "slug": "travel",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "44"
                },
                {
                    "id": "45",
                    "name": "Bad Debts",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "684",
                    "system": "0",
                    "category_id": null,
                    "slug": "bad_debts",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "45"
                },
                {
                    "id": "46",
                    "name": "Depreciation",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "700",
                    "system": "1",
                    "category_id": null,
                    "slug": "depreciation",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "46"
                },
                {
                    "id": "47",
                    "name": "Income Tax Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "710",
                    "system": "0",
                    "category_id": null,
                    "slug": "income_tax_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "47"
                },
                {
                    "id": "48",
                    "name": "Employee Benefits Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "715",
                    "system": "0",
                    "category_id": null,
                    "slug": "employee_benefits_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "48"
                },
                {
                    "id": "49",
                    "name": "Interest Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "800",
                    "system": "0",
                    "category_id": null,
                    "slug": "interest_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "49"
                },
                {
                    "id": "50",
                    "name": "Bank Revaluations",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "810",
                    "system": "1",
                    "category_id": null,
                    "slug": "bank_revaluations",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "50"
                },
                {
                    "id": "51",
                    "name": "Unrealized Currency Gains",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "815",
                    "system": "1",
                    "category_id": null,
                    "slug": "unrealized_currency_gains",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "51"
                },
                {
                    "id": "52",
                    "name": "Realized Currency Gains",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "820",
                    "system": "1",
                    "category_id": null,
                    "slug": "realized_currency_gains",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "52"
                },
                {
                    "id": "53",
                    "name": "Sales Discount",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "825",
                    "system": "1",
                    "category_id": null,
                    "slug": "sales_discount",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "53"
                },
                {
                    "id": "98",
                    "name": "Amortization Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1501",
                    "system": "1",
                    "category_id": null,
                    "slug": "amortization_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "98"
                },
                {
                    "id": "99",
                    "name": "Freight-Out",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1502",
                    "system": "1",
                    "category_id": null,
                    "slug": "freight_out",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "99"
                },
                {
                    "id": "100",
                    "name": "Insurance Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1503",
                    "system": "1",
                    "category_id": null,
                    "slug": "insurance_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "100"
                },
                {
                    "id": "101",
                    "name": "Loss on Disposal of Plant Assets",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1504",
                    "system": "1",
                    "category_id": null,
                    "slug": "loss_on_disposal_of_plant_assets",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "101"
                },
                {
                    "id": "102",
                    "name": "Maintenance and Repairs Expense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1505",
                    "system": "1",
                    "category_id": null,
                    "slug": "maintenance_and_repairs_expense",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "102"
                },
                {
                    "id": "103",
                    "name": "Purchase",
                    "balance": "Dr. $700",
                    "namespace": "erp/v1",
                    "code": "1506",
                    "system": "1",
                    "category_id": null,
                    "slug": "purchase",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "103"
                },
                {
                    "id": "104",
                    "name": "Asset Purchase",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1506",
                    "system": "1",
                    "category_id": null,
                    "slug": "asset_purchase",
                    "chart_id": "5",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "104"
                }
            ],
            "7": [
                {
                    "id": "105",
                    "name": "Bank Account",
                    "balance": "Dr. $100",
                    "namespace": "erp/v1",
                    "code": "123232",
                    "system": null,
                    "category_id": null,
                    "slug": "bank_account",
                    "chart_id": "7",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "105"
                }
            ],
            "1": [
                {
                    "id": "2",
                    "name": "Inventory",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "140",
                    "system": "1",
                    "category_id": null,
                    "slug": "inventory",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "2"
                },
                {
                    "id": "3",
                    "name": "Office Equipment",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "150",
                    "system": "1",
                    "category_id": null,
                    "slug": "office_equipment",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "3"
                },
                {
                    "id": "4",
                    "name": "Less Accumulated Depreciation on Office Equipment",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "151",
                    "system": "1",
                    "category_id": null,
                    "slug": "less_accumulated_depreciation_on_office_equipment",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "4"
                },
                {
                    "id": "5",
                    "name": "Computer Equipment",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "160",
                    "system": "1",
                    "category_id": null,
                    "slug": "computer_equipment",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "5"
                },
                {
                    "id": "6",
                    "name": "Less Accumulated Depreciation on Computer Equipment",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "161",
                    "system": "1",
                    "category_id": null,
                    "slug": "less_accumulated_depreciation_on_computer_equipment",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "6"
                },
                {
                    "id": "7",
                    "name": "Cash",
                    "debit": "100",
                    "code": "90",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "7",
                    "balance": "Dr. $9689.5",
                    "system": "0",
                    "category_id": null,
                    "slug": "cash",
                    "namespace": "erp/v1"
                },
                {
                    "id": "62",
                    "name": "Savings Account",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "92",
                    "system": "0",
                    "category_id": null,
                    "slug": "savings_account",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "62"
                },
                {
                    "id": "63",
                    "name": "Allowance for Doubtful Accounts",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1001",
                    "system": "1",
                    "category_id": null,
                    "slug": "allowance_for_doubtful_accounts",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "63"
                },
                {
                    "id": "64",
                    "name": "Interest Receivable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1002",
                    "system": "1",
                    "category_id": null,
                    "slug": "interest_receivable",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "64"
                },
                {
                    "id": "65",
                    "name": "Supplies",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1003",
                    "system": "1",
                    "category_id": null,
                    "slug": "supplies",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "65"
                },
                {
                    "id": "66",
                    "name": "Prepaid Insurance",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1004",
                    "system": "1",
                    "category_id": null,
                    "slug": "prepaid_insurance",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "66"
                },
                {
                    "id": "67",
                    "name": "Prepaid Rent",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1005",
                    "system": "1",
                    "category_id": null,
                    "slug": "prepaid_rent",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "67"
                },
                {
                    "id": "68",
                    "name": "Prepaid Salary",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1006",
                    "system": "1",
                    "category_id": null,
                    "slug": "prepaid_salary",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "68"
                },
                {
                    "id": "69",
                    "name": "Land",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1007",
                    "system": "1",
                    "category_id": null,
                    "slug": "land",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "69"
                },
                {
                    "id": "70",
                    "name": "Furniture & Fixture",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1008",
                    "system": "1",
                    "category_id": null,
                    "slug": "furniture_fixture",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "70"
                },
                {
                    "id": "71",
                    "name": "Buildings",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1009",
                    "system": "1",
                    "category_id": null,
                    "slug": "buildings",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "71"
                },
                {
                    "id": "72",
                    "name": "Copyrights",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1010",
                    "system": "1",
                    "category_id": null,
                    "slug": "copyrights",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "72"
                },
                {
                    "id": "73",
                    "name": "Goodwill",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1011",
                    "system": "1",
                    "category_id": null,
                    "slug": "goodwill",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "73"
                },
                {
                    "id": "74",
                    "name": "Patents",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1012",
                    "system": "1",
                    "category_id": null,
                    "slug": "patents",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "74"
                },
                {
                    "id": "75",
                    "name": "Accoumulated Depreciation- Buildings",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1013",
                    "system": "1",
                    "category_id": null,
                    "slug": "accoumulated_depreciation_buildings",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "75"
                },
                {
                    "id": "76",
                    "name": "Accoumulated Depreciation- Furniture & Fixtures",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1014",
                    "system": "1",
                    "category_id": null,
                    "slug": "accoumulated_depreciation_furniture_fixtures",
                    "chart_id": "1",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "76"
                }
            ],
            "2": [
                {
                    "id": "9",
                    "name": "Accruals",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "205",
                    "system": "0",
                    "category_id": null,
                    "slug": "accruals",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "9"
                },
                {
                    "id": "10",
                    "name": "Unpaid Expense Claims",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "210",
                    "system": "1",
                    "category_id": null,
                    "slug": "unpaid_expense_claims",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "10"
                },
                {
                    "id": "11",
                    "name": "Wages Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "215",
                    "system": "1",
                    "category_id": null,
                    "slug": "wages_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "11"
                },
                {
                    "id": "12",
                    "name": "Wages Payable - Payroll",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "216",
                    "system": "0",
                    "category_id": null,
                    "slug": "wages_payable_payroll",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "12"
                },
                {
                    "id": "13",
                    "name": "Sales Tax",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "220",
                    "system": "1",
                    "category_id": null,
                    "slug": "sales_tax",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "13"
                },
                {
                    "id": "14",
                    "name": "Employee Tax Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "230",
                    "system": "0",
                    "category_id": null,
                    "slug": "employee_tax_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "14"
                },
                {
                    "id": "15",
                    "name": "Employee Benefits Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "235",
                    "system": "0",
                    "category_id": null,
                    "slug": "employee_benefits_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "15"
                },
                {
                    "id": "16",
                    "name": "Employee Deductions payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "236",
                    "system": "0",
                    "category_id": null,
                    "slug": "employee_deductions_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "16"
                },
                {
                    "id": "17",
                    "name": "Income Tax Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "240",
                    "system": "0",
                    "category_id": null,
                    "slug": "income_tax_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "17"
                },
                {
                    "id": "18",
                    "name": "Suspense",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "250",
                    "system": "0",
                    "category_id": null,
                    "slug": "suspense",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "18"
                },
                {
                    "id": "19",
                    "name": "Historical Adjustments",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "255",
                    "system": "1",
                    "category_id": null,
                    "slug": "historical_adjustments",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "19"
                },
                {
                    "id": "20",
                    "name": "Rounding",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "260",
                    "system": "1",
                    "category_id": null,
                    "slug": "rounding",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "20"
                },
                {
                    "id": "21",
                    "name": "Revenue Received in Advance",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "835",
                    "system": "0",
                    "category_id": null,
                    "slug": "revenue_received_in_advance",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "21"
                },
                {
                    "id": "22",
                    "name": "Clearing Account",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "855",
                    "system": "0",
                    "category_id": null,
                    "slug": "clearing_account",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "22"
                },
                {
                    "id": "23",
                    "name": "Loan",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "290",
                    "system": "0",
                    "category_id": null,
                    "slug": "loan",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "23"
                },
                {
                    "id": "77",
                    "name": "Notes Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1201",
                    "system": "1",
                    "category_id": null,
                    "slug": "notes_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "77"
                },
                {
                    "id": "78",
                    "name": "Salaries and Wages Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1202",
                    "system": "1",
                    "category_id": null,
                    "slug": "salaries_and_wages_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "78"
                },
                {
                    "id": "79",
                    "name": "Unearned Rent Revenue",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1203",
                    "system": "1",
                    "category_id": null,
                    "slug": "unearned_rent_revenue",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "79"
                },
                {
                    "id": "80",
                    "name": "Interest Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1204",
                    "system": "1",
                    "category_id": null,
                    "slug": "interest_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "80"
                },
                {
                    "id": "81",
                    "name": "Dividends Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1205",
                    "system": "1",
                    "category_id": null,
                    "slug": "dividends_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "81"
                },
                {
                    "id": "82",
                    "name": "Bonds Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1206",
                    "system": "1",
                    "category_id": null,
                    "slug": "bonds_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "82"
                },
                {
                    "id": "83",
                    "name": "Discount on Bonds Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1207",
                    "system": "1",
                    "category_id": null,
                    "slug": "discount_on_bonds_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "83"
                },
                {
                    "id": "84",
                    "name": "Premium on Bonds Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1208",
                    "system": "1",
                    "category_id": null,
                    "slug": "premium_on_bonds_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "84"
                },
                {
                    "id": "85",
                    "name": "Mortgage Payable",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1209",
                    "system": "1",
                    "category_id": null,
                    "slug": "mortgage_payable",
                    "chart_id": "2",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "85"
                }
            ],
            "3": [
                {
                    "id": "58",
                    "name": "Owners Contribution",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "300",
                    "system": "0",
                    "category_id": null,
                    "slug": "owners_contribution",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "58"
                },
                {
                    "id": "59",
                    "name": "Owners Draw",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "310",
                    "system": "0",
                    "category_id": null,
                    "slug": "owners_draw",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "59"
                },
                {
                    "id": "60",
                    "name": "Retained Earnings",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "320",
                    "system": "1",
                    "category_id": null,
                    "slug": "retained_earnings",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "60"
                },
                {
                    "id": "61",
                    "name": "Common Stock",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "330",
                    "system": "0",
                    "category_id": null,
                    "slug": "common_stock",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "61"
                },
                {
                    "id": "86",
                    "name": "Owner's Equity",
                    "credit": "100",
                    "code": "1301",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "86",
                    "balance": "Cr. $11000",
                    "system": "1",
                    "category_id": null,
                    "slug": "owner_s_equity",
                    "namespace": "erp/v1"
                },
                {
                    "id": "87",
                    "name": "Paid-in Capital in Excess of Par- Common Stock",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1302",
                    "system": "1",
                    "category_id": null,
                    "slug": "paid_in_capital_in_excess_of_par_common_stock",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "87"
                },
                {
                    "id": "88",
                    "name": "Paid-in Capital in Excess of Par- Preferred Stock",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1303",
                    "system": "1",
                    "category_id": null,
                    "slug": "paid_in_capital_in_excess_of_par_preferred_stock",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "88"
                },
                {
                    "id": "89",
                    "name": "Preferred Stock",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1304",
                    "system": "1",
                    "category_id": null,
                    "slug": "preferred_stock",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "89"
                },
                {
                    "id": "90",
                    "name": "Treasury Stock",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1305",
                    "system": "1",
                    "category_id": null,
                    "slug": "treasury_stock",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "90"
                },
                {
                    "id": "91",
                    "name": "Dividends",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1306",
                    "system": "1",
                    "category_id": null,
                    "slug": "dividends",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "91"
                },
                {
                    "id": "92",
                    "name": "Income Summary",
                    "balance": "Dr. $0",
                    "namespace": "erp/v1",
                    "code": "1307",
                    "system": "1",
                    "category_id": null,
                    "slug": "income_summary",
                    "chart_id": "3",
                    "rest_base": "accounting/v1/ledgers",
                    "ledger_id": "92"
                }
            ]
        },
        "total_cr": 100,
        "acct_pay": [],
        "year": "1",
        "total_dr": 100,
        "acct_rec": [],
        "tax_pay": []
    }

+ Response 201 (application/json)
    + Body

            {
                "0": {
                    "id": "1",
                    "financial_year_id": "1",
                    "ledger_id": "2",
                    "name": "Inventory",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "1": {
                    "id": "2",
                    "financial_year_id": "1",
                    "ledger_id": "3",
                    "name": "Office Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "2": {
                    "id": "3",
                    "financial_year_id": "1",
                    "ledger_id": "4",
                    "name": "Less Accumulated Depreciation on Office Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "3": {
                    "id": "4",
                    "financial_year_id": "1",
                    "ledger_id": "5",
                    "name": "Computer Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "4": {
                    "id": "5",
                    "financial_year_id": "1",
                    "ledger_id": "6",
                    "name": "Less Accumulated Depreciation on Computer Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "5": {
                    "id": "6",
                    "financial_year_id": "1",
                    "ledger_id": "7",
                    "name": "Cash",
                    "chart_id": "1",
                    "debit": "100.00",
                    "credit": "0.00"
                },
                "6": {
                    "id": "7",
                    "financial_year_id": "1",
                    "ledger_id": "62",
                    "name": "Savings Account",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "7": {
                    "id": "8",
                    "financial_year_id": "1",
                    "ledger_id": "63",
                    "name": "Allowance for Doubtful Accounts",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "8": {
                    "id": "9",
                    "financial_year_id": "1",
                    "ledger_id": "64",
                    "name": "Interest Receivable",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "9": {
                    "id": "10",
                    "financial_year_id": "1",
                    "ledger_id": "65",
                    "name": "Supplies",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "10": {
                    "id": "11",
                    "financial_year_id": "1",
                    "ledger_id": "66",
                    "name": "Prepaid Insurance",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "11": {
                    "id": "12",
                    "financial_year_id": "1",
                    "ledger_id": "67",
                    "name": "Prepaid Rent",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "12": {
                    "id": "13",
                    "financial_year_id": "1",
                    "ledger_id": "68",
                    "name": "Prepaid Salary",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "13": {
                    "id": "14",
                    "financial_year_id": "1",
                    "ledger_id": "69",
                    "name": "Land",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "14": {
                    "id": "15",
                    "financial_year_id": "1",
                    "ledger_id": "70",
                    "name": "Furniture & Fixture",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "15": {
                    "id": "16",
                    "financial_year_id": "1",
                    "ledger_id": "71",
                    "name": "Buildings",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "16": {
                    "id": "17",
                    "financial_year_id": "1",
                    "ledger_id": "72",
                    "name": "Copyrights",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "17": {
                    "id": "18",
                    "financial_year_id": "1",
                    "ledger_id": "73",
                    "name": "Goodwill",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "18": {
                    "id": "19",
                    "financial_year_id": "1",
                    "ledger_id": "74",
                    "name": "Patents",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "19": {
                    "id": "20",
                    "financial_year_id": "1",
                    "ledger_id": "75",
                    "name": "Accoumulated Depreciation- Buildings",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "20": {
                    "id": "21",
                    "financial_year_id": "1",
                    "ledger_id": "76",
                    "name": "Accoumulated Depreciation- Furniture & Fixtures",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "21": {
                    "id": "22",
                    "financial_year_id": "1",
                    "ledger_id": "9",
                    "name": "Accruals",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "22": {
                    "id": "23",
                    "financial_year_id": "1",
                    "ledger_id": "10",
                    "name": "Unpaid Expense Claims",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "23": {
                    "id": "24",
                    "financial_year_id": "1",
                    "ledger_id": "11",
                    "name": "Wages Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "24": {
                    "id": "25",
                    "financial_year_id": "1",
                    "ledger_id": "12",
                    "name": "Wages Payable - Payroll",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "25": {
                    "id": "26",
                    "financial_year_id": "1",
                    "ledger_id": "13",
                    "name": "Sales Tax",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "26": {
                    "id": "27",
                    "financial_year_id": "1",
                    "ledger_id": "14",
                    "name": "Employee Tax Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "27": {
                    "id": "28",
                    "financial_year_id": "1",
                    "ledger_id": "15",
                    "name": "Employee Benefits Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "28": {
                    "id": "29",
                    "financial_year_id": "1",
                    "ledger_id": "16",
                    "name": "Employee Deductions payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "29": {
                    "id": "30",
                    "financial_year_id": "1",
                    "ledger_id": "17",
                    "name": "Income Tax Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "30": {
                    "id": "31",
                    "financial_year_id": "1",
                    "ledger_id": "18",
                    "name": "Suspense",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "31": {
                    "id": "32",
                    "financial_year_id": "1",
                    "ledger_id": "19",
                    "name": "Historical Adjustments",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "32": {
                    "id": "33",
                    "financial_year_id": "1",
                    "ledger_id": "20",
                    "name": "Rounding",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "33": {
                    "id": "34",
                    "financial_year_id": "1",
                    "ledger_id": "21",
                    "name": "Revenue Received in Advance",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "34": {
                    "id": "35",
                    "financial_year_id": "1",
                    "ledger_id": "22",
                    "name": "Clearing Account",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "35": {
                    "id": "36",
                    "financial_year_id": "1",
                    "ledger_id": "23",
                    "name": "Loan",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "36": {
                    "id": "37",
                    "financial_year_id": "1",
                    "ledger_id": "77",
                    "name": "Notes Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "37": {
                    "id": "38",
                    "financial_year_id": "1",
                    "ledger_id": "78",
                    "name": "Salaries and Wages Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "38": {
                    "id": "39",
                    "financial_year_id": "1",
                    "ledger_id": "79",
                    "name": "Unearned Rent Revenue",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "39": {
                    "id": "40",
                    "financial_year_id": "1",
                    "ledger_id": "80",
                    "name": "Interest Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "40": {
                    "id": "41",
                    "financial_year_id": "1",
                    "ledger_id": "81",
                    "name": "Dividends Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "41": {
                    "id": "42",
                    "financial_year_id": "1",
                    "ledger_id": "82",
                    "name": "Bonds Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "42": {
                    "id": "43",
                    "financial_year_id": "1",
                    "ledger_id": "83",
                    "name": "Discount on Bonds Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "43": {
                    "id": "44",
                    "financial_year_id": "1",
                    "ledger_id": "84",
                    "name": "Premium on Bonds Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "44": {
                    "id": "45",
                    "financial_year_id": "1",
                    "ledger_id": "85",
                    "name": "Mortgage Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "45": {
                    "id": "46",
                    "financial_year_id": "1",
                    "ledger_id": "58",
                    "name": "Owners Contribution",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "46": {
                    "id": "47",
                    "financial_year_id": "1",
                    "ledger_id": "59",
                    "name": "Owners Draw",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "47": {
                    "id": "48",
                    "financial_year_id": "1",
                    "ledger_id": "60",
                    "name": "Retained Earnings",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "48": {
                    "id": "49",
                    "financial_year_id": "1",
                    "ledger_id": "61",
                    "name": "Common Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "49": {
                    "id": "50",
                    "financial_year_id": "1",
                    "ledger_id": "86",
                    "name": "Owner's Equity",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "100.00"
                },
                "50": {
                    "id": "51",
                    "financial_year_id": "1",
                    "ledger_id": "87",
                    "name": "Paid-in Capital in Excess of Par- Common Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "51": {
                    "id": "52",
                    "financial_year_id": "1",
                    "ledger_id": "88",
                    "name": "Paid-in Capital in Excess of Par- Preferred Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "52": {
                    "id": "53",
                    "financial_year_id": "1",
                    "ledger_id": "89",
                    "name": "Preferred Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "53": {
                    "id": "54",
                    "financial_year_id": "1",
                    "ledger_id": "90",
                    "name": "Treasury Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "54": {
                    "id": "55",
                    "financial_year_id": "1",
                    "ledger_id": "91",
                    "name": "Dividends",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "55": {
                    "id": "56",
                    "financial_year_id": "1",
                    "ledger_id": "92",
                    "name": "Income Summary",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "56": {
                    "id": "57",
                    "financial_year_id": "1",
                    "ledger_id": "54",
                    "name": "Sales",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "57": {
                    "id": "58",
                    "financial_year_id": "1",
                    "ledger_id": "55",
                    "name": "Interest Income",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "58": {
                    "id": "59",
                    "financial_year_id": "1",
                    "ledger_id": "56",
                    "name": "Other Revenue",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "59": {
                    "id": "60",
                    "financial_year_id": "1",
                    "ledger_id": "57",
                    "name": "Purchase Discount",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "60": {
                    "id": "61",
                    "financial_year_id": "1",
                    "ledger_id": "93",
                    "name": "Service Revenue",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "61": {
                    "id": "62",
                    "financial_year_id": "1",
                    "ledger_id": "94",
                    "name": "Sales Revenue",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "62": {
                    "id": "63",
                    "financial_year_id": "1",
                    "ledger_id": "95",
                    "name": "Sales Returns and Allowance",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "63": {
                    "id": "64",
                    "financial_year_id": "1",
                    "ledger_id": "96",
                    "name": "Gain on Disposal of Plant Assets",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "64": {
                    "id": "65",
                    "financial_year_id": "1",
                    "ledger_id": "97",
                    "name": "Asset Sales",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "65": {
                    "id": "66",
                    "financial_year_id": "1",
                    "ledger_id": "24",
                    "name": "Costs of Goods Sold",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "66": {
                    "id": "67",
                    "financial_year_id": "1",
                    "ledger_id": "25",
                    "name": "Advertising",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "67": {
                    "id": "68",
                    "financial_year_id": "1",
                    "ledger_id": "26",
                    "name": "Bank Service Charges",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "68": {
                    "id": "69",
                    "financial_year_id": "1",
                    "ledger_id": "27",
                    "name": "Janitorial Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "69": {
                    "id": "70",
                    "financial_year_id": "1",
                    "ledger_id": "28",
                    "name": "Consulting & Accounting",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "70": {
                    "id": "71",
                    "financial_year_id": "1",
                    "ledger_id": "29",
                    "name": "Entertainment",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "71": {
                    "id": "72",
                    "financial_year_id": "1",
                    "ledger_id": "30",
                    "name": "Postage & Delivary",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "72": {
                    "id": "73",
                    "financial_year_id": "1",
                    "ledger_id": "31",
                    "name": "General Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "73": {
                    "id": "74",
                    "financial_year_id": "1",
                    "ledger_id": "32",
                    "name": "Insurance",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "74": {
                    "id": "75",
                    "financial_year_id": "1",
                    "ledger_id": "33",
                    "name": "Legal Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "75": {
                    "id": "76",
                    "financial_year_id": "1",
                    "ledger_id": "34",
                    "name": "Utilities",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "76": {
                    "id": "77",
                    "financial_year_id": "1",
                    "ledger_id": "35",
                    "name": "Automobile Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "77": {
                    "id": "78",
                    "financial_year_id": "1",
                    "ledger_id": "36",
                    "name": "Office Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "78": {
                    "id": "79",
                    "financial_year_id": "1",
                    "ledger_id": "37",
                    "name": "Printing & Stationary",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "79": {
                    "id": "80",
                    "financial_year_id": "1",
                    "ledger_id": "38",
                    "name": "Rent",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "80": {
                    "id": "81",
                    "financial_year_id": "1",
                    "ledger_id": "39",
                    "name": "Repairs & Maintenance",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "81": {
                    "id": "82",
                    "financial_year_id": "1",
                    "ledger_id": "40",
                    "name": "Wages & Salaries",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "82": {
                    "id": "83",
                    "financial_year_id": "1",
                    "ledger_id": "41",
                    "name": "Payroll Tax Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "83": {
                    "id": "84",
                    "financial_year_id": "1",
                    "ledger_id": "42",
                    "name": "Dues & Subscriptions",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "84": {
                    "id": "85",
                    "financial_year_id": "1",
                    "ledger_id": "43",
                    "name": "Telephone & Internet",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "85": {
                    "id": "86",
                    "financial_year_id": "1",
                    "ledger_id": "44",
                    "name": "Travel",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "86": {
                    "id": "87",
                    "financial_year_id": "1",
                    "ledger_id": "45",
                    "name": "Bad Debts",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "87": {
                    "id": "88",
                    "financial_year_id": "1",
                    "ledger_id": "46",
                    "name": "Depreciation",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "88": {
                    "id": "89",
                    "financial_year_id": "1",
                    "ledger_id": "47",
                    "name": "Income Tax Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "89": {
                    "id": "90",
                    "financial_year_id": "1",
                    "ledger_id": "48",
                    "name": "Employee Benefits Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "90": {
                    "id": "91",
                    "financial_year_id": "1",
                    "ledger_id": "49",
                    "name": "Interest Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "91": {
                    "id": "92",
                    "financial_year_id": "1",
                    "ledger_id": "50",
                    "name": "Bank Revaluations",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "92": {
                    "id": "93",
                    "financial_year_id": "1",
                    "ledger_id": "51",
                    "name": "Unrealized Currency Gains",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "93": {
                    "id": "94",
                    "financial_year_id": "1",
                    "ledger_id": "52",
                    "name": "Realized Currency Gains",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "94": {
                    "id": "95",
                    "financial_year_id": "1",
                    "ledger_id": "53",
                    "name": "Sales Discount",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "95": {
                    "id": "96",
                    "financial_year_id": "1",
                    "ledger_id": "98",
                    "name": "Amortization Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "96": {
                    "id": "97",
                    "financial_year_id": "1",
                    "ledger_id": "99",
                    "name": "Freight-Out",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "97": {
                    "id": "98",
                    "financial_year_id": "1",
                    "ledger_id": "100",
                    "name": "Insurance Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "98": {
                    "id": "99",
                    "financial_year_id": "1",
                    "ledger_id": "101",
                    "name": "Loss on Disposal of Plant Assets",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "99": {
                    "id": "100",
                    "financial_year_id": "1",
                    "ledger_id": "102",
                    "name": "Maintenance and Repairs Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "100": {
                    "id": "101",
                    "financial_year_id": "1",
                    "ledger_id": "103",
                    "name": "Purchase",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "101": {
                    "id": "102",
                    "financial_year_id": "1",
                    "ledger_id": "104",
                    "name": "Asset Purchase",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "102": {
                    "id": "103",
                    "financial_year_id": "1",
                    "ledger_id": "105",
                    "name": "Bank Account",
                    "chart_id": "7",
                    "debit": "0.00",
                    "credit": "0.00"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/opening-balances",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/0"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                    }
                }
            }

## Manage Single Opening Balance [/opening-balances/{id}]

+ Parameters
    + id (string) - id of the opening balance in the form of an string

### Retrieve A Opening Balance [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "financial_year_id": "1",
                    "ledger_id": "2",
                    "name": "Inventory",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "2",
                    "financial_year_id": "1",
                    "ledger_id": "3",
                    "name": "Office Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "3",
                    "financial_year_id": "1",
                    "ledger_id": "4",
                    "name": "Less Accumulated Depreciation on Office Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "4",
                    "financial_year_id": "1",
                    "ledger_id": "5",
                    "name": "Computer Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/4"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "5",
                    "financial_year_id": "1",
                    "ledger_id": "6",
                    "name": "Less Accumulated Depreciation on Computer Equipment",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/5"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "6",
                    "financial_year_id": "1",
                    "ledger_id": "7",
                    "name": "Cash",
                    "chart_id": "1",
                    "debit": "100.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/6"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "7",
                    "financial_year_id": "1",
                    "ledger_id": "62",
                    "name": "Savings Account",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/7"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "8",
                    "financial_year_id": "1",
                    "ledger_id": "63",
                    "name": "Allowance for Doubtful Accounts",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/8"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "9",
                    "financial_year_id": "1",
                    "ledger_id": "64",
                    "name": "Interest Receivable",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/9"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "10",
                    "financial_year_id": "1",
                    "ledger_id": "65",
                    "name": "Supplies",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/10"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "11",
                    "financial_year_id": "1",
                    "ledger_id": "66",
                    "name": "Prepaid Insurance",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/11"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "12",
                    "financial_year_id": "1",
                    "ledger_id": "67",
                    "name": "Prepaid Rent",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/12"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "13",
                    "financial_year_id": "1",
                    "ledger_id": "68",
                    "name": "Prepaid Salary",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/13"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "14",
                    "financial_year_id": "1",
                    "ledger_id": "69",
                    "name": "Land",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/14"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "15",
                    "financial_year_id": "1",
                    "ledger_id": "70",
                    "name": "Furniture & Fixture",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/15"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "16",
                    "financial_year_id": "1",
                    "ledger_id": "71",
                    "name": "Buildings",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/16"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "17",
                    "financial_year_id": "1",
                    "ledger_id": "72",
                    "name": "Copyrights",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/17"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "18",
                    "financial_year_id": "1",
                    "ledger_id": "73",
                    "name": "Goodwill",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/18"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "19",
                    "financial_year_id": "1",
                    "ledger_id": "74",
                    "name": "Patents",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/19"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "20",
                    "financial_year_id": "1",
                    "ledger_id": "75",
                    "name": "Accoumulated Depreciation- Buildings",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/20"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "21",
                    "financial_year_id": "1",
                    "ledger_id": "76",
                    "name": "Accoumulated Depreciation- Furniture & Fixtures",
                    "chart_id": "1",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/21"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "22",
                    "financial_year_id": "1",
                    "ledger_id": "9",
                    "name": "Accruals",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/22"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "23",
                    "financial_year_id": "1",
                    "ledger_id": "10",
                    "name": "Unpaid Expense Claims",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/23"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "24",
                    "financial_year_id": "1",
                    "ledger_id": "11",
                    "name": "Wages Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/24"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "25",
                    "financial_year_id": "1",
                    "ledger_id": "12",
                    "name": "Wages Payable - Payroll",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/25"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "26",
                    "financial_year_id": "1",
                    "ledger_id": "13",
                    "name": "Sales Tax",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/26"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "27",
                    "financial_year_id": "1",
                    "ledger_id": "14",
                    "name": "Employee Tax Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/27"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "28",
                    "financial_year_id": "1",
                    "ledger_id": "15",
                    "name": "Employee Benefits Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/28"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "29",
                    "financial_year_id": "1",
                    "ledger_id": "16",
                    "name": "Employee Deductions payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/29"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "30",
                    "financial_year_id": "1",
                    "ledger_id": "17",
                    "name": "Income Tax Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/30"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "31",
                    "financial_year_id": "1",
                    "ledger_id": "18",
                    "name": "Suspense",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/31"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "32",
                    "financial_year_id": "1",
                    "ledger_id": "19",
                    "name": "Historical Adjustments",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/32"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "33",
                    "financial_year_id": "1",
                    "ledger_id": "20",
                    "name": "Rounding",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/33"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "34",
                    "financial_year_id": "1",
                    "ledger_id": "21",
                    "name": "Revenue Received in Advance",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/34"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "35",
                    "financial_year_id": "1",
                    "ledger_id": "22",
                    "name": "Clearing Account",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/35"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "36",
                    "financial_year_id": "1",
                    "ledger_id": "23",
                    "name": "Loan",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/36"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "37",
                    "financial_year_id": "1",
                    "ledger_id": "77",
                    "name": "Notes Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/37"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "38",
                    "financial_year_id": "1",
                    "ledger_id": "78",
                    "name": "Salaries and Wages Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/38"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "39",
                    "financial_year_id": "1",
                    "ledger_id": "79",
                    "name": "Unearned Rent Revenue",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/39"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "40",
                    "financial_year_id": "1",
                    "ledger_id": "80",
                    "name": "Interest Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/40"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "41",
                    "financial_year_id": "1",
                    "ledger_id": "81",
                    "name": "Dividends Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/41"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "42",
                    "financial_year_id": "1",
                    "ledger_id": "82",
                    "name": "Bonds Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/42"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "43",
                    "financial_year_id": "1",
                    "ledger_id": "83",
                    "name": "Discount on Bonds Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/43"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "44",
                    "financial_year_id": "1",
                    "ledger_id": "84",
                    "name": "Premium on Bonds Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/44"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "45",
                    "financial_year_id": "1",
                    "ledger_id": "85",
                    "name": "Mortgage Payable",
                    "chart_id": "2",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/45"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "46",
                    "financial_year_id": "1",
                    "ledger_id": "58",
                    "name": "Owners Contribution",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/46"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "47",
                    "financial_year_id": "1",
                    "ledger_id": "59",
                    "name": "Owners Draw",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/47"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "48",
                    "financial_year_id": "1",
                    "ledger_id": "60",
                    "name": "Retained Earnings",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/48"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "49",
                    "financial_year_id": "1",
                    "ledger_id": "61",
                    "name": "Common Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/49"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "50",
                    "financial_year_id": "1",
                    "ledger_id": "86",
                    "name": "Owner's Equity",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "100.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/50"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "51",
                    "financial_year_id": "1",
                    "ledger_id": "87",
                    "name": "Paid-in Capital in Excess of Par- Common Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/51"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "52",
                    "financial_year_id": "1",
                    "ledger_id": "88",
                    "name": "Paid-in Capital in Excess of Par- Preferred Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/52"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "53",
                    "financial_year_id": "1",
                    "ledger_id": "89",
                    "name": "Preferred Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/53"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "54",
                    "financial_year_id": "1",
                    "ledger_id": "90",
                    "name": "Treasury Stock",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/54"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "55",
                    "financial_year_id": "1",
                    "ledger_id": "91",
                    "name": "Dividends",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/55"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "56",
                    "financial_year_id": "1",
                    "ledger_id": "92",
                    "name": "Income Summary",
                    "chart_id": "3",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/56"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "57",
                    "financial_year_id": "1",
                    "ledger_id": "54",
                    "name": "Sales",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/57"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "58",
                    "financial_year_id": "1",
                    "ledger_id": "55",
                    "name": "Interest Income",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/58"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "59",
                    "financial_year_id": "1",
                    "ledger_id": "56",
                    "name": "Other Revenue",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/59"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "60",
                    "financial_year_id": "1",
                    "ledger_id": "57",
                    "name": "Purchase Discount",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/60"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "61",
                    "financial_year_id": "1",
                    "ledger_id": "93",
                    "name": "Service Revenue",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/61"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "62",
                    "financial_year_id": "1",
                    "ledger_id": "94",
                    "name": "Sales Revenue",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/62"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "63",
                    "financial_year_id": "1",
                    "ledger_id": "95",
                    "name": "Sales Returns and Allowance",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/63"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "64",
                    "financial_year_id": "1",
                    "ledger_id": "96",
                    "name": "Gain on Disposal of Plant Assets",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/64"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "65",
                    "financial_year_id": "1",
                    "ledger_id": "97",
                    "name": "Asset Sales",
                    "chart_id": "4",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/65"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "66",
                    "financial_year_id": "1",
                    "ledger_id": "24",
                    "name": "Costs of Goods Sold",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/66"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "67",
                    "financial_year_id": "1",
                    "ledger_id": "25",
                    "name": "Advertising",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/67"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "68",
                    "financial_year_id": "1",
                    "ledger_id": "26",
                    "name": "Bank Service Charges",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/68"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "69",
                    "financial_year_id": "1",
                    "ledger_id": "27",
                    "name": "Janitorial Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/69"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "70",
                    "financial_year_id": "1",
                    "ledger_id": "28",
                    "name": "Consulting & Accounting",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/70"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "71",
                    "financial_year_id": "1",
                    "ledger_id": "29",
                    "name": "Entertainment",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/71"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "72",
                    "financial_year_id": "1",
                    "ledger_id": "30",
                    "name": "Postage & Delivary",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/72"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "73",
                    "financial_year_id": "1",
                    "ledger_id": "31",
                    "name": "General Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/73"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "74",
                    "financial_year_id": "1",
                    "ledger_id": "32",
                    "name": "Insurance",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/74"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "75",
                    "financial_year_id": "1",
                    "ledger_id": "33",
                    "name": "Legal Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/75"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "76",
                    "financial_year_id": "1",
                    "ledger_id": "34",
                    "name": "Utilities",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/76"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "77",
                    "financial_year_id": "1",
                    "ledger_id": "35",
                    "name": "Automobile Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/77"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "78",
                    "financial_year_id": "1",
                    "ledger_id": "36",
                    "name": "Office Expenses",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/78"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "79",
                    "financial_year_id": "1",
                    "ledger_id": "37",
                    "name": "Printing & Stationary",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/79"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "80",
                    "financial_year_id": "1",
                    "ledger_id": "38",
                    "name": "Rent",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/80"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "81",
                    "financial_year_id": "1",
                    "ledger_id": "39",
                    "name": "Repairs & Maintenance",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/81"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "82",
                    "financial_year_id": "1",
                    "ledger_id": "40",
                    "name": "Wages & Salaries",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/82"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "83",
                    "financial_year_id": "1",
                    "ledger_id": "41",
                    "name": "Payroll Tax Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/83"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "84",
                    "financial_year_id": "1",
                    "ledger_id": "42",
                    "name": "Dues & Subscriptions",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/84"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "85",
                    "financial_year_id": "1",
                    "ledger_id": "43",
                    "name": "Telephone & Internet",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/85"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "86",
                    "financial_year_id": "1",
                    "ledger_id": "44",
                    "name": "Travel",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/86"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "87",
                    "financial_year_id": "1",
                    "ledger_id": "45",
                    "name": "Bad Debts",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/87"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "88",
                    "financial_year_id": "1",
                    "ledger_id": "46",
                    "name": "Depreciation",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/88"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "89",
                    "financial_year_id": "1",
                    "ledger_id": "47",
                    "name": "Income Tax Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/89"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "90",
                    "financial_year_id": "1",
                    "ledger_id": "48",
                    "name": "Employee Benefits Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/90"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "91",
                    "financial_year_id": "1",
                    "ledger_id": "49",
                    "name": "Interest Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/91"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "92",
                    "financial_year_id": "1",
                    "ledger_id": "50",
                    "name": "Bank Revaluations",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/92"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "93",
                    "financial_year_id": "1",
                    "ledger_id": "51",
                    "name": "Unrealized Currency Gains",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/93"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "94",
                    "financial_year_id": "1",
                    "ledger_id": "52",
                    "name": "Realized Currency Gains",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/94"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "95",
                    "financial_year_id": "1",
                    "ledger_id": "53",
                    "name": "Sales Discount",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/95"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "96",
                    "financial_year_id": "1",
                    "ledger_id": "98",
                    "name": "Amortization Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/96"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "97",
                    "financial_year_id": "1",
                    "ledger_id": "99",
                    "name": "Freight-Out",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/97"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "98",
                    "financial_year_id": "1",
                    "ledger_id": "100",
                    "name": "Insurance Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/98"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "99",
                    "financial_year_id": "1",
                    "ledger_id": "101",
                    "name": "Loss on Disposal of Plant Assets",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/99"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "100",
                    "financial_year_id": "1",
                    "ledger_id": "102",
                    "name": "Maintenance and Repairs Expense",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/100"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "101",
                    "financial_year_id": "1",
                    "ledger_id": "103",
                    "name": "Purchase",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/101"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "102",
                    "financial_year_id": "1",
                    "ledger_id": "104",
                    "name": "Asset Purchase",
                    "chart_id": "5",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/102"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                },
                {
                    "id": "103",
                    "financial_year_id": "1",
                    "ledger_id": "105",
                    "name": "Bank Account",
                    "chart_id": "7",
                    "debit": "0.00",
                    "credit": "0.00",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/opening-balances",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances/103"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/opening-balances"
                        }
                    }
                }
            ]


## Get Opening Balance Names [/opening-balances/names]
A list of Opening Balance Names

### List All Opening Balance Names [GET]

Fetches all available opening-balance names

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "name": "2020",
                    "start_date": "2020-01-01",
                    "end_date": "2020-12-31"
                }
            ]


## Manage Opening Balance Count [/opening-balances/{id}/count]

+ Parameters
    + id (string) - id of the financial year in the form of an string

### Retrieve Opening Balance Count of a financial year [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            "103"


## Manage Opening Balance virtual accounts [/opening-balances/virtual-accts/{id}/]

+ Parameters
    + id (string) - id of the financial year in the form of an string

### Retrieve virtual accounts of an Opening Balance of a financial year [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            {
                "acct_receivable": [],
                "acct_payable": [],
                "tax_payable": []
            }


## Manage Opening Balance Payables & Receivables [/opening-balances/acc-payable-receivable]


### Retrieve Opening Balance Payables & Receivablesr [GET]

+ Request (application/json)
+ Response 200 (application/json)
    + Body

            {
                "invoice_acc": 0,
                "bill_purchase_acc": 0
            }

# Group Closing Balances


## Closing Balance List [/closing-balance]

### Closing Balance Sheet of Current Financial Year [POST]

Closing Balance Sheet of Current Financial Year

    Model (application/json)

    {
        "end_date": "2019-12-31",
        "start_date": "2019-01-01",
        "f_year_id": "1"
    }

+ Response 200 (application/json)

## Get Closest Financial Year [/closing-balance/closest-fn-year]
Get Closest Financial Year

### Get Closest Financial Year [GET]

Fetches next closest financial year

+ Response 200 (application/json)
    + Body

            {
                "id": "1",
                "name": "2020",
                "end_date": "2020-12-31",
                "start_date": "2020-01-01"
            }

## Get Next Financial Year [/closing-balance/next-fn-year/{?date}]
+ Parameters
    + date (string) - last date of the current financial year in the form of an string

### List Next Financial Year[GET]

Fetches next financial year

+ Response 200 (application/json)
    + Body

            {
                "id": "1",
                "start_date": "2020-01-01",
                "end_date": "2020-12-31"
            }

# Group Products


## Product List [/products/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Products [GET]

Fetches all available products with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "4",
                    "name": "Dry cleaning",
                    "product_type_id": "1",
                    "product_type_name": "Inventory",
                    "category_id": "4",
                    "tax_cat_id": "4",
                    "vendor": "6",
                    "cost_price": "200.00",
                    "sale_price": "250.00",
                    "vendor_name": "Christine Tillman",
                    "cat_name": "Chemical solvent",
                    "tax_cat_name": "Home",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/products",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/products/4"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/products"
                        }
                    }
                },
                {
                    "id": "3",
                    "name": "Burger",
                    "product_type_id": "1",
                    "product_type_name": "Inventory",
                    "category_id": "3",
                    "tax_cat_id": "2",
                    "vendor": null,
                    "cost_price": "120.00",
                    "sale_price": "150.00",
                    "vendor_name": null,
                    "cat_name": "Fast food",
                    "tax_cat_name": "Food",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/products",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/products/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/products"
                        }
                    }
                }
            ]

## Product List [/products]

### Create A Product [POST]

    Model (application/json)

    {
        "name": "WP ERP",
        "product_type_id": {
            "id": "2",
            "name": "Service",
            "slug": "service",
            "created_at": null,
            "created_by": null,
            "updated_at": null,
            "updated_by": null
        },
        "category_id": {
            "id": "2",
            "name": "Plugin",
            "parent": "0"
        },
        "tax_cat_id": {
            "id": 1,
            "name": "Software Service",
            "description": "Software development"
        },
        "vendor": {
            "id": 6,
            "name": "Christine Tillman"
        },
        "cost_price": 0,
        "sale_price": "1000"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": "4",
                "name": "Dry cleaning",
                "product_type_id": "1",
                "product_type_name": "Inventory",
                "category_id": "4",
                "tax_cat_id": "4",
                "vendor": "6",
                "cost_price": "200.00",
                "sale_price": "250.00",
                "vendor_name": "Christine Tillman",
                "cat_name": "Chemical solvent",
                "tax_cat_name": "Home",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/products",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/products/4"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/products"
                    }
                }
            }


## Manage Single Product [/products/{id}]

+ Parameters
    + id (string) - id of the product in the form of an string

### Retrieve A Product [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "4",
                "name": "Dry cleaning",
                "product_type_id": "1",
                "product_type_name": "Inventory",
                "category_id": "4",
                "tax_cat_id": "4",
                "vendor": "6",
                "cost_price": "200.00",
                "sale_price": "250.00",
                "vendor_name": "Christine Tillman",
                "cat_name": "Chemical solvent",
                "tax_cat_name": "Home",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/products",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/products/4"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/products"
                    }
                }
            }

### Update A Product [PUT]

    Model (application/json)

    {
        "name": "WP ERP",
        "product_type_id": {
            "id": "2",
            "name": "Service",
            "slug": "service",
            "created_at": null,
            "created_by": null,
            "updated_at": null,
            "updated_by": null
        },
        "category_id": {
            "id": "2",
            "name": "Plugin",
            "parent": "0"
        },
        "tax_cat_id": {
            "id": 1,
            "name": "Software Service",
            "description": "Software development"
        },
        "vendor": {
            "id": 6,
            "name": "Christine Tillman"
        },
        "cost_price": 0,
        "sale_price": "1000"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": "4",
                "name": "Dry cleaning",
                "product_type_id": "1",
                "product_type_name": "Inventory",
                "category_id": "4",
                "tax_cat_id": "4",
                "vendor": "6",
                "cost_price": "200.00",
                "sale_price": "250.00",
                "vendor_name": "Christine Tillman",
                "cat_name": "Chemical solvent",
                "tax_cat_name": "Home",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/products",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/products/4"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/products"
                    }
                }
            }

### Delete A Product [DELETE]

Deletes a product

+ Request (application/json)
+ Response 204 (application/json)

## Bulk Delete Products [/products/{ids}]

+ Parameters
    + ids (string) - ids of the products to be deleted seperated by comma

### Bulk Delete Products [DELETE]

Bulk Deletes selected products

+ Request (application/json)
+ Response 204 (application/json)


## Get Product types [/products/types]

### Retrieves the product types [GET]

Retrieve the available product types

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "name": "Inventory",
                    "slug": "inventory",
                    "created_at": null,
                    "created_by": null,
                    "updated_at": null,
                    "updated_by": null
                },
                {
                    "id": "2",
                    "name": "Service",
                    "slug": "service",
                    "created_at": null,
                    "created_by": null,
                    "updated_at": null,
                    "updated_by": null
                }
            ]


# Group Product Categories


## Product Categories List [/product-cats/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Product Categories [GET]

Fetches all available product-cats with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "name": "Beverage",
                    "parent": "0",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/product-cats",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                        }
                    }
                },
                {
                    "id": "2",
                    "name": "Plugin",
                    "parent": "0",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/product-cats",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                        }
                    }
                },
                {
                    "id": "3",
                    "name": "Fast food",
                    "parent": "0",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/product-cats",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                        }
                    }
                },
                {
                    "id": "4",
                    "name": "Chemical solvent",
                    "parent": "0",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/product-cats",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/4"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                        }
                    }
                }
            ]

## Product Categories List [/product-cats/]

### Create A Product Category [POST]

    Model (application/json)

    {
        "name": "Service",
        "parent": 0
    }

+ Response 201 (application/json)
    + Body

            {
                "id": "2",
                "name": "Plugin",
                "parent": "0",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/product-cats",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/2"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                    }
                }
            }


## Manage Single Product Category [/product-cats/{id}]

+ Parameters
    + id (string) - id of the product_cat in the form of an string

### Retrieve A Product Category [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "2",
                "name": "Plugin",
                "parent": "0",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/product-cats",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/2"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                    }
                }
            }

### Update A Product Category [PUT]

    Model (application/json)

    {
        "name": "Service",
        "parent": 0
    }

+ Response 200 (application/json)
    + Body

            {
                "id": "2",
                "name": "Plugin",
                "parent": "0",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/product-cats",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats/2"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/product-cats"
                    }
                }
            }

### Delete A Product Category [DELETE]

Deletes a Product Category

+ Request (application/json)
+ Response 204 (application/json)


## Bulk Delete Product Categories [/product-cats/{ids}]

+ Parameters
    + ids (string) - ids of the product categories to be deleted seperated by comma

### Bulk Delete Product Categories [DELETE]

Bulk Deletes selected product categories

+ Request (application/json)
+ Response 204 (application/json)

# Group Tax Rates


## Tax Rate List [taxes/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Tax Rates [GET]

Fetches all available tax_rates with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "tax_rate_name": "California",
                    "tax_rate": "",
                    "tax_components": "",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                },
                {
                    "id": 2,
                    "tax_rate_name": "Tucson",
                    "tax_rate": "",
                    "tax_components": "",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                },
                {
                    "id": 3,
                    "tax_rate_name": "Arizona",
                    "tax_rate": "",
                    "tax_components": "",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                }
            ]

### Create A Tax Rate [POST]

    Model (application/json)

    {
        "tax_rate_name": "4",
        "tax_components": [
            {
                "component_name": "Tax 1",
                "agency_id": 3,
                "tax_category_id": 5,
                "tax_rate": "200"
            },
            {
                "component_name": "Tax 2",
                "agency_id": 2,
                "tax_category_id": 1,
                "tax_rate": "10"
            }
        ],
        "is_compound": true
    }

+ Response 201 (application/json)
    + Body

            {
                "tax_components": [
                    {
                        "component_name": "Tax 1",
                        "agency_id": 3,
                        "tax_category_id": 5,
                        "tax_rate": "200"
                    },
                    {
                        "component_name": "Tax 2",
                        "agency_id": 2,
                        "tax_category_id": 1,
                        "tax_rate": "10"
                    }
                ],
                "tax_rate": 210,
                "id": 4,
                "namespace": "erp/v1",
                "tax_rate_name": "4",
                "rest_base": "accounting/v1/taxes",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/4"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                    }
                }
            }


## Manage Single Tax Rate [taxes/{id}]

+ Parameters
    + id (string) - id of the tax_rate in the form of an string

### Retrieve A Tax Rate [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "tax_rate_name": "California",
                "tax_rate": "",
                "tax_components": [
                    {
                        "db_id": "1",
                        "tax_id": "1",
                        "component_name": "Software Tax",
                        "agency_id": "1",
                        "tax_cat_id": "1",
                        "tax_rate": "5.00",
                        "agency": null,
                        "category": null,
                        "agency_name": "Arizona Revenue Department",
                        "tax_cat_name": "Software Service"
                    },
                    {
                        "db_id": "2",
                        "tax_id": "1",
                        "component_name": "Food Tax",
                        "agency_id": "1",
                        "tax_cat_id": "2",
                        "tax_rate": "4.00",
                        "agency": null,
                        "category": null,
                        "agency_name": "Arizona Revenue Department",
                        "tax_cat_name": "Food"
                    },
                    {
                        "db_id": "3",
                        "tax_id": "1",
                        "component_name": "Food Tax",
                        "agency_id": "2",
                        "tax_cat_id": "2",
                        "tax_rate": "4.00",
                        "agency": null,
                        "category": null,
                        "agency_name": "State Board of Equalization",
                        "tax_cat_name": "Food"
                    },
                    {
                        "db_id": "4",
                        "tax_id": "1",
                        "component_name": "Drink Tax",
                        "agency_id": "1",
                        "tax_cat_id": "3",
                        "tax_rate": "8.00",
                        "agency": null,
                        "category": null,
                        "agency_name": "Arizona Revenue Department",
                        "tax_cat_name": "Soft Drinks"
                    },
                    {
                        "db_id": "5",
                        "tax_id": "1",
                        "component_name": "Housing Tax",
                        "agency_id": "1",
                        "tax_cat_id": "4",
                        "tax_rate": "10.00",
                        "agency": null,
                        "category": null,
                        "agency_name": "Arizona Revenue Department",
                        "tax_cat_name": "Home"
                    },
                    {
                        "db_id": "13",
                        "tax_id": "1",
                        "component_name": "vat",
                        "agency_id": "1",
                        "tax_cat_id": "4",
                        "tax_rate": "0.00",
                        "agency": null,
                        "category": null,
                        "agency_name": "Arizona Revenue Department",
                        "tax_cat_name": "Home"
                    }
                ],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/taxes",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                    }
                }
            }


### Update A Tax Rate [PUT]

    Model (application/json)

    {
        "tax_rate_name": "4",
        "tax_components": [
            {
                "component_name": "Tax 1",
                "agency_id": 3,
                "tax_category_id": 5,
                "tax_rate": "200"
            },
            {
                "component_name": "Tax 2",
                "agency_id": 2,
                "tax_category_id": 1,
                "tax_rate": "9"
            }
        ],
        "is_compound": true
    }

+ Response 201 (application/json)
        + Body

                {
                    "tax_components": [
                        {
                            "component_name": "Tax 1",
                            "agency_id": 3,
                            "tax_category_id": 5,
                            "tax_rate": "200"
                        },
                        {
                            "component_name": "Tax 2",
                            "agency_id": 2,
                            "tax_category_id": 1,
                            "tax_rate": "9"
                        }
                    ],
                    "tax_rate": 209,
                    "id": 4,
                    "namespace": "erp/v1",
                    "tax_rate_name": "4",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/4"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                }


### Delete A Tax Rate [DELETE]

Deletes a tax rate

+ Request (application/json)
+ Response 204 (application/json)


## Bulk Delete Tax Rates [/taxes/{ids}]

+ Parameters
    + ids (string) - ids of the tax rates to be deleted seperated by comma


### Bulk Delete Tax Rates [DELETE]

Bulk Deletes selected tax rates

+ Request (application/json)
+ Response 204 (application/json)


# Group Tax Rate Lines


## Manage Single Tax Rate Line Add [taxes/{id}/line-add]

+ Parameters
    + id (string) - id of the tax_rate in the form of an string


### Add A Line in Tax Rate [POST]

    Model (application/json)

    {
        "db_id": "1",
        "tax_id": "1",
        "tax_cat_id": 1,
        "row_id": null,
        "tax_rate": "5.00",
        "component_name": "Software Tax",
        "agency_id": 1
    }

+ Response 201 (application/json)
        + Body


                {
                    "db_id": "1",
                    "component_name": "Software Tax",
                    "agency_id": 1,
                    "tax_rate": "5.00",
                    "namespace": "erp/v1",
                    "tax_cat_id": 1,
                    "tax_id": "1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/0"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                }


## Manage Single Tax Rate Line Edit [taxes/{id}/line-edit]

+ Parameters
    + id (string) - id of the tax_rate in the form of an string


### Update A Line in Tax Rate [PUT]

    Model (application/json)

    {
        "db_id": "1",
        "tax_id": "1",
        "tax_cat_id": 1,
        "row_id": null,
        "tax_rate": "9.00",
        "component_name": "Software Tax",
        "agency_id": 1
    }

+ Response 201 (application/json)
        + Body


                {
                    "db_id": "1",
                    "component_name": "Software Tax",
                    "agency_id": 1,
                    "tax_rate": "9.00",
                    "namespace": "erp/v1",
                    "tax_cat_id": 1,
                    "tax_id": "1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/0"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                }

## Manage Single Tax Rate Line Delete [taxes/{id}/line-delete/{db_id}]

+ Parameters
    + id (string) - id of the tax_rate in the form of an string
    + db_id (string) - id of the tax_rate line in the form of an string


Deletes a tax rate line

+ Request (application/json)
+ Response 204 (application/json)


# Group Tax Records


## Manage All Tax Records [taxes/tax-records]

### Retrieve All Tax Records [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "voucher_no": "15",
                    "agency_id": "Arizona Revenue Department",
                    "trn_date": "2020-03-29",
                    "particulars": "Invoice created with voucher no 15",
                    "amount": "5.00",
                    "trn_by": "1",
                    "ledger_id": "Cash",
                    "voucher_type": "debit",
                    "created_at": "2020-03-29",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                }
            ]


## Manage Single Tax Record [taxes/tax-records/{id}]

+ Parameters
    + id (string) - id of the tax_rate in the form of an string

### Retrieve A SIngle Tax Record [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": "15",
                "agency_id": "Arizona Revenue Department",
                "trn_date": "2020-03-29",
                "particulars": "Invoice created with voucher no 15",
                "amount": "5.00",
                "trn_by": "1",
                "ledger_id": "Cash",
                "voucher_type": "debit",
                "created_at": "2020-03-29",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/taxes",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                    }
                }
            }

## Manage All Tax Records [taxes/tax-records]

### Retrieve All Tax Records [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "voucher_no": "15",
                    "agency_id": "Arizona Revenue Department",
                    "trn_date": "2020-03-29",
                    "particulars": "Invoice created with voucher no 15",
                    "amount": "5.00",
                    "trn_by": "1",
                    "ledger_id": "Cash",
                    "voucher_type": "debit",
                    "created_at": "2020-03-29",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/taxes",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                        }
                    }
                }
            ]


## Pay against Tax Records [taxes/pay-tax]

### Pay against a Tax Record [POST]

    Model

    {
        "agency_id": 1,
        "trn_date": "2020-03-29",
        "trn_by": "1",
        "ledger_id": "7",
        "particulars": "",
        "voucher_type": "debit",
        "amount": 5
    }


+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": {
                    "id": "1",
                    "voucher_no": "15",
                    "particulars": "Invoice created with voucher no 15",
                    "amount": "5.00",
                    "trn_date": "2020-03-29",
                    "voucher_type": "debit",
                    "trn_by": "1",
                    "agency_id": "1",
                    "ledger_id": "7",
                    "created_at": "2020-03-29"
                },
                "agency_id": "Arizona Revenue Department",
                "trn_date": "2020-03-29",
                "particulars": "",
                "amount": 5,
                "trn_by": "1",
                "ledger_id": "Cash",
                "voucher_type": "debit",
                "created_at": null,
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/taxes",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                    }
                }
            }

# Group Tax Agencies


## Tax Agency List [/tax-agencies/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Tax Agencies [GET]

Fetches all available tax agencies with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "name": "Arizona Department of Revenue",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-agencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies"
                        }
                    }
                },
                {
                    "id": 2,
                    "name": "State Board of Equalization",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-agencies",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies"
                        }
                    }
                }
            ]

## Tax Agency List [/tax-agencies]

### Create A Tax Agency [POST]

    Model (application/json)

    {
        "agency_name": "Ney York State Board"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 3,
                "name": "Ney York State Board",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-agencies",
                "_links": {
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies"
                    },
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies/3"
                    }
                }
            }


## Manage Single Tax Agency [/tax-agencies/{id}]

+ Parameters
    + id (string) - id of the tax agency in the form of an string

### Retrieve A Tax Agency [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "name": "Arizona Department of Revenue",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-agencies",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies"
                    }
                }
            }

### Update A Tax Agency [PUT]

    Model (application/json)

    {
        "agency_name": "Arizona Revenue Department"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "name": "Arizona Revenue Department",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-agencies",
                "_links": {
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies"
                    },
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-agencies/1"
                    }
                }
            }

### Delete A Tax Agency [DELETE]

Deletes a tax agency

+ Request (application/json)
+ Response 204 (application/json)

## Bulk Delete Tax Agencies [/tax-agencies/{ids}]

+ Parameters
    + ids (string) - ids of the tax agencies to be deleted seperated by comma

### Bulk Delete Tax Agencies [DELETE]

Bulk Deletes selected tax agencies

+ Request (application/json)
+ Response 204 (application/json)

# Group Tax Categories


## Tax Category List [/tax-cats/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Tax Categories [GET]

Fetches all available tax categorys with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "description": "Drive Safe",
                    "id": 5,
                    "name": "Auto",
                    "_links": {
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                        },
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/5"
                        }
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-cats"
                },
                {
                    "description": "Live long",
                    "id": 4,
                    "name": "Home",
                    "_links": {
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                        },
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/4"
                        }
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-cats"
                },
                {
                    "description": "Beverage",
                    "id": 3,
                    "name": "Soft Drinks",
                    "_links": {
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                        },
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/3"
                        }
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-cats"
                },
                {
                    "description": "Eat healthy",
                    "id": 2,
                    "name": "Food",
                    "_links": {
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                        },
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/2"
                        }
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-cats"
                },
                {
                    "description": "Software development",
                    "id": 1,
                    "name": "Software Service",
                    "_links": {
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                        },
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/1"
                        }
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-cats"
                }
            ]

## Tax Category List [/tax-cats]

### Create A Tax Category [POST]

    Model (application/json)

    {
        "description": "Drive Safe",
        "name": "Auto"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 5,
                "name": "Auto",
                "description": "Drive Safe",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-cats",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/5"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                    }
                }
            }


## Manage Single Tax Category [/tax-cats/{id}]

+ Parameters
    + id (string) - id of the tax category in the form of an string

### Retrieve A Tax Category [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "name": "Software Service",
                "description": "Software development",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-cats",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                    }
                }
            }

### Update A Tax Category [PUT]

    Model (application/json)


    {
        "description": "Drive Safely",
        "name": "Auto"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 5,
                "name": "Auto",
                "description": "Drive Safely",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-cats",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats/5"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-cats"
                    }
                }
            }

### Delete A Tax Category [DELETE]

Deletes a tax category

+ Request (application/json)
+ Response 204 (application/json)

## Bulk Delete Tax Categories [/tax-cats/{ids}]

+ Parameters
    + ids (string) - ids of the tax categories to be deleted seperated by comma

### Bulk Delete Tax Categories [DELETE]

Bulk Deletes selected tax categories

+ Request (application/json)
+ Response 204 (application/json)

# Group Tax Rate Names


## Tax Rate Name List [/tax-rate-names/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Tax Rate Names [GET]

Fetches all available tax rate names with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "3",
                    "tax_rate_name": "Arizona",
                    "tax_number": "100022",
                    "default": "0",
                    "created_at": null,
                    "created_by": null,
                    "updated_at": null,
                    "updated_by": null,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-rate-names",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names"
                        }
                    }
                },
                {
                    "id": "2",
                    "tax_rate_name": "Tucson",
                    "tax_number": "100012",
                    "default": "0",
                    "created_at": null,
                    "created_by": null,
                    "updated_at": null,
                    "updated_by": null,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-rate-names",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names"
                        }
                    }
                },
                {
                    "id": "1",
                    "tax_rate_name": "California",
                    "tax_number": "100011",
                    "default": "1",
                    "created_at": null,
                    "created_by": null,
                    "updated_at": null,
                    "updated_by": null,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/tax-rate-names",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names"
                        }
                    }
                }
            ]

## Tax Rate Name List [/tax-rate-names]

### Create A Tax Rate Name [POST]

    Model (application/json)

    {
        "tax_number": "NY001",
        "default": true,
        "tax_rate_name": "New York"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 4,
                "default": true,
                "tax_rate_name": "New York",
                "_links": {
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names"
                    },
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names/4"
                    }
                },
                "tax_number": "NY001",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-rate-names"
            }


## Manage Single Tax Rate Name [/tax-rate-names/{id}]

+ Parameters
    + id (string) - id of the tax rate name in the form of an string

### Retrieve A Tax Rate Name [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "1",
                "tax_rate_name": "California",
                "tax_number": "100011",
                "default": "0",
                "created_at": null,
                "created_by": null,
                "updated_at": null,
                "updated_by": null,
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-rate-names",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names"
                    }
                }
            }

### Update A Tax Rate Name [PUT]

    Model (application/json)

    {
        "tax_number": "NY001",
        "default": false,
        "tax_rate_name": "New York"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": "4",
                "tax_rate_name": "New York",
                "tax_number": "NY001",
                "default": "0",
                "created_at": "2020-03-27",
                "created_by": "1",
                "updated_at": null,
                "updated_by": "",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/tax-rate-names",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names/4"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/tax-rate-names"
                    }
                }
            }

### Delete A Tax Rate Name [DELETE]

Deletes a tax rate name

+ Request (application/json)
+ Response 204 (application/json)

## Bulk Delete Tax Rate Names [/tax-rate-names/{ids}]

+ Parameters
    + ids (string) - ids of the tax rate names to be deleted seperated by comma

### Bulk Delete Tax Rate Names [DELETE]

Bulk Deletes selected tax rate names

+ Request (application/json)
+ Response 204 (application/json)


# Group Invoices


## Invoice List [/invoices/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Invoices [GET]

Fetches all available invoices with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "customer_id": 42,
                    "date": "2019-11-19",
                    "due_date": "2019-11-19",
                    "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                    "discount_type": "discount-value",
                    "tax_rate_id": 2,
                    "status": 2,
                    "estimate": 0,
                    "attachments": "a:0:{}",
                    "particulars": "A sample description",
                    "request": {},
                    "discount": 2,
                    "tax": 27.240000000000002,
                    "amount": 200,
                    "id": {
                        "editable": "1",
                        "currency": "148",
                        "id": "1",
                        "voucher_no": "2",
                        "customer_id": "42",
                        "customer_name": "Custo Mer",
                        "trn_date": "2019-11-19",
                        "due_date": "2019-11-19",
                        "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                        "amount": "200.00",
                        "discount": "2.00",
                        "discount_type": "discount-value",
                        "tax": "27.24",
                        "estimate": "0",
                        "attachments": [],
                        "status": "2",
                        "particulars": "A sample description",
                        "created_at": "2019-11-19",
                        "debit": "225.24",
                        "credit": "0.00",
                        "line_items": [
                            {
                                "product_id": "3",
                                "qty": "1",
                                "unit_price": "150.00",
                                "discount": "1.50",
                                "tax": "17.82",
                                "item_total": "150.00",
                                "ecommerce_type": null,
                                "tax_rate": "12.00",
                                "name": "Burger",
                                "product_type_id": "1",
                                "category_id": "3",
                                "vendor": null,
                                "cost_price": "120.00",
                                "sale_price": "150.00",
                                "tax_cat_id": "2",
                                "line_total": 166.32
                            },
                            {
                                "product_id": "1",
                                "qty": "1",
                                "unit_price": "50.00",
                                "discount": "0.50",
                                "tax": "9.42",
                                "item_total": "50.00",
                                "ecommerce_type": null,
                                "tax_rate": "19.00",
                                "name": "7up",
                                "product_type_id": "1",
                                "category_id": "1",
                                "vendor": null,
                                "cost_price": "40.00",
                                "sale_price": "50.00",
                                "tax_cat_id": "3",
                                "line_total": 58.92
                            }
                        ],
                        "tax_rate_id": "1",
                        "total_due": "225.24",
                        "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_2.pdf",
                        "email": "cust@om.er"
                    },
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/invoices",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices"
                        }
                    }
                }
            ]

## Invoice List [/invoices]

### Create An Invoice [POST]

    Model (application/json)

    {
        "customer_id":42,
        "date":"2019-11-19",
        "due_date":"2019-11-19",
        "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
        "discount_type":"discount-value",
        "tax_rate_id":2,
        "line_items":[
            {
                "product_id":"3",
                "product_type_name":"Inventory",
                "tax_cat_id":"2",
                "qty":1,
                "unit_price":150,
                "tax":"17.82",
                "tax_rate":12,
                "discount":1.5,
                "item_total":150
            },
            {
                "product_id":"1",
                "product_type_name":"Inventory",
                "tax_cat_id":"3",
                "qty":1,
                "unit_price":50,
                "tax":"9.42",
                "tax_rate":19,
                "discount":0.5,
                "item_total":50
            }
        ],
        "attachments":[

        ],
        "particulars":"A sample description",
        "type":"invoice",
        "status":2,
        "estimate":0
    }

+ Response 201 (application/json)
    + Body

            {
                "customer_id": 42,
                "date": "2019-11-19",
                "due_date": "2019-11-19",
                "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                "discount_type": "discount-value",
                "tax_rate_id": 2,
                "status": 2,
                "estimate": 0,
                "attachments": "a:0:{}",
                "particulars": "A sample description",
                "request": {},
                "discount": 2,
                "tax": 27.240000000000002,
                "amount": 200,
                "id": {
                    "editable": "1",
                    "currency": "148",
                    "id": "1",
                    "voucher_no": "2",
                    "customer_id": "42",
                    "customer_name": "Custo Mer",
                    "trn_date": "2019-11-19",
                    "due_date": "2019-11-19",
                    "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                    "amount": "200.00",
                    "discount": "2.00",
                    "discount_type": "discount-value",
                    "tax": "27.24",
                    "estimate": "0",
                    "attachments": [],
                    "status": "2",
                    "particulars": "A sample description",
                    "created_at": "2019-11-19",
                    "debit": "225.24",
                    "credit": "0.00",
                    "line_items": [
                        {
                            "product_id": "3",
                            "qty": "1",
                            "unit_price": "150.00",
                            "discount": "1.50",
                            "tax": "17.82",
                            "item_total": "150.00",
                            "ecommerce_type": null,
                            "tax_rate": "12.00",
                            "name": "Burger",
                            "product_type_id": "1",
                            "category_id": "3",
                            "vendor": null,
                            "cost_price": "120.00",
                            "sale_price": "150.00",
                            "tax_cat_id": "2",
                            "line_total": 166.32
                        },
                        {
                            "product_id": "1",
                            "qty": "1",
                            "unit_price": "50.00",
                            "discount": "0.50",
                            "tax": "9.42",
                            "item_total": "50.00",
                            "ecommerce_type": null,
                            "tax_rate": "19.00",
                            "name": "7up",
                            "product_type_id": "1",
                            "category_id": "1",
                            "vendor": null,
                            "cost_price": "40.00",
                            "sale_price": "50.00",
                            "tax_cat_id": "3",
                            "line_total": 58.92
                        }
                    ],
                    "tax_rate_id": "1",
                    "total_due": "225.24",
                    "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_2.pdf",
                    "email": "cust@om.er"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/invoices",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices"
                    }
                }
            }


## Manage Single Invoice [/invoices/{id}]

+ Parameters
    + id (string) - id of the invoice in the form of an string

### Retrieve An Invoice [GET]

+ Response 200 (application/json)
    + Body

            {
                "customer_id": 42,
                "date": "2019-11-19",
                "due_date": "2019-11-19",
                "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                "discount_type": "discount-value",
                "tax_rate_id": 2,
                "status": 2,
                "estimate": 0,
                "attachments": "a:0:{}",
                "particulars": "A sample description",
                "request": {},
                "discount": 2,
                "tax": 27.240000000000002,
                "amount": 200,
                "id": {
                    "editable": "1",
                    "currency": "148",
                    "id": "1",
                    "voucher_no": "2",
                    "customer_id": "42",
                    "customer_name": "Custo Mer",
                    "trn_date": "2019-11-19",
                    "due_date": "2019-11-19",
                    "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                    "amount": "200.00",
                    "discount": "2.00",
                    "discount_type": "discount-value",
                    "tax": "27.24",
                    "estimate": "0",
                    "attachments": [],
                    "status": "2",
                    "particulars": "A sample description",
                    "created_at": "2019-11-19",
                    "debit": "225.24",
                    "credit": "0.00",
                    "line_items": [
                        {
                            "product_id": "3",
                            "qty": "1",
                            "unit_price": "150.00",
                            "discount": "1.50",
                            "tax": "17.82",
                            "item_total": "150.00",
                            "ecommerce_type": null,
                            "tax_rate": "12.00",
                            "name": "Burger",
                            "product_type_id": "1",
                            "category_id": "3",
                            "vendor": null,
                            "cost_price": "120.00",
                            "sale_price": "150.00",
                            "tax_cat_id": "2",
                            "line_total": 166.32
                        },
                        {
                            "product_id": "1",
                            "qty": "1",
                            "unit_price": "50.00",
                            "discount": "0.50",
                            "tax": "9.42",
                            "item_total": "50.00",
                            "ecommerce_type": null,
                            "tax_rate": "19.00",
                            "name": "7up",
                            "product_type_id": "1",
                            "category_id": "1",
                            "vendor": null,
                            "cost_price": "40.00",
                            "sale_price": "50.00",
                            "tax_cat_id": "3",
                            "line_total": 58.92
                        }
                    ],
                    "tax_rate_id": "1",
                    "total_due": "225.24",
                    "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_2.pdf",
                    "email": "cust@om.er"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/invoices",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices"
                    }
                }
            }

### Update An Invoice [PUT]

    Model (application/json)

    {
        "customer_id":42,
        "date":"2019-11-19",
        "due_date":"2019-11-19",
        "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
        "discount_type":"discount-value",
        "tax_rate_id":2,
        "line_items":[
            {
                "product_id":"3",
                "product_type_name":"Inventory",
                "tax_cat_id":"2",
                "qty":1,
                "unit_price":150,
                "tax":"17.82",
                "tax_rate":12,
                "discount":1.5,
                "item_total":150
            },
            {
                "product_id":"1",
                "product_type_name":"Inventory",
                "tax_cat_id":"3",
                "qty":1,
                "unit_price":50,
                "tax":"9.42",
                "tax_rate":19,
                "discount":0.5,
                "item_total":50
            }
        ],
        "attachments":[

        ],
        "particulars":"A sample description",
        "type":"invoice",
        "status":2,
        "estimate":0
    }

+ Response 201 (application/json)
    + Body

            {
                "customer_id": 42,
                "date": "2019-11-19",
                "due_date": "2019-11-19",
                "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                "discount_type": "discount-value",
                "tax_rate_id": 2,
                "status": 2,
                "estimate": 0,
                "attachments": "a:0:{}",
                "particulars": "A sample description",
                "request": {},
                "discount": 2,
                "tax": 27.240000000000002,
                "amount": 200,
                "id": {
                    "editable": "1",
                    "currency": "148",
                    "id": "1",
                    "voucher_no": "2",
                    "customer_id": "42",
                    "customer_name": "Custo Mer",
                    "trn_date": "2019-11-19",
                    "due_date": "2019-11-19",
                    "billing_address":"Street: Abc Street, City:  Ab City, State: New York, Country: US",
                    "amount": "200.00",
                    "discount": "2.00",
                    "discount_type": "discount-value",
                    "tax": "27.24",
                    "estimate": "0",
                    "attachments": [],
                    "status": "2",
                    "particulars": "A sample description",
                    "created_at": "2019-11-19",
                    "debit": "225.24",
                    "credit": "0.00",
                    "line_items": [
                        {
                            "product_id": "3",
                            "qty": "1",
                            "unit_price": "150.00",
                            "discount": "1.50",
                            "tax": "17.82",
                            "item_total": "150.00",
                            "ecommerce_type": null,
                            "tax_rate": "12.00",
                            "name": "Burger",
                            "product_type_id": "1",
                            "category_id": "3",
                            "vendor": null,
                            "cost_price": "120.00",
                            "sale_price": "150.00",
                            "tax_cat_id": "2",
                            "line_total": 166.32
                        },
                        {
                            "product_id": "1",
                            "qty": "1",
                            "unit_price": "50.00",
                            "discount": "0.50",
                            "tax": "9.42",
                            "item_total": "50.00",
                            "ecommerce_type": null,
                            "tax_rate": "19.00",
                            "name": "7up",
                            "product_type_id": "1",
                            "category_id": "1",
                            "vendor": null,
                            "cost_price": "40.00",
                            "sale_price": "50.00",
                            "tax_cat_id": "3",
                            "line_total": 58.92
                        }
                    ],
                    "tax_rate_id": "1",
                    "total_due": "225.24",
                    "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_2.pdf",
                    "email": "cust@om.er"
                },
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/invoices",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices"
                    }
                }
            }


## Void Invoice [/invoices/{id}/void/]

+ Parameters
    + id (string) - id of the invoice in the form of an string

### Void an Invoices [POST]

Voids a particular invoice

+ Request (application/json)
+ Response 204 (application/json)


## Due Invoices of a customer [/invoices/due/{id}]

+ Parameters
    + id (string) - id of the customer in the form of an string

### List All Due Invoices [GET]

Fetches all due invoices of a customer

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "voucher_no": "2",
                    "due_date": "2019-11-19",
                    "amount": "225.24",
                    "due": "225.24",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/invoices",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices"
                        }
                    }
                }
            ]


## Upload Attachments [/invoices/attachments/]

### Upload an Attachment [POST]

Uploads an attachment for any transaction

+ Request (application/json)

+ Response 200 (application/json)
    + Body

            [
                {
                    "file": "/Applications/XAMPP/xamppfiles/htdocs/wperp/wp-content/uploads/2020/03/1788291182.pdf",
                    "url": "https://example.com/wp-content/uploads/2020/03/1788291182.pdf",
                    "type": "application/pdf"
                }
            ]


## Get Receivables overview [/invoices/overview-receivable]

### List Receivables overview [GET]

Get Dashboard Receivables overview section

+ Response 200 (application/json)
    + Body

            {
                "data":[],
                "amount":{
                    "first":100,
                    "second":200,
                    "third":300
                }
            }

# Group Payments


## Payments List [/payments/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Payments [GET]

Fetches all available payments with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "voucher_no": 3,
                    "customer_id": 42,
                    "customer_name": "Custo Mer",
                    "trn_date": "2019-11-19",
                    "amount": "225.24",
                    "ref": null,
                    "account": "Cash",
                    "line_items": [
                        {
                            "id": "1",
                            "voucher_no": "3",
                            "invoice_no": "2",
                            "amount": "225.24"
                        }
                    ],
                    "attachments": [],
                    "status": "Paid",
                    "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_3.pdf",
                    "type": "payment",
                    "particulars": "particulars",
                    "created_at": "2019-11-19",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/payments",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments"
                        }
                    }
                }
            ]


### Create A Payment [POST]

    Model (application/json)

    {
        "customer_id": 25,
        "ref": "ref",
        "trn_date": "2020-03-20",
        "line_items": [
            {
                "id": "1",
                "invoice_no": "2",
                "due_date": "2020-03-20",
                "amount": 59.5,
                "due": 59.5,
                "line_total": 59.5
            }
        ],
        "attachments": [],
        "type": "payment",
        "status": 4,
        "particulars": "payment received",
        "deposit_to": "7",
        "trn_by": "1",
        "check_no": null,
        "name": "",
        "bank": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 3,
                "customer_id": 25,
                "customer_name": "Zetta Kreiger",
                "trn_date": "2020-03-20",
                "amount": "59.50",
                "ref": null,
                "account": "Cash",
                "line_items": [
                    {
                        "id": "1",
                        "voucher_no": "3",
                        "invoice_no": "2",
                        "amount": "59.50"
                    }
                ],
                "attachments": [],
                "status": "Paid",
                "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_3.pdf",
                "type": "payment",
                "particulars": "payment received",
                "created_at": "2020-03-20",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/payments",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments"
                    }
                }
            }

## Manage Single Payment [/payments/{id}]

+ Parameters
    + id (string) - id of the payment in the form of an string

### Retrieve A Payment [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 3,
                "customer_id": 25,
                "customer_name": "Zetta Kreiger",
                "trn_date": "2020-03-20",
                "amount": "59.50",
                "ref": null,
                "account": "Cash",
                "line_items": [
                    {
                        "id": "1",
                        "voucher_no": "3",
                        "invoice_no": "2",
                        "amount": "59.50"
                    }
                ],
                "attachments": [],
                "status": "Paid",
                "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_3.pdf",
                "type": "payment",
                "particulars": "payment received",
                "created_at": "2020-03-20",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/payments",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments"
                    }
                }
            }


### Update A Payment [PUT]

    Model (application/json)

    {
        "customer_id": 25,
        "ref": "ref",
        "trn_date": "2020-03-20",
        "line_items": [
            {
                "id": "1",
                "invoice_no": "2",
                "due_date": "2020-03-20",
                "amount": 59.5,
                "due": 59.5,
                "line_total": 59.5
            }
        ],
        "attachments": [],
        "type": "payment",
        "status": 4,
        "particulars": "payment received",
        "deposit_to": "7",
        "trn_by": "1",
        "check_no": null,
        "name": "",
        "bank": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 3,
                "customer_id": 25,
                "customer_name": "Zetta Kreiger",
                "trn_date": "2020-03-20",
                "amount": "59.50",
                "ref": null,
                "account": "Cash",
                "line_items": [
                    {
                        "id": "1",
                        "voucher_no": "3",
                        "invoice_no": "2",
                        "amount": "59.50"
                    }
                ],
                "attachments": [],
                "status": "Paid",
                "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_3.pdf",
                "type": "payment",
                "particulars": "payment received",
                "created_at": "2020-03-20",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/payments",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/payments"
                    }
                }
            }


## Void Payment [/payments/{id}/void/]

+ Parameters
    + id (string) - id of the Payment in the form of an string

### Void a Payment [POST]

Voids a particular Payment

+ Request (application/json)
+ Response 204 (application/json)

# Group Expenses


## Manage Expense Collection [/expenses/{?per_page,page,search}]

+ Parameters

    + per_page (number, optional) - The maximum number of results to return.
        + Default: `20`
    + page (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Expenses [GET]

Fetches all available expenses with pagination


+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 1,
                    "voucher_no": 12,
                    "people_id": 24,
                    "people_name": "Bryce Keebler",
                    "date": "2020-03-25",
                    "address": "Emilia Parkways, 5470 Ezekiel Heights Emmanuelberg New York, 36358 Burundi",
                    "bill_details": [
                        {
                            "id": "1",
                            "ledger_id": "24",
                            "ledger_name": "Costs of Goods Sold",
                            "trn_no": "12",
                            "particulars": "cost of sold goods",
                            "amount": "250.00"
                        },
                        {
                            "id": "2",
                            "ledger_id": "31",
                            "ledger_name": "General Expenses",
                            "trn_no": "12",
                            "particulars": "general expenses",
                            "amount": "220.00"
                        }
                    ],
                    "total": 470,
                    "ref": "Expense",
                    "check_no": null,
                    "particulars": "office expenses",
                    "status": "4",
                    "attachments": [],
                    "trn_by": "1",
                    "created_at": "2020-03-25",
                    "deposit_to": "7",
                    "check_data": [],
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/expenses",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses"
                        }
                    }
                }
            ]

## Expense List [/expenses]

### Create An Expense [POST]

    Model (application/json)

    {
        "people_id": 24,
        "ref": "Expense",
        "trn_date": "2020-03-25",
        "trn_by": "1",
        "bill_details": [
            {
                "ledger_id": "24",
                "particulars": "cost of sold goods",
                "amount": "250"
            },
            {
                "ledger_id": "31",
                "particulars": "general expenses",
                "amount": "220"
            }
        ],
        "deposit_to": "7",
        "billing_address": "Emilia Parkways, 5470 Ezekiel Heights Emmanuelberg New York, 36358 Burundi",
        "attachments": [],
        "type": "expense",
        "status": 4,
        "particulars": "office expenses",
        "check_no": null,
        "name": "",
        "bank": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 12,
                "people_id": 24,
                "people_name": "Bryce Keebler",
                "date": "2020-03-25",
                "address": "Emilia Parkways, 5470 Ezekiel Heights Emmanuelberg New York, 36358 Burundi",
                "bill_details": [
                    {
                        "id": "1",
                        "ledger_id": "24",
                        "ledger_name": "Costs of Goods Sold",
                        "trn_no": "12",
                        "particulars": "cost of sold goods",
                        "amount": "250.00"
                    },
                    {
                        "id": "2",
                        "ledger_id": "31",
                        "ledger_name": "General Expenses",
                        "trn_no": "12",
                        "particulars": "general expenses",
                        "amount": "220.00"
                    }
                ],
                "total": 470,
                "ref": "Expense",
                "check_no": null,
                "particulars": "office expenses",
                "status": "4",
                "attachments": [],
                "trn_by": "1",
                "created_at": "2020-03-25",
                "deposit_to": "7",
                "check_data": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/expenses",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses"
                    }
                }
            }


## Manage Single Expense [/expenses/{id}]

+ Parameters
    + id (string) - id of the expense in the form of an string

### Retrieve An Expense [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 12,
                "people_id": 24,
                "people_name": "Bryce Keebler",
                "date": "2020-03-25",
                "address": "Emilia Parkways, 5470 Ezekiel Heights Emmanuelberg New York, 36358 Burundi",
                "bill_details": [
                    {
                        "id": "1",
                        "ledger_id": "24",
                        "ledger_name": "Costs of Goods Sold",
                        "trn_no": "12",
                        "particulars": "cost of sold goods",
                        "amount": "250.00"
                    },
                    {
                        "id": "2",
                        "ledger_id": "31",
                        "ledger_name": "General Expenses",
                        "trn_no": "12",
                        "particulars": "general expenses",
                        "amount": "220.00"
                    }
                ],
                "total": 470,
                "ref": "Expense",
                "check_no": null,
                "particulars": "office expenses",
                "status": "4",
                "attachments": [],
                "trn_by": "1",
                "created_at": "2020-03-25",
                "deposit_to": "7",
                "check_data": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/expenses",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses"
                    }
                }
            }

### Update An Expense [PUT]

    Model (application/json)

    {
        "people_id": 24,
        "ref": "Expense",
        "trn_date": "2020-03-25",
        "trn_by": "1",
        "bill_details": [
            {
                "ledger_id": "24",
                "particulars": "cost of sold goods",
                "amount": "250"
            },
            {
                "ledger_id": "31",
                "particulars": "general expenses",
                "amount": "220"
            }
        ],
        "deposit_to": "7",
        "billing_address": "Emilia Parkways, 5470 Ezekiel Heights Emmanuelberg New York, 36358 Burundi",
        "attachments": [],
        "type": "expense",
        "status": 4,
        "particulars": "office expenses",
        "check_no": null,
        "name": "",
        "bank": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 12,
                "people_id": 24,
                "people_name": "Bryce Keebler",
                "date": "2020-03-25",
                "address": "Emilia Parkways, 5470 Ezekiel Heights Emmanuelberg New York, 36358 Burundi",
                "bill_details": [
                    {
                        "id": "1",
                        "ledger_id": "24",
                        "ledger_name": "Costs of Goods Sold",
                        "trn_no": "12",
                        "particulars": "cost of sold goods",
                        "amount": "250.00"
                    },
                    {
                        "id": "2",
                        "ledger_id": "31",
                        "ledger_name": "General Expenses",
                        "trn_no": "12",
                        "particulars": "general expenses",
                        "amount": "220.00"
                    }
                ],
                "total": 470,
                "ref": "Expense",
                "check_no": null,
                "particulars": "office expenses",
                "status": "4",
                "attachments": [],
                "trn_by": "1",
                "created_at": "2020-03-25",
                "deposit_to": "7",
                "check_data": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/expenses",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses"
                    }
                }
            }


## Void Expense [/expenses/{id}/void/]

+ Parameters
    + id (string) - id of the expense in the form of an string

### Void an Expenses [POST]

Voids a particular expense

+ Request (application/json)
+ Response 204 (application/json)


## Manage Single Check [/expenses/checks/{id}]

+ Parameters
    + id (string) - id of the expense in the form of an string

### Retrieve A Check [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 13,
                "voucher_no": 13,
                "people_id": 22,
                "people_name": "Shemar Emmerich",
                "date": "2020-03-25",
                "address": "Dagmar Stravenue, 69480 Watson Key North Damion Colorado, 34246-1511 Macedonia",
                "bill_details": [
                    {
                        "id": "2",
                        "voucher_no": "13",
                        "status": "4",
                        "trn_by": "3",
                        "trn_date": "2020-03-25",
                        "ledger_id": "30",
                        "particulars": "postage payment",
                        "amount": "100.00",
                        "ledger_name": "Postage & Delivary"
                    }
                ],
                "total": 100,
                "ref": "",
                "check_no": "CHK0232233",
                "particulars": "check payment",
                "status": "4",
                "attachments": [],
                "trn_by": "3",
                "created_at": "2020-03-25",
                "deposit_to": "105",
                "check_data": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/expenses",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses/13"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/expenses"
                    }
                }
            }

# Group Bills


## Bill List [/bills/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Bills [GET]

Fetches all available bills with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "bill_no": 503,
                    "vendor_id": 1,
                    "vendor_name": Apple,
                    "ledger_id": "104 (Tea)",
                    "particulars": "due",
                    "bill_details": [
                        {
                            "id": 1,
                            "ledger_id": 503,
                            "bill_no": 503,
                            "trn_no": 504,
                            "particulars": "nothing",
                            "amount": 80,
                            "tax": 20,
                            "line_total": 100
                        },
                        {
                            "id": 2,
                            "ledger_id": 504,
                            "bill_no": 503,
                            "trn_no": 504,
                            "particulars": "nothing",
                            "amount": 90,
                            "tax": 30,
                            "line_total": 120
                        },
                    ],
                    "date": "2016-11-22",
                    "due_date": "2016-11-22",
                    "subtotal": 200,
                    "total": 200,
                    "reference_no": "Bill-001",
                    "created_by": {
                        "id": 1,
                        "user_nicename": "john",
                        "user_email": "mail@gmail.com",
                        "user_url": "",
                        "display_name": "John Wick",
                        "avatar": "http://2.gravatar.com/avatar/50b8fc98057e12e1f1f8982a981297e7?s=96&d=mm&r=g",
                        "_links": {
                            "self": [
                                {
                                    "href": "https://demo.wp-api.org/wp-json/wp/v2/users/1"
                                }
                            ],
                            "collection": [
                                {
                                    "href": "https://demo.wp-api.org/wp-json/wp/v2/users"
                                }
                            ]
                        }
                    },
                    "_links": {
                        "self": [
                            {
                                "href": "http://example.com/wp-json/erp/v1/accounting/bills/1"
                            }
                        ],
                        "collection": [
                            {
                                "href": "http://example.com/wp-json/erp/v1/accounting/bills"
                            }
                        ]
                    }
                }
            ]

## Bill List [/bills]

### Create A Bill [POST]

    Model (application/json)

    {
        "vendor_id": 25,
        "ref": "Bill Ref",
        "trn_date": "2020-03-24",
        "due_date": "2020-03-24",
        "bill_details": [
            {
                "ledger_id": "24",
                "amount": "200"
            },
            {
                "ledger_id": "31",
                "amount": "300"
            }
        ],
        "attachments": [],
        "billing_address": "Hilpert Keys, 65668 Gutkowski Center Lake Naomie Idaho, 07711-2842 Cape Verde",
        "type": "bill",
        "status": 2,
        "particulars": "Bill Particulars"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "editable": 1,
                "voucher_no": 9,
                "vendor_id": 25,
                "vendor_name": "Zetta Kreiger",
                "trn_date": "2020-03-24",
                "due_date": "2020-03-24",
                "billing_address": "Hilpert Keys, 65668 Gutkowski Center Lake Naomie Idaho, 07711-2842 Cape Verde",
                "bill_details": [
                    {
                        "id": "1",
                        "trn_no": "9",
                        "ledger_id": "24",
                        "particulars": "",
                        "amount": "200.00",
                        "ledger_name": "Costs of Goods Sold"
                    },
                    {
                        "id": "2",
                        "trn_no": "9",
                        "ledger_id": "31",
                        "particulars": "",
                        "amount": "300.00",
                        "ledger_name": "General Expenses"
                    }
                ],
                "amount": 500,
                "due": "500.00",
                "ref": "Bill Ref",
                "particulars": "Bill Particulars",
                "status": "2",
                "created_at": "2020-03-24",
                "attachments": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/bills",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills"
                    }
                }
            }


## Manage Single Bill [/bills/{id}]

+ Parameters
    + id (string) - id of the bill in the form of an string

### Retrieve A Bill [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "editable": 1,
                "voucher_no": 9,
                "vendor_id": 25,
                "vendor_name": "Zetta Kreiger",
                "trn_date": "2020-03-24",
                "due_date": "2020-03-24",
                "billing_address": "Hilpert Keys, 65668 Gutkowski Center Lake Naomie Idaho, 07711-2842 Cape Verde",
                "bill_details": [
                    {
                        "id": "1",
                        "trn_no": "9",
                        "ledger_id": "24",
                        "particulars": "",
                        "amount": "200.00",
                        "ledger_name": "Costs of Goods Sold"
                    },
                    {
                        "id": "2",
                        "trn_no": "9",
                        "ledger_id": "31",
                        "particulars": "",
                        "amount": "300.00",
                        "ledger_name": "General Expenses"
                    }
                ],
                "amount": 500,
                "due": "500.00",
                "ref": "Bill Ref",
                "particulars": "Bill Particulars",
                "status": "2",
                "created_at": "2020-03-24",
                "attachments": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/bills",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills"
                    }
                }
            }

### Update A Bill [PUT]

    Model (application/json)

    {
        "vendor_id": 25,
        "ref": "Bill Ref",
        "trn_date": "2020-03-24",
        "due_date": "2020-03-24",
        "bill_details": [
            {
                "ledger_id": "24",
                "amount": "200"
            },
            {
                "ledger_id": "31",
                "amount": "300"
            }
        ],
        "attachments": [],
        "billing_address": "Hilpert Keys, 65668 Gutkowski Center Lake Naomie Idaho, 07711-2842 Cape Verde",
        "type": "bill",
        "status": 2,
        "particulars": "Bill Particulars"
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "editable": 1,
                "voucher_no": 9,
                "vendor_id": 25,
                "vendor_name": "Zetta Kreiger",
                "trn_date": "2020-03-24",
                "due_date": "2020-03-24",
                "billing_address": "Hilpert Keys, 65668 Gutkowski Center Lake Naomie Idaho, 07711-2842 Cape Verde",
                "bill_details": [
                    {
                        "id": "1",
                        "trn_no": "9",
                        "ledger_id": "24",
                        "particulars": "",
                        "amount": "200.00",
                        "ledger_name": "Costs of Goods Sold"
                    },
                    {
                        "id": "2",
                        "trn_no": "9",
                        "ledger_id": "31",
                        "particulars": "",
                        "amount": "300.00",
                        "ledger_name": "General Expenses"
                    }
                ],
                "amount": 500,
                "due": "500.00",
                "ref": "Bill Ref",
                "particulars": "Bill Particulars",
                "status": "2",
                "created_at": "2020-03-24",
                "attachments": [],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/bills",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills"
                    }
                }
            }

## Void Bills [/bills/{id}/void/]

+ Parameters
    + id (string) - id of the bill in the form of an string

### Void a Bill [POST]

Voids a particular bill

+ Request (application/json)
+ Response 204 (application/json)


## Due Bills of a vendor [/bills/due/{id}]

+ Parameters
    + id (string) - id of the vendor in the form of an string

### List All Due Bills [GET]

Fetches all due bills of a vendor

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "editable": 1,
                    "voucher_no": 9,
                    "vendor_id": 25,
                    "vendor_name": "Zetta Kreiger",
                    "trn_date": "2020-03-24",
                    "due_date": "2020-03-24",
                    "billing_address": {
                        "street_1": "Hilpert Keys",
                        "street_2": "65668 Gutkowski Center",
                        "city": "Lake Naomie",
                        "state": "Idaho",
                        "postal_code": "07711-2842",
                        "country": "Cape Verde"
                    },
                    "bill_details": [],
                    "amount": 500,
                    "due": "500.00",
                    "ref": "Bill Ref",
                    "particulars": "Bill Particulars",
                    "status": "2",
                    "created_at": "2020-03-24",
                    "attachments": [],
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/bills",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/bills"
                        }
                    }
                }
            ]

## Get Payables overview [/bills/overview-payable]

### List Payables overview [GET]

Get Dashboard Payables overview section

+ Response 200 (application/json)
    + Body

            {
                "data": {
                    "first": [
                        {
                            "voucher_no": "9",
                            "due": "-500.00",
                            "due_date": "2020-03-24"
                        },
                        {
                            "voucher_no": "8",
                            "due": "-500.00",
                            "due_date": "2020-03-24"
                        }
                    ]
                },
                "amount": {
                    "first": 1000,
                    "second": 0,
                    "third": 0
                }
            }

# Group Pay Bills

## Pay Bill List [/pay_bills/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.


### List All Pay Bills [GET]

Fetches all available pay bills with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "voucher_no": 10,
                    "vendor_id": 25,
                    "trn_date": "2020-03-24",
                    "amount": "500.00",
                    "billing_address": {
                        "street_1": "Hilpert Keys",
                        "street_2": "65668 Gutkowski Center",
                        "city": "Lake Naomie",
                        "state": "Idaho",
                        "postal_code": "07711-2842",
                        "country": "Cape Verde"
                    },
                    "bill_details": [
                        {
                            "id": "1",
                            "voucher_no": "10",
                            "bill_no": "9",
                            "amount": "500.00"
                        }
                    ],
                    "type": "pay_bill",
                    "status": "4",
                    "particulars": "Paying Bill",
                    "trn_by": "Cash",
                    "created_at": "2020-03-24",
                    "attachments": [
                        null
                    ],
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/pay-bills",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills"
                        }
                    }
                }
            ]


## Pay Bill List [/pay-bills]

### Create A Pay Bill [POST]

    Model (application/json)

    {
        "vendor_id": 25,
        "ref": "Pay bill-zetta",
        "trn_date": "2020-03-24",
        "bill_details": [
            {
                "id": 1,
                "voucher_no": 9,
                "due_date": "2020-03-24",
                "amount": 500,
                "due": 500
            }
        ],
        "attachments": [
            null
        ],
        "type": "pay_bill",
        "status": 4,
        "particulars": "Paying Bill",
        "deposit_to": "7",
        "trn_by": "1",
        "check_no": null,
        "name": "",
        "bank": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 10,
                "vendor_id": 25,
                "trn_date": "2020-03-24",
                "amount": "500.00",
                "billing_address": {
                    "street_1": "Hilpert Keys",
                    "street_2": "65668 Gutkowski Center",
                    "city": "Lake Naomie",
                    "state": "Idaho",
                    "postal_code": "07711-2842",
                    "country": "Cape Verde"
                },
                "bill_details": [
                    {
                        "id": "1",
                        "voucher_no": "10",
                        "bill_no": "9",
                        "amount": "500.00"
                    }
                ],
                "type": "pay_bill",
                "status": "4",
                "particulars": "Paying Bill",
                "trn_by": "Cash",
                "created_at": "2020-03-24",
                "attachments": [
                    null
                ],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/pay-bills",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills"
                    }
                }
            }

## Manage Single Pay Bill [/pay-bill/{id}]

+ Parameters
    + id (string) - id of the pay-bill in the form of an string

### Retrieve An Pay Bill [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 10,
                "vendor_id": 25,
                "trn_date": "2020-03-24",
                "amount": "500.00",
                "billing_address": {
                    "street_1": "Hilpert Keys",
                    "street_2": "65668 Gutkowski Center",
                    "city": "Lake Naomie",
                    "state": "Idaho",
                    "postal_code": "07711-2842",
                    "country": "Cape Verde"
                },
                "bill_details": [
                    {
                        "id": "1",
                        "voucher_no": "10",
                        "bill_no": "9",
                        "amount": "500.00"
                    }
                ],
                "type": "pay_bill",
                "status": "4",
                "particulars": "Paying Bill",
                "trn_by": "Cash",
                "created_at": "2020-03-24",
                "attachments": [
                    null
                ],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/pay-bills",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills"
                    }
                }
            }

### Update An Pay Bill [PUT]

    Model (application/json)

    {
        "vendor_id": 25,
        "ref": "Pay bill-zetta",
        "trn_date": "2020-03-24",
        "bill_details": [
            {
                "id": 1,
                "voucher_no": 9,
                "due_date": "2020-03-24",
                "amount": 500,
                "due": 500
            }
        ],
        "attachments": [
            null
        ],
        "type": "pay_bill",
        "status": 4,
        "particulars": "Paying Bill",
        "deposit_to": "7",
        "trn_by": "1",
        "check_no": null,
        "name": "",
        "bank": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": 10,
                "vendor_id": 25,
                "trn_date": "2020-03-24",
                "amount": "500.00",
                "billing_address": {
                    "street_1": "Hilpert Keys",
                    "street_2": "65668 Gutkowski Center",
                    "city": "Lake Naomie",
                    "state": "Idaho",
                    "postal_code": "07711-2842",
                    "country": "Cape Verde"
                },
                "bill_details": [
                    {
                        "id": "1",
                        "voucher_no": "10",
                        "bill_no": "9",
                        "amount": "500.00"
                    }
                ],
                "type": "pay_bill",
                "status": "4",
                "particulars": "Paying Bill",
                "trn_by": "Cash",
                "created_at": "2020-03-24",
                "attachments": [
                    null
                ],
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/pay-bills",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-bills"
                    }
                }
            }

## Void Pay Bill [/pay-bills/{id}/void/]

+ Parameters
    + id (string) - id of the Pay Bill in the form of an string

### Void a Pay Bill [POST]

Voids a particular Pay Bill

+ Request (application/json)
+ Response 204 (application/json)

# Group Purchases


## Purchase List [/purchases/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Purchases [GET]

Fetches all available purchases with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "editable": 1,
                    "vendor_id": 6,
                    "voucher_no": 6,
                    "vendor_name": "Christine Tillman",
                    "date": "2020-03-23",
                    "due_date": "2020-03-23",
                    "line_items": [
                        {
                            "product_id": "4",
                            "qty": "1",
                            "price": "200.00",
                            "amount": "200.00",
                            "name": "Dry cleaning",
                            "product_type_id": "1",
                            "category_id": "4",
                            "vendor": "6",
                            "cost_price": "200.00",
                            "unit_price": "250.00",
                            "line_total": "200.00"
                        }
                    ],
                    "type": "purchase",
                    "ref": "PUR001",
                    "billing_address": "street_1: Constantin Creek; street_2: 56306 Kadin Fields; city: Roweville; state: NY; postal_code: 86336; country: US; ",
                    "status": "2",
                    "purchase_order": "0",
                    "amount": "200.00",
                    "created_at": "2020-03-23",
                    "due": "-200.00",
                    "attachments": [],
                    "particulars": "purchase products",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/purchases",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases"
                        }
                    }
                }
            ]

## Purchase List [/purchases]

### Create A Purchase [POST]

    Model (application/json)

    {
        "vendor_id": 6,
        "vendor_name": "Christine Tillman",
        "trn_date": "2020-03-23",
        "due_date": "2020-03-23",
        "ref": "PUR001",
        "billing_address": "Constantin Creek, 56306 Kadin Fields Roweville New York, 86336 United States (US)",
        "line_items": [
            {
                "product_id": "4",
                "qty": 1,
                "unit_price": "200.00",
                "item_total": "200.00"
            }
        ],
        "particulars": "purchase products",
        "attachments": [],
        "type": "purchase",
        "status": 2,
        "purchase_order": 0
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "editable": 1,
                "vendor_id": 6,
                "voucher_no": 6,
                "vendor_name": "Christine Tillman",
                "date": "2020-03-23",
                "due_date": "2020-03-23",
                "line_items": [
                    {
                        "product_id": "4",
                        "qty": "1",
                        "price": "200.00",
                        "amount": "200.00",
                        "name": "Dry cleaning",
                        "product_type_id": "1",
                        "category_id": "4",
                        "vendor": "6",
                        "cost_price": "200.00",
                        "unit_price": "250.00",
                        "line_total": "200.00"
                    }
                ],
                "type": "purchase",
                "ref": "PUR001",
                "billing_address": "street_1: Constantin Creek; street_2: 56306 Kadin Fields; city: Roweville; state: NY; postal_code: 86336; country: US; ",
                "status": "2",
                "purchase_order": "0",
                "amount": "200.00",
                "created_at": "2020-03-23",
                "due": "-200.00",
                "attachments": [],
                "particulars": "purchase products",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/purchases",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases"
                    }
                }
            }


## Manage Single Purchase [/purchases/{id}]

+ Parameters
    + id (string) - id of the purchase in the form of an string

### Retrieve A Purchase [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "editable": 1,
                "vendor_id": 6,
                "voucher_no": 6,
                "vendor_name": "Christine Tillman",
                "date": "2020-03-23",
                "due_date": "2020-03-23",
                "line_items": [
                    {
                        "product_id": "4",
                        "qty": "1",
                        "price": "200.00",
                        "amount": "200.00",
                        "name": "Dry cleaning",
                        "product_type_id": "1",
                        "category_id": "4",
                        "vendor": "6",
                        "cost_price": "200.00",
                        "unit_price": "250.00",
                        "line_total": "200.00"
                    }
                ],
                "type": "purchase",
                "ref": "PUR001",
                "billing_address": "street_1: Constantin Creek; street_2: 56306 Kadin Fields; city: Roweville; state: NY; postal_code: 86336; country: US; ",
                "status": "2",
                "purchase_order": "0",
                "amount": "200.00",
                "created_at": "2020-03-23",
                "due": "-200.00",
                "attachments": [],
                "particulars": "purchase products",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/purchases",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases"
                    }
                }
            }

### Update A Purchase [PUT]

    Model (application/json)

    {
        "vendor_id": 6,
        "vendor_name": "Christine Tillman",
        "trn_date": "2020-03-23",
        "due_date": "2020-03-23",
        "ref": "PUR001",
        "billing_address": "Constantin Creek, 56306 Kadin Fields Roweville New York, 86336 United States (US)",
        "line_items": [
            {
                "product_id": "4",
                "qty": 1,
                "unit_price": "200.00",
                "item_total": "200.00"
            }
        ],
        "particulars": "purchase products",
        "attachments": [],
        "type": "purchase",
        "status": 2,
        "purchase_order": 0
    }

+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "editable": 1,
                "vendor_id": 6,
                "voucher_no": 6,
                "vendor_name": "Christine Tillman",
                "date": "2020-03-23",
                "due_date": "2020-03-23",
                "line_items": [
                    {
                        "product_id": "4",
                        "qty": "1",
                        "price": "200.00",
                        "amount": "200.00",
                        "name": "Dry cleaning",
                        "product_type_id": "1",
                        "category_id": "4",
                        "vendor": "6",
                        "cost_price": "200.00",
                        "unit_price": "250.00",
                        "line_total": "200.00"
                    }
                ],
                "type": "purchase",
                "ref": "PUR001",
                "billing_address": "street_1: Constantin Creek; street_2: 56306 Kadin Fields; city: Roweville; state: NY; postal_code: 86336; country: US; ",
                "status": "2",
                "purchase_order": "0",
                "amount": "200.00",
                "created_at": "2020-03-23",
                "due": "-200.00",
                "attachments": [],
                "particulars": "purchase products",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/purchases",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases"
                    }
                }
            }

## Void Purchases [/purchases/{id}/void/]

+ Parameters
    + id (string) - id of the purchase in the form of an string

### Void a Purchase [POST]

Voids a particular purchase

+ Request (application/json)
+ Response 204 (application/json)


## Due Purchases from a vendor [/purchases/due/{id}]

+ Parameters
    + id (string) - id of the vendor in the form of an string

### List All Due Purchases [GET]

Fetches all due Purchases from a vendor

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "editable": 0,
                    "vendor_id": 6,
                    "voucher_no": 6,
                    "vendor_name": "Christine Tillman",
                    "date": "2020-03-23",
                    "due_date": "2020-03-23",
                    "line_items": [],
                    "type": "purchase",
                    "ref": "PUR001",
                    "billing_address": "street_1: Constantin Creek; street_2: 56306 Kadin Fields; city: Roweville; state: NY; postal_code: 86336; country: US; ",
                    "status": "2",
                    "purchase_order": "0",
                    "amount": "200.00",
                    "created_at": "2020-03-23",
                    "due": "200.00",
                    "attachments": [],
                    "particulars": "purchase products",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/purchases",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/purchases"
                        }
                    }
                }
            ]


# Group Pay Purchases

## Pay Purchases List [/pay-purchases/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Pay Purchases [GET]

Fetches all available pay-purchases with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "voucher_no": 7,
                    "vendor_id": 6,
                    "trn_date": "2020-03-23",
                    "purchase_details": [
                        {
                            "id": "1",
                            "voucher_no": "7",
                            "vendor_id": "6",
                            "vendor_name": "Christine Tillman",
                            "trn_date": "2020-03-23",
                            "amount": "200.00",
                            "trn_by": "1",
                            "trn_by_ledger_id": "7",
                            "particulars": "Paying for the purchase",
                            "attachments": "a:0:{}",
                            "status": "4",
                            "created_at": "2020-03-23",
                            "created_by": "1",
                            "updated_at": "2020-03-23",
                            "updated_by": "1",
                            "purchase_no": "6"
                        }
                    ],
                    "amount": 200,
                    "particulars": "Paying for the purchase",
                    "attachments": [],
                    "status": "4",
                    "created_at": "2020-03-23",
                    "trn_by": "Cash",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/pay-purchases",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases"
                        }
                    }
                }
            ]

## Pay Purchases List [/pay-purchases]

### Create A Pay Purchase [POST]

    Model (application/json)

    {
        "vendor_id": 6,
        "ref": "PAY-PURCHASE",
        "trn_date": "2020-03-23",
        "purchase_details": [
            {
                "id": 1,
                "voucher_no": 6,
                "due_date": "2020-03-23",
                "total": 200,
                "due": 200,
                "line_total": 200
            }
        ],
        "attachments": [],
        "type": "pay_purchase",
        "status": 4,
        "particulars": "Paying for the purchase",
        "deposit_to": "7",
        "trn_by": "1",
        "check_no": null,
        "name": ""
    }

+ Response 201 (application/json)
    + Body

            {
                    "id": 1,
                    "voucher_no": 7,
                    "vendor_id": 6,
                    "trn_date": "2020-03-23",
                    "purchase_details": [
                        {
                            "id": "1",
                            "voucher_no": "7",
                            "vendor_id": "6",
                            "vendor_name": "Christine Tillman",
                            "trn_date": "2020-03-23",
                            "amount": "200.00",
                            "trn_by": "1",
                            "trn_by_ledger_id": "7",
                            "particulars": "Paying for the purchase",
                            "attachments": "a:0:{}",
                            "status": "4",
                            "created_at": "2020-03-23",
                            "created_by": "1",
                            "updated_at": "2020-03-23",
                            "updated_by": "1",
                            "purchase_no": "6"
                        }
                    ],
                    "amount": 200,
                    "particulars": "Paying for the purchase",
                    "attachments": [],
                    "status": "4",
                    "created_at": "2020-03-23",
                    "trn_by": "Cash",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/pay-purchases",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases"
                        }
                    }
                }

## Manage Single Pay Purchase [/pay-purchases/{id}]

+ Parameters
    + id (string) - id of the pay-purchases in the form of an string

### Retrieve A Pay Purchase [GET]

+ Response 200 (application/json)
    + Body

            {
                    "id": 1,
                    "voucher_no": 7,
                    "vendor_id": 6,
                    "trn_date": "2020-03-23",
                    "purchase_details": [
                        {
                            "id": "1",
                            "voucher_no": "7",
                            "vendor_id": "6",
                            "vendor_name": "Christine Tillman",
                            "trn_date": "2020-03-23",
                            "amount": "200.00",
                            "trn_by": "1",
                            "trn_by_ledger_id": "7",
                            "particulars": "Paying for the purchase",
                            "attachments": "a:0:{}",
                            "status": "4",
                            "created_at": "2020-03-23",
                            "created_by": "1",
                            "updated_at": "2020-03-23",
                            "updated_by": "1",
                            "purchase_no": "6"
                        }
                    ],
                    "amount": 200,
                    "particulars": "Paying for the purchase",
                    "attachments": [],
                    "status": "4",
                    "created_at": "2020-03-23",
                    "trn_by": "Cash",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/pay-purchases",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases"
                        }
                    }
                }

### Update A Pay Purchase [PUT]

    Model (application/json)

    {
        "vendor_id": 6,
        "ref": "PAY-PURCHASE",
        "trn_date": "2020-03-23",
        "purchase_details": [
            {
                "id": 1,
                "voucher_no": 6,
                "due_date": "2020-03-23",
                "total": 200,
                "due": 200,
                "line_total": 200
            }
        ],
        "attachments": [],
        "type": "pay_purchase",
        "status": 4,
        "particulars": "Paying for the purchase",
        "deposit_to": "7",
        "trn_by": "1",
        "check_no": null,
        "name": ""
    }

+ Response 201 (application/json)
    + Body

                {
                    "id": 1,
                    "voucher_no": 7,
                    "vendor_id": 6,
                    "trn_date": "2020-03-23",
                    "purchase_details": [
                        {
                            "id": "1",
                            "voucher_no": "7",
                            "vendor_id": "6",
                            "vendor_name": "Christine Tillman",
                            "trn_date": "2020-03-23",
                            "amount": "200.00",
                            "trn_by": "1",
                            "trn_by_ledger_id": "7",
                            "particulars": "Paying for the purchase",
                            "attachments": "a:0:{}",
                            "status": "4",
                            "created_at": "2020-03-23",
                            "created_by": "1",
                            "updated_at": "2020-03-23",
                            "updated_by": "1",
                            "purchase_no": "6"
                        }
                    ],
                    "amount": 200,
                    "particulars": "Paying for the purchase",
                    "attachments": [],
                    "status": "4",
                    "created_at": "2020-03-23",
                    "trn_by": "Cash",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/pay-purchases",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/pay-purchases"
                        }
                    }
                }

## Void Pay Purchases [/pay-purchases/{id}/void/]

+ Parameters
    + id (string) - id of the pay-purchase in the form of an string

### Void a Pay Purchase [POST]

Voids a particular pay-purchase

+ Request (application/json)
+ Response 204 (application/json)

# Group Journals


## Journal List [/journals/{?per_page,page,search}]

+ Parameters

    + per_page: 20 (number, optional) - The number of results per page.
        + Default: `20`
    + page: 1 (number, optional) - The current page number of results.
        + Default: `1`
    + search (string, optional) - The search keyword.

### List All Journals [GET]

Fetches all available journals with pagination

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "voucher_no": "1",
                    "particulars": "Initial Journal Entry",
                    "ref": null,
                    "trn_date": "2020-03-20",
                    "line_items": [
                        {
                            "ledger_id": "7",
                            "account": "Cash",
                            "particulars": "Cash In Hand",
                            "debit": "10000.00",
                            "credit": "0.00"
                        },
                        {
                            "ledger_id": "94",
                            "account": "Sales Revenue",
                            "particulars": "Revenue From Sale",
                            "debit": "0.00",
                            "credit": "10000.00"
                        }
                    ],
                    "attachments": null,
                    "total": 10000,
                    "created_at": null,
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/journals",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/journals/1"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/journals"
                        }
                    }
                }
            ]

## Journal List [/journals/]

### Create A Journal [POST]

    Model (application/json)

    {
        "trn_date": "2020-03-20",
        "ref": "another jounrnal",
        "line_items": [
            {
                "ledger_id": "7",
                "particulars": "cash added",
                "debit": "1000",
                "credit": 0
            },
            {
                "ledger_id": "86",
                "particulars": "equity",
                "debit": 0,
                "credit": "1000"
            }
        ],
        "attachments": [],
        "type": "journal",
        "particulars": ""
    }

+ Response 201 (application/json)
    + Body

            {
                "id": "2",
                "voucher_no": "4",
                "particulars": "Journal created with voucher no 4",
                "ref": "another jounrnal",
                "trn_date": "2020-03-20",
                "line_items": [
                    {
                        "ledger_id": "7",
                        "account": "Cash",
                        "particulars": "cash added",
                        "debit": "1000.00",
                        "credit": "0.00"
                    },
                    {
                        "ledger_id": "86",
                        "account": "Owner's Equity",
                        "particulars": "equity",
                        "debit": "0.00",
                        "credit": "1000.00"
                    }
                ],
                "attachments": [],
                "total": 1000,
                "created_at": "2020-03-20",
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/journals",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/journals/2"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/journals"
                    }
                }
            }


## Manage Single Journal [/journals/{id}]

+ Parameters
    + id (string) - id of the journal in the form of an string

### Retrieve A Journal [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": "1",
                "voucher_no": "1",
                "particulars": "Initial Journal Entry",
                "ref": null,
                "trn_date": "2020-03-20",
                "line_items": [
                    {
                        "ledger_id": "7",
                        "account": "Cash",
                        "particulars": "Cash In Hand",
                        "debit": "10000.00",
                        "credit": "0.00"
                    },
                    {
                        "ledger_id": "94",
                        "account": "Sales Revenue",
                        "particulars": "Revenue From Sale",
                        "debit": "0.00",
                        "credit": "10000.00"
                    }
                ],
                "attachments": null,
                "total": 10000,
                "created_at": null,
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/journals",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/journals/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/journals"
                    }
                }
            }

## Next Journal number [/journals/next]

### Retrieve the index number of next Journal [GET]

+ Response 200 (application/json)
    + Body

            {
                "id": 2
            }

# Group Transactions


## Retrieve Transaction type of a voucher number [/transactions/type/{voucher_no}]

+ Parameters
    + voucher_no (string) - id of the transaction in the form of an string

### Retrieve The Type of a Transaction [GET]

+ Response 200 (application/json)
    + Body

            {
                "journal"
            }


## Retrieve Transaction statuses [/transactions/statuses]

### Retrieve all The Statuses of a Transactions [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "0",
                    "type_name": "all",
                    "name": "All",
                    "slug": "all"
                },
                {
                    "id": "1",
                    "name": "Draft",
                    "slug": "draft"
                },
                {
                    "id": "2",
                    "name": "Awaiting Payment",
                    "slug": "awaiting_payment"
                },
                {
                    "id": "3",
                    "name": "Pending",
                    "slug": "pending"
                },
                {
                    "id": "4",
                    "name": "Paid",
                    "slug": "paid"
                },
                {
                    "id": "5",
                    "name": "Partially Paid",
                    "slug": "partially_paid"
                },
                {
                    "id": "6",
                    "name": "Approved",
                    "slug": "approved"
                },
                {
                    "id": "7",
                    "name": "Closed",
                    "slug": "closed"
                },
                {
                    "id": "8",
                    "name": "Void",
                    "slug": "void"
                }
            ]


## Retrieve Sales Transactions [/transactions/sales]

### Retrieve all The Sales Transactions [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "5",
                    "type": "invoice",
                    "editable": "1",
                    "inv_cus_id": "20",
                    "inv_cus_name": "Clarabelle Larson",
                    "pay_cus_name": null,
                    "invoice_trn_date": "2020-03-20",
                    "payment_trn_date": null,
                    "ref": null,
                    "due_date": "2020-03-20",
                    "estimate": "0",
                    "sales_amount": "54.00",
                    "due": "54.00",
                    "payment_amount": null,
                    "inv_status": "2",
                    "pay_status": null,
                    "status": "Awaiting Payment",
                    "status_code": "2",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/5"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "3",
                    "type": "payment",
                    "editable": "0",
                    "inv_cus_id": null,
                    "inv_cus_name": null,
                    "pay_cus_name": "Zetta Kreiger",
                    "invoice_trn_date": null,
                    "payment_trn_date": "2020-03-20",
                    "ref": "ref",
                    "due_date": null,
                    "estimate": null,
                    "sales_amount": null,
                    "due": null,
                    "payment_amount": "59.50",
                    "inv_status": null,
                    "pay_status": "4",
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/3"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "2",
                    "type": "invoice",
                    "editable": "1",
                    "inv_cus_id": "25",
                    "inv_cus_name": "Zetta Kreiger",
                    "pay_cus_name": null,
                    "invoice_trn_date": "2020-03-20",
                    "payment_trn_date": null,
                    "ref": null,
                    "due_date": "2020-03-20",
                    "estimate": "0",
                    "sales_amount": "59.50",
                    "due": "0.00",
                    "payment_amount": null,
                    "inv_status": "4",
                    "pay_status": null,
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/2"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                }
            ]


## Retrieve Expenses Transactions [/transactions/expenses]

### Retrieve all The Expenses Transactions [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "14",
                    "type": "expense",
                    "vendor_id": null,
                    "vendor_name": null,
                    "pay_bill_vendor_name": null,
                    "expense_people_name": "Hailee West",
                    "bill_trn_date": null,
                    "pay_bill_trn_date": null,
                    "expense_trn_date": "2019-08-01",
                    "due_date": null,
                    "amount": null,
                    "ref": null,
                    "exp_ref": "",
                    "pay_bill_amount": null,
                    "expense_amount": "300.00",
                    "due": null,
                    "bill_status": null,
                    "pay_bill_status": null,
                    "expense_status": "4",
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/14"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "13",
                    "type": "check",
                    "vendor_id": null,
                    "vendor_name": null,
                    "pay_bill_vendor_name": null,
                    "expense_people_name": "Shemar Emmerich",
                    "bill_trn_date": null,
                    "pay_bill_trn_date": null,
                    "expense_trn_date": "2020-03-25",
                    "due_date": null,
                    "amount": null,
                    "ref": null,
                    "exp_ref": "",
                    "pay_bill_amount": null,
                    "expense_amount": "100.00",
                    "due": null,
                    "bill_status": null,
                    "pay_bill_status": null,
                    "expense_status": "4",
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/13"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "12",
                    "type": "expense",
                    "vendor_id": null,
                    "vendor_name": null,
                    "pay_bill_vendor_name": null,
                    "expense_people_name": "Bryce Keebler",
                    "bill_trn_date": null,
                    "pay_bill_trn_date": null,
                    "expense_trn_date": "2020-03-25",
                    "due_date": null,
                    "amount": null,
                    "ref": null,
                    "exp_ref": "Expense",
                    "pay_bill_amount": null,
                    "expense_amount": "470.00",
                    "due": null,
                    "bill_status": null,
                    "pay_bill_status": null,
                    "expense_status": "4",
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/12"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "10",
                    "type": "pay_bill",
                    "vendor_id": null,
                    "vendor_name": null,
                    "pay_bill_vendor_name": "Zetta Kreiger",
                    "expense_people_name": null,
                    "bill_trn_date": null,
                    "pay_bill_trn_date": "2020-03-24",
                    "expense_trn_date": null,
                    "due_date": null,
                    "amount": null,
                    "ref": null,
                    "exp_ref": null,
                    "pay_bill_amount": "500.00",
                    "expense_amount": null,
                    "due": null,
                    "bill_status": null,
                    "pay_bill_status": "4",
                    "expense_status": null,
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/10"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "9",
                    "type": "bill",
                    "vendor_id": "25",
                    "vendor_name": "Zetta Kreiger",
                    "pay_bill_vendor_name": null,
                    "expense_people_name": null,
                    "bill_trn_date": "2020-03-24",
                    "pay_bill_trn_date": null,
                    "expense_trn_date": null,
                    "due_date": "2020-03-24",
                    "amount": "500.00",
                    "ref": "Bill Ref",
                    "exp_ref": null,
                    "pay_bill_amount": null,
                    "expense_amount": null,
                    "due": "0.00",
                    "bill_status": "4",
                    "pay_bill_status": null,
                    "expense_status": null,
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/9"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                }
            ]


## Retrieve Purchases Transactions [/transactions/purchases]

### Retrieve all The Purchases Transactions [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "8",
                    "type": "purchase",
                    "vendor_id": "6",
                    "vendor_name": "Christine Tillman",
                    "pay_bill_vendor_name": null,
                    "bill_trn_date": "2020-03-24",
                    "pay_bill_trn_date": null,
                    "due_date": "2020-03-24",
                    "amount": "500.00",
                    "ref": "Another Purchase",
                    "purchase_order": "0",
                    "pay_bill_amount": null,
                    "due": "500.00",
                    "purchase_status": "2",
                    "pay_purchase_status": null,
                    "status": "Awaiting Payment",
                    "status_code": "2",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/8"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "7",
                    "type": "pay_purchase",
                    "vendor_id": null,
                    "vendor_name": null,
                    "pay_bill_vendor_name": "Christine Tillman",
                    "bill_trn_date": null,
                    "pay_bill_trn_date": "2020-03-23",
                    "due_date": null,
                    "amount": null,
                    "ref": null,
                    "purchase_order": null,
                    "pay_bill_amount": "200.00",
                    "due": null,
                    "purchase_status": null,
                    "pay_purchase_status": "4",
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/7"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                },
                {
                    "id": "6",
                    "type": "purchase",
                    "vendor_id": "6",
                    "vendor_name": "Christine Tillman",
                    "pay_bill_vendor_name": null,
                    "bill_trn_date": "2020-03-23",
                    "pay_bill_trn_date": null,
                    "due_date": "2020-03-23",
                    "amount": "200.00",
                    "ref": "PUR001",
                    "purchase_order": "0",
                    "pay_bill_amount": null,
                    "due": "0.00",
                    "purchase_status": "4",
                    "pay_purchase_status": null,
                    "status": "Paid",
                    "status_code": "4",
                    "namespace": "erp/v1",
                    "rest_base": "accounting/v1/transactions",
                    "_links": {
                        "self": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions/6"
                        },
                        "collection": {
                            "href": "https://example.com/wp-json/erp/v1/accounting/v1/transactions"
                        }
                    }
                }
            ]


## Retrieve Sales Chart Statuses [/transactions/sales/chart-status]

### Retrieve Sales Chart Status Data [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "sub_total": "1",
                    "type_name": "Awaiting Payment"
                },
                {
                    "sub_total": "1",
                    "type_name": "Paid"
                }
            ]


## Retrieve Sales Chart Payments [/transactions/sales/chart-payment]

### Retrieve Sales Chart Payment Data [GET]

+ Response 200 (application/json)
    + Body

            {
                "received": "59.50",
                "outstanding": "54.00"
            }


## Get Incomes Expense Overview [/transactions/income-expense-overview]

### Retrieve Incomes Expense Overview Data [GET]

+ Response 200 (application/json)
    + Body

            {
                "thisMonth": {
                    "labels": [
                        "20-03"
                    ],
                    "income": [
                        100
                    ],
                    "expense": [
                        0,
                        200,
                        1000,
                        570
                    ]
                },
                "lastMonth": {
                    "labels": [],
                    "income": [],
                    "expense": []
                },
                "thisYear": {
                    "labels": [
                        "Jan",
                        "Feb",
                        "Mar",
                        "Apr",
                        "May",
                        "Jun",
                        "Jul",
                        "Aug",
                        "Sep",
                        "Oct",
                        "Nov",
                        "Dec"
                    ],
                    "income": [
                        0,
                        0,
                        100,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "expense": [
                        0,
                        0,
                        1770,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                "lastYear": {
                    "labels": [
                        "Jan",
                        "Feb",
                        "Mar",
                        "Apr",
                        "May",
                        "Jun",
                        "Jul",
                        "Aug",
                        "Sep",
                        "Oct",
                        "Nov",
                        "Dec"
                    ],
                    "income": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ],
                    "expense": [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        300,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            }


## Retrieve Expenses Chart Payments [/transactions/expense/chart-expense]

### Retrieve Expenses Chart Payment Data [GET]

+ Response 200 (application/json)
    + Body

            {
                "paid": 1370,
                "payable": 0
            }


## Retrieve Expenses Chart Statuses [/transactions/expense/chart-status]

### Retrieve Expenses Chart Status Data [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "type_name": "Paid",
                    "sub_total": "1"
                }
            ]


## Retrieve Purchases Chart Payments [/transactions/purchase/chart-purchase]

### Retrieve Purchases Chart Payment Data [GET]

+ Response 200 (application/json)
    + Body

            {
                "paid": "200.00",
                "payable": "500.00"
            }


## Retrieve Purchases Chart Statuses [/transactions/purchase/chart-status]

### Retrieve Purchases Chart Status Data [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "type_name": "Awaiting Payment",
                    "sub_total": "1"
                },
                {
                    "type_name": "Paid",
                    "sub_total": "1"
                }
            ]


## Retrieve Payment Methods [/transactions/payment-methods]

### Retrieve Available Payment Methods data [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "1",
                    "name": "Cash"
                },
                {
                    "id": "2",
                    "name": "Bank"
                },
                {
                    "id": "3",
                    "name": "Check"
                }
            ]


## Retrieve People Transaction Data [/transactions/people-chart/trn-amount/{id}]

+ Parameters
    + id (string) - id of the people in the form of an string

### Retrieve Purchases Chart Payment Data [GET]

+ Response 200 (application/json)
    + Body

            {
                "paid": 559.5,
                "payable": 0
            }


## Retrieve Purchases Chart Statuses [/transactions/people-chart/trn-status/{id}]

+ Parameters
    + id (string) - id of the people in the form of an string

### Retrieve Purchases Chart Status Data [GET]

+ Response 200 (application/json)
    + Body

            [
                {
                    "type_name": "Paid",
                    "sub_total": 2
                },
                {
                    "type_name": "Paid",
                    "sub_total": 2
                }
            ]


# Group Transaction Pdf & Mail

## Send a transaction copy by mail [transactions/send-pdf/{id}]

+ Parameters
    + id (string) - id of the transaction to be sent as pdf in the form of an string

### Send a transaction copy by mail as pdf [POST]

    Model

    {
        "trn_data": {
            "editable": "1",
            "currency": "148",
            "id": "1",
            "voucher_no": "2",
            "customer_id": "25",
            "customer_name": "Zetta Kreiger",
            "trn_date": "2020-03-20",
            "due_date": "2020-03-20",
            "billing_address": "Hilpert Keys, 65668 Gutkowski Center Lake Naomie Idaho, 07711-2842 Cape Verde",
            "amount": "50.00",
            "discount": "0.00",
            "discount_type": "discount-percent",
            "tax": "9.50",
            "estimate": "0",
            "attachments": [],
            "status": "4",
            "particulars": "Invoice created with voucher no 2",
            "created_at": "2020-03-20",
            "debit": "59.50",
            "credit": "0.00",
            "line_items": [
                {
                    "product_id": "1",
                    "qty": "1",
                    "unit_price": "50.00",
                    "discount": "0.00",
                    "tax": "9.50",
                    "item_total": "50.00",
                    "ecommerce_type": null,
                    "tax_rate": "19.00",
                    "name": null,
                    "product_type_id": null,
                    "category_id": null,
                    "vendor": null,
                    "cost_price": null,
                    "sale_price": null,
                    "tax_cat_id": null,
                    "line_total": 59.5
                }
            ],
            "tax_rate_id": "4",
            "total_due": "0.00",
            "pdf_link": "https://example.com/wp-content/uploads/erp-pdfs/voucher_2.pdf",
            "readonly_url": "https://example.com/wperp?query=readonly_invoice&trans_id=2&auth=c19b2bc641851c073e99e8dca98ffe230dcfbb6f0b8fa0f351215996840a49d6",
            "namespace": "erp/v1",
            "rest_base": "accounting/v1/invoices",
            "_links": {
                "self": {
                    "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices/1"
                },
                "collection": {
                    "href": "https://example.com/wp-json/erp/v1/accounting/v1/invoices"
                }
            }
        },
        "type": "invoice",
        "receiver": [
            "feil.fatima@hessel.com"
        ],
        "subject": "Invoice",
        "message": "Here is the invoice attached",
        "attachment": true
    }


+ Response 200 (application/json)
    + Body

            {
                "id": 1,
                "voucher_no": {
                    "id": "1",
                    "voucher_no": "15",
                    "particulars": "Invoice created with voucher no 15",
                    "amount": "5.00",
                    "trn_date": "2020-03-29",
                    "voucher_type": "debit",
                    "trn_by": "1",
                    "agency_id": "1",
                    "ledger_id": "7",
                    "created_at": "2020-03-29"
                },
                "agency_id": "Arizona Revenue Department",
                "trn_date": "2020-03-29",
                "particulars": "",
                "amount": 5,
                "trn_by": "1",
                "ledger_id": "Cash",
                "voucher_type": "debit",
                "created_at": null,
                "namespace": "erp/v1",
                "rest_base": "accounting/v1/taxes",
                "_links": {
                    "self": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes/1"
                    },
                    "collection": {
                        "href": "https://example.com/wp-json/erp/v1/accounting/v1/taxes"
                    }
                }
            }

# Group Reports


## Trial Balance [/reports/trial-balance]

Trial Balance Report

### Show All Trial Balance [GET]

Fetches Trial Balance Report

+ Response 200 (application/json)
    + Body

            {
                "total_credit": -11313.5,
                "rows": {
                    "4": {
                        "4": {
                            "id": "94",
                            "name": "Sales Revenue",
                            "balance": -100,
                            "chart_id": "4"
                        }
                    },
                    "5": {
                        "5": {
                            "id": "103",
                            "name": "Purchase",
                            "balance": 700,
                            "chart_id": "5"
                        },
                        "1": {
                            "id": "24",
                            "name": "Costs of Goods Sold",
                            "balance": 450,
                            "chart_id": "5"
                        },
                        "2": {
                            "id": "30",
                            "name": "Postage & Delivary",
                            "balance": 100,
                            "chart_id": "5"
                        },
                        "3": {
                            "id": "31",
                            "name": "General Expenses",
                            "balance": 520,
                            "chart_id": "5"
                        }
                    },
                    "1": {
                        "6": {
                            "additional": [
                                {
                                    "id": "105",
                                    "name": "Bank Account",
                                    "balance": 100,
                                    "chart_id": "7"
                                }
                            ],
                            "name": "Cash at Bank",
                            "balance": 100,
                            "chart_id": "1"
                        },
                        "0": {
                            "id": "7",
                            "name": "Cash",
                            "balance": 9389.5,
                            "chart_id": "1"
                        },
                        "11": {
                            "name": "Accounts Receivable",
                            "balance": 54,
                            "chart_id": "1"
                        }
                    },
                    "2": {
                        "8": {
                            "name": "Sales Tax Payable",
                            "balance": -13.5,
                            "chart_id": "2"
                        },
                        "10": {
                            "name": "Accounts Payable",
                            "balance": -500,
                            "chart_id": "2"
                        }
                    },
                    "3": {
                        "12": {
                            "name": "Owner's Capital",
                            "balance": -10700,
                            "chart_id": "3"
                        }
                    }
                },
                "total_debit": 11313.5
            }


## Income Statement [/reports/income-statements]

Income Statement Report

### Show All Income Statement [GET]

Fetches Income Statement Report

+ Response 200 (application/json)
    + Body

            {
                "rows1": [
                    {
                        "id": "94",
                        "name": "Sales Revenue",
                        "balance": 100
                    }
                ],
                "rows2": [
                    {
                        "id": "24",
                        "name": "Costs of Goods Sold",
                        "balance": 450
                    },
                    {
                        "id": "30",
                        "name": "Postage & Delivary",
                        "balance": 100
                    },
                    {
                        "id": "31",
                        "name": "General Expenses",
                        "balance": 520
                    },
                    {
                        "id": "103",
                        "name": "Purchase",
                        "balance": 700
                    }
                ],
                "income": 100,
                "expense": 1770,
                "loss": -1670,
                "raw_balance": -1670,
                "balance": -1670
            }


## Sales Tax [/reports/sales-taxes/{?agency_id,start_date,end_date}]

    + agency_id (string,required): The Tax Agency id.
    + start_date (string,required): Start Date.
    + end_date (string,required): End Date.

Sales Tax Report

### Show Sales Tax Report of an Agency [GET]

Fetches Sales Tax Report by Agency

+ Response 200 (application/json)
    + Body

            {
                "details": [
                    {
                        "trn_no": null,
                        "particulars": "Opening Balance =",
                        "debit": null,
                        "credit": null,
                        "trn_date": "2020-03-01",
                        "balance": "0 Dr",
                        "created_at": null
                    },
                    {
                        "trn_no": "2",
                        "particulars": "sales",
                        "debit": "0.00",
                        "credit": "6.00",
                        "trn_date": "2020-03-20",
                        "created_at": "2020-03-20",
                        "balance": "6 Cr"
                    }
                ],
                "extra": {
                    "total_debit": 0,
                    "total_credit": 6
                }
            }


## Balance Sheet [/reports/balance-sheets]
Balance Sheet Report

### Show All Balance Sheet [GET]

Fetches Balance Sheet Report

+ Response 200 (application/json)
    + Body

            {
                "total_liability": 0,
                "total_asset": -300,
                "rows1": [
                    {
                        "id": "7",
                        "name": "Cash",
                        "balance": -300
                    },
                    {
                        "name": "Accounts Receivable",
                        "balance": 0
                    },
                    {
                        "additional": [],
                        "name": "Cash at Bank",
                        "balance": 0
                    }
                ],
                "owners_equity": -300,
                "rows3": [
                    {
                        "id": "86",
                        "name": "Owner's Capital",
                        "balance": 0
                    },
                    {
                        "name": "Loss",
                        "balance": 300,
                        "slug": "loss"
                    }
                ],
                "rows2": [
                    {
                        "name": "Accounts Payable",
                        "balance": 0
                    },
                    {
                        "additional": [],
                        "name": "Bank Loan",
                        "balance": 0
                    },
                    {
                        "name": "Sales Tax Payable",
                        "balance": 0,
                        "slug": "sales_tax"
                    }
                ],
                "total_equity": 300
            }


## Ledger Report [/reports/ledger-report/{?ledger_id,start_date,end_date}]

    + ledger_id (string,required): The Tax Agency id.
    + start_date (string,required): Start Date.
    + end_date (string,required): End Date.

Ledger Report

### Show Ledger Report of an Account [GET]

Fetches Ledger Report by Ledger Account

+ Response 200 (application/json)
    + Body

            {
                "details": [
                    {
                        "trn_no": null,
                        "particulars": "Opening Balance =",
                        "debit": null,
                        "credit": null,
                        "trn_date": "2020-03-01",
                        "balance": "300 Cr",
                        "created_at": null
                    },
                    {
                        "trn_no": "1",
                        "particulars": "Cash In Hand",
                        "debit": "10000.00",
                        "credit": "0.00",
                        "trn_date": "2020-03-20",
                        "created_at": null,
                        "balance": "9700 Cr"
                    },
                    {
                        "trn_no": "3",
                        "particulars": "payment received",
                        "debit": "59.50",
                        "credit": "0.00",
                        "trn_date": "2020-03-20",
                        "created_at": "2020-03-20",
                        "balance": "9759.5 Dr"
                    },
                    {
                        "trn_no": "4",
                        "particulars": "cash added",
                        "debit": "1000.00",
                        "credit": "0.00",
                        "trn_date": "2020-03-20",
                        "created_at": "2020-03-20",
                        "balance": "10759.5 Dr"
                    },
                    {
                        "trn_no": "7",
                        "particulars": "Paying for the purchase",
                        "debit": "0.00",
                        "credit": "200.00",
                        "trn_date": "2020-03-23",
                        "created_at": "2020-03-23",
                        "balance": "10559.5 Dr"
                    },
                    {
                        "trn_no": "10",
                        "particulars": "Paying Bill",
                        "debit": "0.00",
                        "credit": "500.00",
                        "trn_date": "2020-03-24",
                        "created_at": "2020-03-24",
                        "balance": "10059.5 Dr"
                    },
                    {
                        "trn_no": "11",
                        "particulars": "cash transfer",
                        "debit": "0.00",
                        "credit": "200.00",
                        "trn_date": "2020-03-25",
                        "created_at": "2020-03-25",
                        "balance": "9859.5 Dr"
                    },
                    {
                        "trn_no": "12",
                        "particulars": "office expenses",
                        "debit": "0.00",
                        "credit": "470.00",
                        "trn_date": "2020-03-25",
                        "created_at": "2020-03-25",
                        "balance": "9389.5 Dr"
                    }
                ],
                "extra": {
                    "total_debit": 11059.5,
                    "total_credit": 1370
                }
            }


